#===============================================================================
# Copyright 2014 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#===============================================================================

##  Content:
##     Intel(R) oneAPI Data Analytics Library examples creation and run
##******************************************************************************

help:
	@echo "Usage: nmake {{lib|dll|help}}"
	@echo "[example=name] [compiler=compiler_name] [mode=mode_name]"
	@echo
	@echo "name              - example name."
	@echo
	@echo "compiler_name     - the only supported compiler is dpcpp (default value)"
	@echo "                    Intel(R) oneAPI DPC++/C++ Compiler"
	@echo
	@echo "mode_name         - can be build or run. Default is run."

##------------------------------------------------------------------------------
## examples of using:
##
## nmake lib example=kmeans_dense_batch+  - build by Intel(R) C++ Compiler (as default)
##                                          and run kmeans_dense_batch example for 64-bit
##                                          applications, static linking
##
## make dll                               - build by Intel(R) oneAPI DPC++/C++ Compiler (as default)
##                                          and run all examples, dynamic linking
##
## make dll mode=build                    - build only (not run) by Intel(R) oneAPI DPC++/C++ Compiler
##                                          (as default) all examples, dynamic linking
##
## make help                              - show help
##
##------------------------------------------------------------------------------

{examples_list}

!IFNDEF example
example = $(EXAMPLES_LIST)
!ENDIF

!IF ("$(compiler)"!="dpcpp")
compiler = dpcpp
!ENDIF

!IFNDEF mode
mode = run
!ENDIF

!IFNDEF threading
threading = parallel
!ENDIF

!IFNDEF DAALROOT
DAALROOT = ..\..\..
!ENDIF

DAAL_PATH = $(DAALROOT)\lib\$(_IA)

!IF ("$(mode)"=="build")
RES = $(example:+=.exe)
!ENDIF

!IF ("$(mode)"=="run")
RES = $(example:+=.res)
!ENDIF

!IF ("$(compiler)"=="dpcpp" || "$(compiler)"=="clang")
CC=icx -fsycl
COPTS=/W3 /EHsc /std:c++17 -fsycl-device-code-split=per_kernel
OUT_OPTS=/Fe$(RES_DIR)
CLEAN=
!ENDIF

!IF ("$(RES_EXT)"=="lib")
DAAL_LIB="$(DAAL_PATH)\onedal_core.lib" "$(DAAL_PATH)\onedal_dpc.lib" "$(DAAL_PATH)\onedal_sycl.lib" "$(DAAL_PATH)\onedal_thread.lib"
RT_LIB=/link /ignore:4078 OpenCL.lib
LOPTS = $(DAAL_LIB) tbb12.lib tbbmalloc.lib $(RT_LIB)
!ELSE
DAAL_LIB="$(DAAL_PATH)\onedal_dpc_dll.lib"
RT_LIB=/link /ignore:4078
LOPTS = $(DAAL_LIB) $(RT_LIB)
!ENDIF

COPTS = -MD /Isource /I"$(DAALROOT)\include" $(COPTS) $(OUT_OPTS)
RES_DIR  =_results\$(compiler)_$(_IA)_$(RES_EXT)

lib libintel64:
	nmake comm_func $(RES) _IA=intel64 RES_EXT=lib compiler=$(compiler)

dll dllintel64:
	nmake comm_func $(RES) _IA=intel64 RES_EXT=dll compiler=$(compiler)

comm_func:
	if not exist _results md _results
	if not exist $(RES_DIR) md $(RES_DIR)

{make_build_rules}
{make_run_rules}

#-------------------------------------------------------------------------------
