Search.setIndex({"docnames": ["404", "api/algorithms/clustering/dbscan", "api/algorithms/clustering/index", "api/algorithms/clustering/kmeans", "api/algorithms/clustering/kmeans-init", "api/algorithms/covariance/covariance", "api/algorithms/covariance/index", "api/algorithms/decomposition/index", "api/algorithms/decomposition/pca", "api/algorithms/ensembles/decision-forest", "api/algorithms/ensembles/index", "api/algorithms/graph/connected-components", "api/algorithms/graph/index", "api/algorithms/graph/subgraph-isomorphism", "api/algorithms/index", "api/algorithms/kernel-functions/index", "api/algorithms/kernel-functions/linear-kernel", "api/algorithms/kernel-functions/polynomial-kernel", "api/algorithms/kernel-functions/rbf-kernel", "api/algorithms/kernel-functions/sigmoid-kernel", "api/algorithms/nearest-neighbors/index", "api/algorithms/nearest-neighbors/knn-classification", "api/algorithms/objective-function/index", "api/algorithms/objective-function/logloss", "api/algorithms/objective-function/objective-function", "api/algorithms/pairwise-distances/chebyshev-distance", "api/algorithms/pairwise-distances/cosine-distance", "api/algorithms/pairwise-distances/index", "api/algorithms/pairwise-distances/minkowski-distance", "api/algorithms/statistics/basic-statistics", "api/algorithms/statistics/index", "api/algorithms/svm/index", "api/algorithms/svm/svm", "api/data-management/accessor/column", "api/data-management/accessor/row", "api/data-management/accessors", "api/data-management/array", "api/data-management/data-source/csv", "api/data-management/data-sources", "api/data-management/graph-service", "api/data-management/graph-service/directed-adjacency-vector-graph", "api/data-management/graph-service/undirected-adjacency-vector-graph", "api/data-management/graph/directed-adjacency-vector-graph", "api/data-management/graph/undirected-adjacency-vector-graph", "api/data-management/graphs", "api/data-management/index", "api/data-management/table/csr", "api/data-management/table/homogen", "api/data-management/tables", "api/index", "api/spmd/communicator", "api/spmd/index", "api/spmd/overview", "bibliography", "contribution/coding_guide", "daal-interfaces", "daal/algorithms/association_rules/association-rules", "daal/algorithms/boosting/adaboost", "daal/algorithms/boosting/adaboost-multiclass", "daal/algorithms/boosting/brownboost", "daal/algorithms/boosting/index", "daal/algorithms/boosting/logitboost", "daal/algorithms/cholesky/cholesky", "daal/algorithms/covariance/computation-batch", "daal/algorithms/covariance/computation-distributed", "daal/algorithms/covariance/computation-online", "daal/algorithms/covariance/correlation-and-variance-covariance-matrices", "daal/algorithms/dbscan/computation-batch", "daal/algorithms/dbscan/computation-distributed", "daal/algorithms/dbscan/index", "daal/algorithms/decision_forest/decision-forest", "daal/algorithms/decision_forest/decision-forest-classification", "daal/algorithms/decision_forest/decision-forest-regression", "daal/algorithms/decision_forest/index", "daal/algorithms/decision_tree/decision-tree", "daal/algorithms/decision_tree/decision-tree-classification", "daal/algorithms/decision_tree/decision-tree-regression", "daal/algorithms/decision_tree/index", "daal/algorithms/distance/correlation", "daal/algorithms/distance/cosine", "daal/algorithms/distance/index", "daal/algorithms/distributions/bernoulli", "daal/algorithms/distributions/index", "daal/algorithms/distributions/normal", "daal/algorithms/distributions/uniform", "daal/algorithms/em/expectation-maximization", "daal/algorithms/engines/index", "daal/algorithms/engines/mcg59", "daal/algorithms/engines/mt19937", "daal/algorithms/engines/mt2203", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-classification", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-regression", "daal/algorithms/gradient_boosted_trees/index", "daal/algorithms/implicit_als/computation-batch", "daal/algorithms/implicit_als/computation-distributed-prediction", "daal/algorithms/implicit_als/computation-distributed-training", "daal/algorithms/implicit_als/implicit-alternating-least-squares", "daal/algorithms/implicit_als/initialization-batch", "daal/algorithms/implicit_als/initialization-distributed", "daal/algorithms/k_nearest_neighbors/k-nearest-neighbors-knn-classifier", "daal/algorithms/kernel_function/kernel-functions", "daal/algorithms/kmeans/computation-batch", "daal/algorithms/kmeans/computation-distributed", "daal/algorithms/kmeans/initialization-batch", "daal/algorithms/kmeans/initialization-distributed", "daal/algorithms/kmeans/k-means-clustering", "daal/algorithms/lasso_elastic_net/elastic-net", "daal/algorithms/lasso_elastic_net/index", "daal/algorithms/lasso_elastic_net/lasso", "daal/algorithms/lasso_elastic_net/lasso-elasticnet-computation", "daal/algorithms/linear_ridge_regression/index", "daal/algorithms/linear_ridge_regression/linear-regression", "daal/algorithms/linear_ridge_regression/linear-ridge-regression-computation", "daal/algorithms/linear_ridge_regression/ridge-regression", "daal/algorithms/logistic_regression/logistic-regression", "daal/algorithms/moments/computation-batch", "daal/algorithms/moments/computation-distributed", "daal/algorithms/moments/computation-online", "daal/algorithms/moments/moments-of-low-order", "daal/algorithms/naive_bayes/computation-batch", "daal/algorithms/naive_bayes/computation-distributed", "daal/algorithms/naive_bayes/computation-online", "daal/algorithms/naive_bayes/naive-bayes-classifier", "daal/algorithms/normalization/index", "daal/algorithms/normalization/min-max", "daal/algorithms/normalization/z-score", "daal/algorithms/optimization-solvers/iterative-solver", "daal/algorithms/optimization-solvers/objective-function", "daal/algorithms/optimization-solvers/objective-functions/computation", "daal/algorithms/optimization-solvers/objective-functions/cross-entropy", "daal/algorithms/optimization-solvers/objective-functions/logistic-loss", "daal/algorithms/optimization-solvers/objective-functions/mse", "daal/algorithms/optimization-solvers/objective-functions/sum-of-functions", "daal/algorithms/optimization-solvers/objective-functions/with-precomputed-characteristics", "daal/algorithms/optimization-solvers/optimization-solvers", "daal/algorithms/optimization-solvers/solvers/adaptive-subgradient-method", "daal/algorithms/optimization-solvers/solvers/computation", "daal/algorithms/optimization-solvers/solvers/coordinate-descent", "daal/algorithms/optimization-solvers/solvers/lbfgs", "daal/algorithms/optimization-solvers/solvers/stochastic-average-gradient-accelerated-method", "daal/algorithms/optimization-solvers/solvers/stochastic-gradient-descent-algorithm", "daal/algorithms/outlier_detection/index", "daal/algorithms/outlier_detection/multivariate", "daal/algorithms/outlier_detection/multivariate-bacon", "daal/algorithms/outlier_detection/univariate", "daal/algorithms/pca/computation-batch", "daal/algorithms/pca/computation-distributed", "daal/algorithms/pca/computation-online", "daal/algorithms/pca/principal-component-analysis", "daal/algorithms/pca/transform", "daal/algorithms/qr/qr-decomposition", "daal/algorithms/qr/qr-pivoted", "daal/algorithms/qr/qr-without-pivoting", "daal/algorithms/qr/without-pivoting/computation-batch-online", "daal/algorithms/qr/without-pivoting/computation-distributed", "daal/algorithms/quality_metrics/default-metric-set", "daal/algorithms/quality_metrics/default/for-binary-classification", "daal/algorithms/quality_metrics/default/for-linear-regression", "daal/algorithms/quality_metrics/default/for-multi-class-classification", "daal/algorithms/quality_metrics/default/for-pca", "daal/algorithms/quality_metrics/index", "daal/algorithms/quality_metrics/user-defined", "daal/algorithms/quantiles/index", "daal/algorithms/sorting/index", "daal/algorithms/stump/classification", "daal/algorithms/stump/index", "daal/algorithms/stump/regression", "daal/algorithms/svd/computation-batch-online", "daal/algorithms/svd/computation-distributed", "daal/algorithms/svd/singular-value-decomposition", "daal/algorithms/svm/support-vector-machine-classifier", "daal/algorithms/svm_multi_class/multi-class-classifier", "daal/analysis", "daal/cpu-vs-gpu", "daal/data-management/data-compression", "daal/data-management/data-dictionaries", "daal/data-management/data-management", "daal/data-management/data-model", "daal/data-management/data-serialization-and-deserialization", "daal/data-management/data-sources", "daal/data-management/essential-interfaces", "daal/data-management/generic-interfaces", "daal/data-management/numeric-tables", "daal/data-management/numeric-tables-types", "daal/services/callback-for-host-application", "daal/services/extracting-version-information", "daal/services/handling-errors", "daal/services/managing-computational-environment", "daal/services/managing-memory", "daal/services/services", "daal/training-prediction", "daal/usage/algorithms", "daal/usage/computation-modes", "daal/usage/index", "daal/usage/training-and-prediction/classification", "daal/usage/training-and-prediction/index", "daal/usage/training-and-prediction/recommendation-systems", "daal/usage/training-and-prediction/regression", "data-analytics-pipeline", "deprecation", "examples", "examples/cpp", "examples/cpp/basic_statistics_dense_batch", "examples/cpp/column_accessor_homogen", "examples/cpp/connected_components_batch", "examples/cpp/cor_dense_batch", "examples/cpp/cov_dense_batch", "examples/cpp/csr_accessor", "examples/cpp/dbscan_brute_force_batch", "examples/cpp/df_cls_dense_batch", "examples/cpp/df_reg_dense_batch", "examples/cpp/directed_graph", "examples/cpp/graph_service_functions", "examples/cpp/jaccard_batch", "examples/cpp/jaccard_batch_app", "examples/cpp/kmeans_init_dense", "examples/cpp/kmeans_lloyd_dense_batch", "examples/cpp/knn_cls_brute_force_dense_batch", "examples/cpp/knn_cls_kd_tree_dense_batch", "examples/cpp/knn_search_brute_force_dense_batch", "examples/cpp/linear_kernel_dense_batch", "examples/cpp/linear_regression_dense_batch", "examples/cpp/logloss_dense_batch", "examples/cpp/louvain_batch", "examples/cpp/pca_dense_batch", "examples/cpp/pca_precomputed_dense_batch", "examples/cpp/polynomial_kernel_dense_batch", "examples/cpp/rbf_kernel_dense_batch", "examples/cpp/shortest_paths_batch", "examples/cpp/sigmoid_kernel_dense_batch", "examples/cpp/subgraph_isomorphism_batch", "examples/cpp/svm_multi_class_thunder_csr_batch", "examples/cpp/svm_multi_class_thunder_dense_batch", "examples/cpp/svm_nu_cls_thunder_csr_batch", "examples/cpp/svm_nu_cls_thunder_dense_batch", "examples/cpp/svm_nu_reg_thunder_csr_batch", "examples/cpp/svm_nu_reg_thunder_dense_batch", "examples/cpp/svm_reg_thunder_csr_batch", "examples/cpp/svm_reg_thunder_dense_batch", "examples/cpp/svm_two_class_smo_csr_batch", "examples/cpp/svm_two_class_smo_dense_batch", "examples/cpp/svm_two_class_thunder_csr_batch", "examples/cpp/svm_two_class_thunder_dense_batch", "examples/cpp/triangle_counting_batch", "examples/dpc", "examples/dpc/basic_statistics_dense_batch", "examples/dpc/column_accessor_homogen", "examples/dpc/cor_dense_batch", "examples/dpc/cov_dense_batch", "examples/dpc/dbscan_brute_force_batch", "examples/dpc/df_cls_hist_batch", "examples/dpc/df_cls_hist_batch_random", "examples/dpc/df_cls_traverse_model", "examples/dpc/df_reg_hist_batch", "examples/dpc/df_reg_hist_batch_random", "examples/dpc/df_reg_traverse_model", "examples/dpc/kmeans_init_dense", "examples/dpc/kmeans_lloyd_dense_batch", "examples/dpc/knn_cls_brute_force_dense_batch", "examples/dpc/knn_reg_brute_force_dense_batch", "examples/dpc/knn_search_brute_force_dense_batch", "examples/dpc/linear_kernel_dense_batch", "examples/dpc/linear_regression_dense_batch", "examples/dpc/pca_cor_dense_batch", "examples/dpc/pca_precomputed_cor_dense_batch", "examples/dpc/pca_precomputed_cov_dense_batch", "examples/dpc/rbf_kernel_dense_batch", "examples/dpc/svm_two_class_thunder_dense_batch", "includes/clustering/dbscan-examples", "includes/clustering/dbscan-introduction", "includes/clustering/dbscan-usage-examples", "includes/clustering/kmeans-examples", "includes/clustering/kmeans-init-examples", "includes/clustering/kmeans-init-introduction", "includes/clustering/kmeans-init-usage-examples", "includes/clustering/kmeans-introduction", "includes/clustering/kmeans-usage-examples", "includes/covariance/covariance-examples", "includes/covariance/covariance-introduction", "includes/data-management/array-usage-example", "includes/data-management/column-accessor-usage-example", "includes/data-management/csv-data-source-usage-example", "includes/data-management/row-accessor-usage-example", "includes/decomposition/pca-examples", "includes/decomposition/pca-introduction", "includes/decomposition/pca-usage-examples", "includes/ensembles/df-classification-examples", "includes/ensembles/df-introduction", "includes/ensembles/df-regression-examples", "includes/graph/connected-components-examples", "includes/graph/connected-components-introduction", "includes/graph/subgraph-isomorphism-examples", "includes/graph/subgraph-isomorphism-introduction", "includes/kernel-functions/linear-kernel-examples", "includes/kernel-functions/linear-kernel-introduction", "includes/kernel-functions/polynomial-kernel-examples", "includes/kernel-functions/polynomial-kernel-introduction", "includes/kernel-functions/rbf-kernel-examples", "includes/kernel-functions/rbf-kernel-introduction", "includes/kernel-functions/sigmoid-kernel-examples", "includes/kernel-functions/sigmoid-kernel-introduction", "includes/nearest-neighbors/knn-examples", "includes/nearest-neighbors/knn-introduction", "includes/nearest-neighbors/knn-usage-examples", "includes/objective-function/logloss-examples", "includes/objective-function/logloss-introduction", "includes/objective-function/objective-function-introduction", "includes/pairwise-distances/chebyshev-distance-introduction", "includes/pairwise-distances/cosine-distance-introduction", "includes/pairwise-distances/minkowski-distance-introduction", "includes/spmd/ccl-comm-usage-example", "includes/spmd/mpi-comm-usage-example", "includes/statistics/basic-statistics-examples", "includes/statistics/basic-statistics-introduction", "includes/statistics/basic-statistics-usage-examples", "includes/svm/svm-examples", "includes/svm/svm-introduction", "index", "installation", "legal", "oneapi-interfaces", "onedal/algorithms/clustering/dbscan", "onedal/algorithms/clustering/index", "onedal/algorithms/clustering/kmeans", "onedal/algorithms/clustering/kmeans-init", "onedal/algorithms/covariance/covariance", "onedal/algorithms/covariance/index", "onedal/algorithms/decomposition/index", "onedal/algorithms/decomposition/pca", "onedal/algorithms/ensembles/decision-forest", "onedal/algorithms/ensembles/index", "onedal/algorithms/graph/connected-components", "onedal/algorithms/graph/index", "onedal/algorithms/graph/subgraph-isomorphism", "onedal/algorithms/index", "onedal/algorithms/kernel-functions/index", "onedal/algorithms/kernel-functions/linear-kernel", "onedal/algorithms/kernel-functions/polynomial-kernel", "onedal/algorithms/kernel-functions/rbf-kernel", "onedal/algorithms/kernel-functions/sigmoid-kernel", "onedal/algorithms/nearest-neighbors/index", "onedal/algorithms/nearest-neighbors/knn", "onedal/algorithms/objective-function/index", "onedal/algorithms/objective-function/logloss", "onedal/algorithms/pairwise-distances/chebyshev-distance", "onedal/algorithms/pairwise-distances/cosine-distance", "onedal/algorithms/pairwise-distances/index", "onedal/algorithms/pairwise-distances/minkowski-distance", "onedal/algorithms/statistics/basic-statistics", "onedal/algorithms/statistics/index", "onedal/algorithms/svm/index", "onedal/algorithms/svm/svm", "onedal/appendix/decision-tree", "onedal/appendix/index", "onedal/appendix/kd_tree", "onedal/build_app/build-application", "onedal/data-management/accessor/column", "onedal/data-management/accessor/row", "onedal/data-management/accessors", "onedal/data-management/array", "onedal/data-management/data-source/csv", "onedal/data-management/data-sources", "onedal/data-management/graph/directed-adjacency-vector-graph", "onedal/data-management/graph/undirected-adjacency-vector-graph", "onedal/data-management/graphs", "onedal/data-management/index", "onedal/data-management/table/csr", "onedal/data-management/table/homogen", "onedal/data-management/tables", "onedal/glossary", "onedal/introduction", "onedal/notations", "onedal/programming-model/computational-modes", "onedal/spmd/index", "quick-start", "system-requirements"], "filenames": ["404.rst", "api/algorithms/clustering/dbscan.rst", "api/algorithms/clustering/index.rst", "api/algorithms/clustering/kmeans.rst", "api/algorithms/clustering/kmeans-init.rst", "api/algorithms/covariance/covariance.rst", "api/algorithms/covariance/index.rst", "api/algorithms/decomposition/index.rst", "api/algorithms/decomposition/pca.rst", "api/algorithms/ensembles/decision-forest.rst", "api/algorithms/ensembles/index.rst", "api/algorithms/graph/connected-components.rst", "api/algorithms/graph/index.rst", "api/algorithms/graph/subgraph-isomorphism.rst", "api/algorithms/index.rst", "api/algorithms/kernel-functions/index.rst", "api/algorithms/kernel-functions/linear-kernel.rst", "api/algorithms/kernel-functions/polynomial-kernel.rst", "api/algorithms/kernel-functions/rbf-kernel.rst", "api/algorithms/kernel-functions/sigmoid-kernel.rst", "api/algorithms/nearest-neighbors/index.rst", "api/algorithms/nearest-neighbors/knn-classification.rst", "api/algorithms/objective-function/index.rst", "api/algorithms/objective-function/logloss.rst", "api/algorithms/objective-function/objective-function.rst", "api/algorithms/pairwise-distances/chebyshev-distance.rst", "api/algorithms/pairwise-distances/cosine-distance.rst", "api/algorithms/pairwise-distances/index.rst", "api/algorithms/pairwise-distances/minkowski-distance.rst", "api/algorithms/statistics/basic-statistics.rst", "api/algorithms/statistics/index.rst", "api/algorithms/svm/index.rst", "api/algorithms/svm/svm.rst", "api/data-management/accessor/column.rst", "api/data-management/accessor/row.rst", "api/data-management/accessors.rst", "api/data-management/array.rst", "api/data-management/data-source/csv.rst", "api/data-management/data-sources.rst", "api/data-management/graph-service.rst", "api/data-management/graph-service/directed-adjacency-vector-graph.rst", "api/data-management/graph-service/undirected-adjacency-vector-graph.rst", "api/data-management/graph/directed-adjacency-vector-graph.rst", "api/data-management/graph/undirected-adjacency-vector-graph.rst", "api/data-management/graphs.rst", "api/data-management/index.rst", "api/data-management/table/csr.rst", "api/data-management/table/homogen.rst", "api/data-management/tables.rst", "api/index.rst", "api/spmd/communicator.rst", "api/spmd/index.rst", "api/spmd/overview.rst", "bibliography.rst", "contribution/coding_guide.rst", "daal-interfaces.rst", "daal/algorithms/association_rules/association-rules.rst", "daal/algorithms/boosting/adaboost.rst", "daal/algorithms/boosting/adaboost-multiclass.rst", "daal/algorithms/boosting/brownboost.rst", "daal/algorithms/boosting/index.rst", "daal/algorithms/boosting/logitboost.rst", "daal/algorithms/cholesky/cholesky.rst", "daal/algorithms/covariance/computation-batch.rst", "daal/algorithms/covariance/computation-distributed.rst", "daal/algorithms/covariance/computation-online.rst", "daal/algorithms/covariance/correlation-and-variance-covariance-matrices.rst", "daal/algorithms/dbscan/computation-batch.rst", "daal/algorithms/dbscan/computation-distributed.rst", "daal/algorithms/dbscan/index.rst", "daal/algorithms/decision_forest/decision-forest.rst", "daal/algorithms/decision_forest/decision-forest-classification.rst", "daal/algorithms/decision_forest/decision-forest-regression.rst", "daal/algorithms/decision_forest/index.rst", "daal/algorithms/decision_tree/decision-tree.rst", "daal/algorithms/decision_tree/decision-tree-classification.rst", "daal/algorithms/decision_tree/decision-tree-regression.rst", "daal/algorithms/decision_tree/index.rst", "daal/algorithms/distance/correlation.rst", "daal/algorithms/distance/cosine.rst", "daal/algorithms/distance/index.rst", "daal/algorithms/distributions/bernoulli.rst", "daal/algorithms/distributions/index.rst", "daal/algorithms/distributions/normal.rst", "daal/algorithms/distributions/uniform.rst", "daal/algorithms/em/expectation-maximization.rst", "daal/algorithms/engines/index.rst", "daal/algorithms/engines/mcg59.rst", "daal/algorithms/engines/mt19937.rst", "daal/algorithms/engines/mt2203.rst", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees.rst", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-classification.rst", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-regression.rst", "daal/algorithms/gradient_boosted_trees/index.rst", "daal/algorithms/implicit_als/computation-batch.rst", "daal/algorithms/implicit_als/computation-distributed-prediction.rst", "daal/algorithms/implicit_als/computation-distributed-training.rst", "daal/algorithms/implicit_als/implicit-alternating-least-squares.rst", "daal/algorithms/implicit_als/initialization-batch.rst", "daal/algorithms/implicit_als/initialization-distributed.rst", "daal/algorithms/k_nearest_neighbors/k-nearest-neighbors-knn-classifier.rst", "daal/algorithms/kernel_function/kernel-functions.rst", "daal/algorithms/kmeans/computation-batch.rst", "daal/algorithms/kmeans/computation-distributed.rst", "daal/algorithms/kmeans/initialization-batch.rst", "daal/algorithms/kmeans/initialization-distributed.rst", "daal/algorithms/kmeans/k-means-clustering.rst", "daal/algorithms/lasso_elastic_net/elastic-net.rst", "daal/algorithms/lasso_elastic_net/index.rst", "daal/algorithms/lasso_elastic_net/lasso.rst", "daal/algorithms/lasso_elastic_net/lasso-elasticnet-computation.rst", "daal/algorithms/linear_ridge_regression/index.rst", "daal/algorithms/linear_ridge_regression/linear-regression.rst", "daal/algorithms/linear_ridge_regression/linear-ridge-regression-computation.rst", "daal/algorithms/linear_ridge_regression/ridge-regression.rst", "daal/algorithms/logistic_regression/logistic-regression.rst", "daal/algorithms/moments/computation-batch.rst", "daal/algorithms/moments/computation-distributed.rst", "daal/algorithms/moments/computation-online.rst", "daal/algorithms/moments/moments-of-low-order.rst", "daal/algorithms/naive_bayes/computation-batch.rst", "daal/algorithms/naive_bayes/computation-distributed.rst", "daal/algorithms/naive_bayes/computation-online.rst", "daal/algorithms/naive_bayes/naive-bayes-classifier.rst", "daal/algorithms/normalization/index.rst", "daal/algorithms/normalization/min-max.rst", "daal/algorithms/normalization/z-score.rst", "daal/algorithms/optimization-solvers/iterative-solver.rst", "daal/algorithms/optimization-solvers/objective-function.rst", "daal/algorithms/optimization-solvers/objective-functions/computation.rst", "daal/algorithms/optimization-solvers/objective-functions/cross-entropy.rst", "daal/algorithms/optimization-solvers/objective-functions/logistic-loss.rst", "daal/algorithms/optimization-solvers/objective-functions/mse.rst", "daal/algorithms/optimization-solvers/objective-functions/sum-of-functions.rst", "daal/algorithms/optimization-solvers/objective-functions/with-precomputed-characteristics.rst", "daal/algorithms/optimization-solvers/optimization-solvers.rst", "daal/algorithms/optimization-solvers/solvers/adaptive-subgradient-method.rst", "daal/algorithms/optimization-solvers/solvers/computation.rst", "daal/algorithms/optimization-solvers/solvers/coordinate-descent.rst", "daal/algorithms/optimization-solvers/solvers/lbfgs.rst", "daal/algorithms/optimization-solvers/solvers/stochastic-average-gradient-accelerated-method.rst", "daal/algorithms/optimization-solvers/solvers/stochastic-gradient-descent-algorithm.rst", "daal/algorithms/outlier_detection/index.rst", "daal/algorithms/outlier_detection/multivariate.rst", "daal/algorithms/outlier_detection/multivariate-bacon.rst", "daal/algorithms/outlier_detection/univariate.rst", "daal/algorithms/pca/computation-batch.rst", "daal/algorithms/pca/computation-distributed.rst", "daal/algorithms/pca/computation-online.rst", "daal/algorithms/pca/principal-component-analysis.rst", "daal/algorithms/pca/transform.rst", "daal/algorithms/qr/qr-decomposition.rst", "daal/algorithms/qr/qr-pivoted.rst", "daal/algorithms/qr/qr-without-pivoting.rst", "daal/algorithms/qr/without-pivoting/computation-batch-online.rst", "daal/algorithms/qr/without-pivoting/computation-distributed.rst", "daal/algorithms/quality_metrics/default-metric-set.rst", "daal/algorithms/quality_metrics/default/for-binary-classification.rst", "daal/algorithms/quality_metrics/default/for-linear-regression.rst", "daal/algorithms/quality_metrics/default/for-multi-class-classification.rst", "daal/algorithms/quality_metrics/default/for-pca.rst", "daal/algorithms/quality_metrics/index.rst", "daal/algorithms/quality_metrics/user-defined.rst", "daal/algorithms/quantiles/index.rst", "daal/algorithms/sorting/index.rst", "daal/algorithms/stump/classification.rst", "daal/algorithms/stump/index.rst", "daal/algorithms/stump/regression.rst", "daal/algorithms/svd/computation-batch-online.rst", "daal/algorithms/svd/computation-distributed.rst", "daal/algorithms/svd/singular-value-decomposition.rst", "daal/algorithms/svm/support-vector-machine-classifier.rst", "daal/algorithms/svm_multi_class/multi-class-classifier.rst", "daal/analysis.rst", "daal/cpu-vs-gpu.rst", "daal/data-management/data-compression.rst", "daal/data-management/data-dictionaries.rst", "daal/data-management/data-management.rst", "daal/data-management/data-model.rst", "daal/data-management/data-serialization-and-deserialization.rst", "daal/data-management/data-sources.rst", "daal/data-management/essential-interfaces.rst", "daal/data-management/generic-interfaces.rst", "daal/data-management/numeric-tables.rst", "daal/data-management/numeric-tables-types.rst", "daal/services/callback-for-host-application.rst", "daal/services/extracting-version-information.rst", "daal/services/handling-errors.rst", "daal/services/managing-computational-environment.rst", "daal/services/managing-memory.rst", "daal/services/services.rst", "daal/training-prediction.rst", "daal/usage/algorithms.rst", "daal/usage/computation-modes.rst", "daal/usage/index.rst", "daal/usage/training-and-prediction/classification.rst", "daal/usage/training-and-prediction/index.rst", "daal/usage/training-and-prediction/recommendation-systems.rst", "daal/usage/training-and-prediction/regression.rst", "data-analytics-pipeline.rst", "deprecation.rst", "examples.rst", "examples/cpp.rst", "examples/cpp/basic_statistics_dense_batch.rst", "examples/cpp/column_accessor_homogen.rst", "examples/cpp/connected_components_batch.rst", "examples/cpp/cor_dense_batch.rst", "examples/cpp/cov_dense_batch.rst", "examples/cpp/csr_accessor.rst", "examples/cpp/dbscan_brute_force_batch.rst", "examples/cpp/df_cls_dense_batch.rst", "examples/cpp/df_reg_dense_batch.rst", "examples/cpp/directed_graph.rst", "examples/cpp/graph_service_functions.rst", "examples/cpp/jaccard_batch.rst", "examples/cpp/jaccard_batch_app.rst", "examples/cpp/kmeans_init_dense.rst", "examples/cpp/kmeans_lloyd_dense_batch.rst", "examples/cpp/knn_cls_brute_force_dense_batch.rst", "examples/cpp/knn_cls_kd_tree_dense_batch.rst", "examples/cpp/knn_search_brute_force_dense_batch.rst", "examples/cpp/linear_kernel_dense_batch.rst", "examples/cpp/linear_regression_dense_batch.rst", "examples/cpp/logloss_dense_batch.rst", "examples/cpp/louvain_batch.rst", "examples/cpp/pca_dense_batch.rst", "examples/cpp/pca_precomputed_dense_batch.rst", "examples/cpp/polynomial_kernel_dense_batch.rst", "examples/cpp/rbf_kernel_dense_batch.rst", "examples/cpp/shortest_paths_batch.rst", "examples/cpp/sigmoid_kernel_dense_batch.rst", "examples/cpp/subgraph_isomorphism_batch.rst", "examples/cpp/svm_multi_class_thunder_csr_batch.rst", "examples/cpp/svm_multi_class_thunder_dense_batch.rst", "examples/cpp/svm_nu_cls_thunder_csr_batch.rst", "examples/cpp/svm_nu_cls_thunder_dense_batch.rst", "examples/cpp/svm_nu_reg_thunder_csr_batch.rst", "examples/cpp/svm_nu_reg_thunder_dense_batch.rst", "examples/cpp/svm_reg_thunder_csr_batch.rst", "examples/cpp/svm_reg_thunder_dense_batch.rst", "examples/cpp/svm_two_class_smo_csr_batch.rst", "examples/cpp/svm_two_class_smo_dense_batch.rst", "examples/cpp/svm_two_class_thunder_csr_batch.rst", "examples/cpp/svm_two_class_thunder_dense_batch.rst", "examples/cpp/triangle_counting_batch.rst", "examples/dpc.rst", "examples/dpc/basic_statistics_dense_batch.rst", "examples/dpc/column_accessor_homogen.rst", "examples/dpc/cor_dense_batch.rst", "examples/dpc/cov_dense_batch.rst", "examples/dpc/dbscan_brute_force_batch.rst", "examples/dpc/df_cls_hist_batch.rst", "examples/dpc/df_cls_hist_batch_random.rst", "examples/dpc/df_cls_traverse_model.rst", "examples/dpc/df_reg_hist_batch.rst", "examples/dpc/df_reg_hist_batch_random.rst", "examples/dpc/df_reg_traverse_model.rst", "examples/dpc/kmeans_init_dense.rst", "examples/dpc/kmeans_lloyd_dense_batch.rst", "examples/dpc/knn_cls_brute_force_dense_batch.rst", "examples/dpc/knn_reg_brute_force_dense_batch.rst", "examples/dpc/knn_search_brute_force_dense_batch.rst", "examples/dpc/linear_kernel_dense_batch.rst", "examples/dpc/linear_regression_dense_batch.rst", "examples/dpc/pca_cor_dense_batch.rst", "examples/dpc/pca_precomputed_cor_dense_batch.rst", "examples/dpc/pca_precomputed_cov_dense_batch.rst", "examples/dpc/rbf_kernel_dense_batch.rst", "examples/dpc/svm_two_class_thunder_dense_batch.rst", "includes/clustering/dbscan-examples.rst", "includes/clustering/dbscan-introduction.rst", "includes/clustering/dbscan-usage-examples.rst", "includes/clustering/kmeans-examples.rst", "includes/clustering/kmeans-init-examples.rst", "includes/clustering/kmeans-init-introduction.rst", "includes/clustering/kmeans-init-usage-examples.rst", "includes/clustering/kmeans-introduction.rst", "includes/clustering/kmeans-usage-examples.rst", "includes/covariance/covariance-examples.rst", "includes/covariance/covariance-introduction.rst", "includes/data-management/array-usage-example.rst", "includes/data-management/column-accessor-usage-example.rst", "includes/data-management/csv-data-source-usage-example.rst", "includes/data-management/row-accessor-usage-example.rst", "includes/decomposition/pca-examples.rst", "includes/decomposition/pca-introduction.rst", "includes/decomposition/pca-usage-examples.rst", "includes/ensembles/df-classification-examples.rst", "includes/ensembles/df-introduction.rst", "includes/ensembles/df-regression-examples.rst", "includes/graph/connected-components-examples.rst", "includes/graph/connected-components-introduction.rst", "includes/graph/subgraph-isomorphism-examples.rst", "includes/graph/subgraph-isomorphism-introduction.rst", "includes/kernel-functions/linear-kernel-examples.rst", "includes/kernel-functions/linear-kernel-introduction.rst", "includes/kernel-functions/polynomial-kernel-examples.rst", "includes/kernel-functions/polynomial-kernel-introduction.rst", "includes/kernel-functions/rbf-kernel-examples.rst", "includes/kernel-functions/rbf-kernel-introduction.rst", "includes/kernel-functions/sigmoid-kernel-examples.rst", "includes/kernel-functions/sigmoid-kernel-introduction.rst", "includes/nearest-neighbors/knn-examples.rst", "includes/nearest-neighbors/knn-introduction.rst", "includes/nearest-neighbors/knn-usage-examples.rst", "includes/objective-function/logloss-examples.rst", "includes/objective-function/logloss-introduction.rst", "includes/objective-function/objective-function-introduction.rst", "includes/pairwise-distances/chebyshev-distance-introduction.rst", "includes/pairwise-distances/cosine-distance-introduction.rst", "includes/pairwise-distances/minkowski-distance-introduction.rst", "includes/spmd/ccl-comm-usage-example.rst", "includes/spmd/mpi-comm-usage-example.rst", "includes/statistics/basic-statistics-examples.rst", "includes/statistics/basic-statistics-introduction.rst", "includes/statistics/basic-statistics-usage-examples.rst", "includes/svm/svm-examples.rst", "includes/svm/svm-introduction.rst", "index.rst", "installation.rst", "legal.rst", "oneapi-interfaces.rst", "onedal/algorithms/clustering/dbscan.rst", "onedal/algorithms/clustering/index.rst", "onedal/algorithms/clustering/kmeans.rst", "onedal/algorithms/clustering/kmeans-init.rst", "onedal/algorithms/covariance/covariance.rst", "onedal/algorithms/covariance/index.rst", "onedal/algorithms/decomposition/index.rst", "onedal/algorithms/decomposition/pca.rst", "onedal/algorithms/ensembles/decision-forest.rst", "onedal/algorithms/ensembles/index.rst", "onedal/algorithms/graph/connected-components.rst", "onedal/algorithms/graph/index.rst", "onedal/algorithms/graph/subgraph-isomorphism.rst", "onedal/algorithms/index.rst", "onedal/algorithms/kernel-functions/index.rst", "onedal/algorithms/kernel-functions/linear-kernel.rst", "onedal/algorithms/kernel-functions/polynomial-kernel.rst", "onedal/algorithms/kernel-functions/rbf-kernel.rst", "onedal/algorithms/kernel-functions/sigmoid-kernel.rst", "onedal/algorithms/nearest-neighbors/index.rst", "onedal/algorithms/nearest-neighbors/knn.rst", "onedal/algorithms/objective-function/index.rst", "onedal/algorithms/objective-function/logloss.rst", "onedal/algorithms/pairwise-distances/chebyshev-distance.rst", "onedal/algorithms/pairwise-distances/cosine-distance.rst", "onedal/algorithms/pairwise-distances/index.rst", "onedal/algorithms/pairwise-distances/minkowski-distance.rst", "onedal/algorithms/statistics/basic-statistics.rst", "onedal/algorithms/statistics/index.rst", "onedal/algorithms/svm/index.rst", "onedal/algorithms/svm/svm.rst", "onedal/appendix/decision-tree.rst", "onedal/appendix/index.rst", "onedal/appendix/kd_tree.rst", "onedal/build_app/build-application.rst", "onedal/data-management/accessor/column.rst", "onedal/data-management/accessor/row.rst", "onedal/data-management/accessors.rst", "onedal/data-management/array.rst", "onedal/data-management/data-source/csv.rst", "onedal/data-management/data-sources.rst", "onedal/data-management/graph/directed-adjacency-vector-graph.rst", "onedal/data-management/graph/undirected-adjacency-vector-graph.rst", "onedal/data-management/graphs.rst", "onedal/data-management/index.rst", "onedal/data-management/table/csr.rst", "onedal/data-management/table/homogen.rst", "onedal/data-management/tables.rst", "onedal/glossary.rst", "onedal/introduction.rst", "onedal/notations.rst", "onedal/programming-model/computational-modes.rst", "onedal/spmd/index.rst", "quick-start.rst", "system-requirements.rst"], "titles": ["", "DBSCAN", "Clustering", "K-Means", "K-Means initialization", "Covariance", "Covariance", "Decomposition", "Principal Components Analysis (PCA)", "Decision Forest Classification and Regression (DF)", "Ensembles", "Connected Components", "Graph", "Subgraph Isomorphism", "Algorithms", "Kernel Functions", "Linear kernel", "Polynomial kernel", "Radial Basis Function (RBF) kernel", "Sigmoid kernel", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification (k-NN)", "Objective function", "Logistic Loss", "Objective function", "Chebyshev distance", "Cosine distance", "Pairwise Distances", "Minkowski distance", "Basic Statistics", "Statistics", "Support Vector Machines", "Support Vector Machine Classifier (SVM)", "Column accessor", "Row accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Graph Service", "Directed adjacency vector graph service", "Undirected adjacency vector graph service", "Directed adjacency vector graph", "Undirected adjacency vector graph", "Graphs", "Data Management", "Compressed Sparse Rows (CSR) Table", "Homogeneous table", "Tables", "C++ API", "Communicators", "Distributed Model: Single Process Multiple Data", "Distributed SPMD model", "Bibliography", "Coding Guidelines", "DAAL Interfaces", "Association Rules", "AdaBoost Classifier", "AdaBoost Multiclass Classifier", "BrownBoost Classifier", "Boosting", "LogitBoost Classifier", "Cholesky Decomposition", "Batch Processing", "Distributed Processing", "Online Processing", "Correlation and Variance-Covariance Matrices", "Batch Processing", "Distributed Processing", "Density-Based Spatial Clustering of Applications with Noise", "Decision Forest", "Classification Decision Forest", "Regression Decision Forest", "Decision Forest", "Decision Tree", "Classification Decision Tree", "Regression Decision Tree", "Decision Trees", "Correlation Distance Matrix", "Cosine Distance Matrix", "Distance Matrix", "Bernoulli Distribution", "Distributions", "Normal Distribution", "Uniform Distribution", "Expectation-Maximization", "Engines", "mcg59", "mt19937", "mt2203", "Gradient Boosted Trees", "Classification Gradient Boosted Trees", "Regression Gradient Boosted Trees", "Gradient Boosted Trees", "Batch Processing", "Distributed Processing: Prediction of Ratings", "Distributed Processing: Training", "Implicit Alternating Least Squares", "Batch Processing", "Distributed Processing", "k-Nearest Neighbors (kNN) Classifier", "Kernel Functions", "Batch Processing", "Distributed Processing", "Batch Processing", "Distributed Processing", "K-Means Clustering", "Elastic Net", "LASSO and Elastic Net Regressions", "Least Absolute Shrinkage and Selection Operator (LASSO)", "LASSO and Elastic Net Computation", "Linear and Ridge Regressions", "Linear Regression", "Linear and Ridge Regressions Computation", "Ridge Regression", "Logistic Regression", "Batch Processing", "Distributed Processing", "Online Processing", "Moments of Low Order", "Batch Processing", "Distributed Processing", "Online Processing", "Na\u00efve Bayes Classifier", "Normalization", "Min-max", "Z-score", "Iterative Solver", "Objective Function", "Computation", "Cross-entropy Loss", "Logistic Loss", "Mean Squared Error Algorithm", "Sum of Functions", "Objective Function with Precomputed Characteristics Algorithm", "Optimization Solvers", "Adaptive Subgradient Method", "Computation", "Coordinate Descent Algorithm", "Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Algorithm", "Stochastic Average Gradient Accelerated Method", "Stochastic Gradient Descent Algorithm", "Outlier Detection", "Multivariate Outlier Detection", "Multivariate BACON Outlier Detection", "Univariate Outlier Detection", "Batch Processing", "Distributed Processing", "Online Processing", "Principal Component Analysis", "Principal Components Analysis Transform", "QR Decomposition", "Pivoted QR Decomposition", "QR Decomposition without Pivoting", "Batch and Online Processing", "Distributed Processing", "Working with the Default Metric Set", "Quality Metrics for Binary Classification Algorithms", "Quality Metrics for Linear Regression", "Quality Metrics for Multi-class Classification Algorithms", "Quality Metrics for Principal Components Analysis", "Quality Metrics", "Working with User-defined Quality Metrics", "Quantile", "Sorting", "Classification Stump", "Stump", "Regression Stump", "Batch and Online Processing", "Distributed Processing", "Singular Value Decomposition", "Support Vector Machine Classifier", "Multi-class Classifier", "Analysis", "CPU and GPU Support", "Data Compression", "Data Dictionaries", "Data Management", "Data Model", "Data Serialization and Deserialization", "Data Sources", "Essential Interfaces for Algorithms", "Generic Interfaces", "Numeric Tables", "Types of Numeric Tables", "Providing a Callback for the Host Application", "Extracting Version Information", "Handling Errors", "Managing the Computational Environment", "Managing Memory", "Services", "Training and Prediction", "Algorithms", "Computation Modes", "Library Usage", "Classification Usage Model", "Usage Model: Training and Prediction", "Recommendation Systems Usage Model", "Regression Usage Model", "Introduction", "Deprecation Notice", "oneAPI Examples", "oneAPI C++ Examples", "basic_statistics_dense_batch.cpp", "column_accessor_homogen.cpp", "connected_components_batch.cpp", "cor_dense_batch.cpp", "cov_dense_batch.cpp", "csr_accessor.cpp", "dbscan_brute_force_batch.cpp", "df_cls_dense_batch.cpp", "df_reg_dense_batch.cpp", "directed_graph.cpp", "graph_service_functions.cpp", "jaccard_batch.cpp", "jaccard_batch_app.cpp", "kmeans_init_dense.cpp", "kmeans_lloyd_dense_batch.cpp", "knn_cls_brute_force_dense_batch.cpp", "knn_cls_kd_tree_dense_batch.cpp", "knn_search_brute_force_dense_batch.cpp", "linear_kernel_dense_batch.cpp", "linear_regression_dense_batch.cpp", "logloss_dense_batch.cpp", "louvain_batch.cpp", "pca_dense_batch.cpp", "pca_precomputed_dense_batch.cpp", "polynomial_kernel_dense_batch.cpp", "rbf_kernel_dense_batch.cpp", "shortest_paths_batch.cpp", "sigmoid_kernel_dense_batch.cpp", "subgraph_isomorphism_batch.cpp", "svm_multi_class_thunder_csr_batch.cpp", "svm_multi_class_thunder_dense_batch.cpp", "svm_nu_cls_thunder_csr_batch.cpp", "svm_nu_cls_thunder_dense_batch.cpp", "svm_nu_reg_thunder_csr_batch.cpp", "svm_nu_reg_thunder_dense_batch.cpp", "svm_reg_thunder_csr_batch.cpp", "svm_reg_thunder_dense_batch.cpp", "svm_two_class_smo_csr_batch.cpp", "svm_two_class_smo_dense_batch.cpp", "svm_two_class_thunder_csr_batch.cpp", "svm_two_class_thunder_dense_batch.cpp", "triangle_counting_batch.cpp", "oneAPI DPC++ examples", "basic_statistics_dense_batch.cpp", "column_accessor_homogen.cpp", "cor_dense_batch.cpp", "cov_dense_batch.cpp", "dbscan_brute_force_batch.cpp", "df_cls_hist_batch.cpp", "df_cls_hist_batch_random.cpp", "df_cls_traverse_model.cpp", "df_reg_hist_batch.cpp", "df_reg_hist_batch_random.cpp", "df_reg_traverse_model.cpp", "kmeans_init_dense.cpp", "kmeans_lloyd_dense_batch.cpp", "knn_cls_brute_force_dense_batch.cpp", "knn_reg_brute_force_dense_batch.cpp", "knn_search_brute_force_dense_batch.cpp", "linear_kernel_dense_batch.cpp", "linear_regression_dense_batch.cpp", "pca_cor_dense_batch.cpp", "pca_precomputed_cor_dense_batch.cpp", "pca_precomputed_cov_dense_batch.cpp", "rbf_kernel_dense_batch.cpp", "svm_two_class_thunder_dense_batch.cpp", "&lt;no title&gt;", "&lt;no title&gt;", "Compute", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computing", "&lt;no title&gt;", "Training", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Training", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Training", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computing", "&lt;no title&gt;", "&lt;no title&gt;", "oneAPI Data Analytics Library (oneDAL)", "Installation", "Notices and Disclaimers", "oneAPI Interfaces", "DBSCAN", "Clustering", "K-Means", "K-Means initialization", "Covariance", "Covariance", "Decomposition", "Principal Components Analysis (PCA)", "Decision Forest Classification and Regression (DF)", "Ensembles", "Connected Components", "Graph", "Subgraph Isomorphism", "Algorithms", "Kernel Functions", "Linear kernel", "Polynomial kernel", "Radial Basis Function (RBF) kernel", "Sigmoid kernel", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification, Regression, and Search (k-NN)", "Objective function", "Logistic Loss", "Chebyshev distance", "Cosine distance", "Pairwise Distances", "Minkowski distance", "Basic Statistics", "Statistics", "Support Vector Machines", "Support Vector Machine Classifier and Regression (SVM)", "Decision Tree", "Appendix", "k-d Tree", "Build applications with oneDAL", "Column accessor", "Row accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Directed adjacency vector graph", "Undirected adjacency vector graph", "Graphs", "Data Management", "Compressed Sparse Rows (CSR) Table", "Homogeneous table", "Tables", "Glossary", "Introduction", "Mathematical Notations", "Computational Modes", "Single Program Multiple Data", "Quick Start", "System Requirements"], "terms": {"oned": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376], "daal": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "intel": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "oneapi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "toolkit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "dpc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "compil": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 367, 368, 370, 371, 372, 373, 375, 376], "analyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376], "librari": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "github": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "repositori": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "densiti": [1, 53, 55, 83, 84, 85, 173, 174, 270, 318, 322], "spatial": [1, 53, 55, 173, 174, 270, 318, 322], "cluster": [1, 3, 4, 14, 49, 53, 55, 67, 68, 85, 102, 103, 104, 105, 173, 174, 193, 209, 250, 270, 274, 276, 318, 321, 322, 324, 325, 335, 370], "applic": [1, 5, 36, 53, 54, 55, 56, 61, 64, 65, 67, 68, 71, 75, 81, 85, 91, 95, 96, 99, 102, 103, 104, 105, 107, 109, 113, 115, 117, 118, 120, 121, 122, 126, 130, 131, 132, 137, 140, 141, 146, 147, 148, 152, 155, 169, 170, 172, 173, 174, 177, 182, 183, 188, 189, 190, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 279, 318, 321, 322, 326, 329, 359, 366, 370, 371], "nois": [1, 53, 55, 67, 68, 160, 173, 174, 270, 318, 322], "i": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 39, 44, 46, 47, 48, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 276, 279, 280, 281, 283, 285, 288, 291, 295, 297, 299, 301, 303, 306, 307, 309, 310, 318, 320, 322, 324, 325, 326, 329, 330, 332, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375], "algorithm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 32, 49, 53, 54, 55, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 90, 91, 92, 93, 94, 97, 98, 99, 100, 106, 107, 110, 115, 120, 122, 123, 124, 127, 128, 129, 135, 149, 151, 156, 161, 162, 165, 167, 171, 172, 173, 177, 183, 187, 188, 191, 193, 194, 205, 214, 215, 224, 229, 231, 244, 260, 270, 274, 276, 279, 285, 288, 291, 293, 297, 299, 301, 303, 307, 310, 314, 317, 318, 321, 322, 323, 324, 325, 326, 329, 330, 332, 333, 334, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 353, 366, 370, 372, 373, 374, 375], "propos": [1, 63, 64, 65, 69, 116, 117, 118, 270, 322, 329], "ester96": [1, 53, 69, 270, 322], "It": [1, 17, 32, 36, 54, 59, 62, 67, 68, 69, 70, 106, 110, 140, 149, 151, 160, 170, 171, 177, 178, 185, 192, 270, 297, 317, 322, 329, 330, 338, 352, 360, 366, 370], "non": [1, 13, 17, 26, 46, 48, 51, 53, 62, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 86, 91, 92, 100, 106, 115, 123, 127, 128, 129, 130, 131, 132, 133, 138, 143, 145, 146, 149, 150, 152, 160, 170, 171, 177, 184, 270, 297, 309, 320, 322, 330, 334, 338, 346, 352, 353, 355, 356, 366, 367, 370], "parametr": [1, 69, 100, 143, 145, 270, 322], "given": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 29, 32, 37, 46, 47, 56, 57, 58, 59, 61, 62, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 84, 85, 90, 91, 92, 97, 100, 101, 103, 105, 106, 115, 119, 123, 125, 126, 129, 130, 131, 132, 133, 139, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 170, 171, 172, 177, 178, 181, 182, 187, 193, 270, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 345, 346, 348, 349, 352, 353, 355, 361, 370, 372], "set": [1, 8, 9, 11, 21, 28, 29, 32, 36, 39, 44, 46, 47, 48, 53, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 85, 86, 89, 90, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 160, 161, 162, 163, 164, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 195, 198, 200, 205, 214, 215, 224, 229, 231, 244, 270, 285, 291, 303, 310, 314, 318, 322, 324, 325, 329, 330, 332, 334, 337, 338, 339, 340, 342, 345, 346, 348, 349, 352, 353, 355, 356, 359, 361, 362, 366, 369, 370, 372, 373, 375], "observ": [1, 9, 21, 32, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 85, 90, 97, 100, 101, 102, 103, 107, 109, 110, 112, 114, 115, 117, 123, 125, 138, 139, 142, 143, 144, 145, 147, 148, 149, 157, 159, 163, 164, 177, 178, 180, 184, 193, 195, 198, 211, 254, 255, 270, 303, 322, 329, 330, 342, 352, 370, 372], "some": [1, 3, 24, 54, 56, 57, 58, 60, 69, 74, 105, 106, 113, 124, 126, 130, 131, 132, 141, 156, 161, 172, 180, 181, 192, 193, 199, 270, 276, 307, 322, 324, 336, 343, 366, 370], "space": [1, 17, 26, 53, 54, 69, 74, 90, 100, 101, 127, 136, 138, 139, 140, 141, 270, 297, 309, 322, 336, 338, 342, 346, 353, 355, 370], "group": [1, 36, 53, 56, 69, 149, 188, 190, 270, 322, 329, 356, 370], "togeth": [1, 66, 69, 270, 322], "ar": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 84, 85, 86, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 128, 130, 131, 132, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 200, 208, 270, 279, 285, 288, 293, 303, 307, 310, 317, 318, 320, 322, 324, 326, 329, 330, 332, 334, 336, 342, 343, 344, 345, 348, 352, 353, 359, 360, 363, 364, 366, 368, 370, 373, 374, 375], "close": [1, 61, 66, 69, 102, 103, 180, 199, 270, 322, 374], "pack": [1, 69, 168, 169, 181, 183, 184, 270, 322, 374], "mani": [1, 44, 48, 50, 54, 69, 91, 92, 107, 270, 322, 360], "nearbi": [1, 69, 270, 322], "neighbor": [1, 14, 39, 40, 41, 44, 49, 53, 55, 69, 174, 191, 212, 213, 270, 318, 321, 322, 332, 335], "mark": [1, 54, 69, 143, 145, 200, 270, 320, 322], "outlier": [1, 53, 55, 69, 173, 270, 318, 322, 370], "lie": [1, 69, 270, 322], "alon": [1, 69, 270, 322], "low": [1, 55, 64, 69, 97, 125, 126, 173, 174, 181, 193, 270, 318, 322, 370], "region": [1, 69, 100, 143, 145, 270, 322, 355], "whose": [1, 69, 100, 270, 322, 342, 370], "nearest": [1, 14, 49, 53, 55, 69, 174, 191, 270, 303, 318, 321, 322, 324, 335, 370], "too": [1, 69, 270, 322], "far": [1, 56, 57, 59, 61, 64, 65, 69, 71, 72, 75, 76, 83, 91, 92, 94, 96, 97, 100, 102, 103, 110, 115, 117, 118, 147, 148, 172, 270, 322], "awai": [1, 69, 270, 322], "compute_input": [1, 4, 5, 16, 17, 18, 19, 24, 29, 270, 274, 279, 295, 297, 299, 301, 307, 314, 322, 325, 326, 337, 338, 339, 340, 343, 349], "compute_result": [1, 4, 5, 16, 17, 18, 19, 24, 29, 270, 274, 279, 295, 297, 299, 301, 307, 314, 322, 325, 326, 337, 338, 339, 340, 343, 349], "default": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32, 37, 42, 43, 44, 46, 47, 48, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 144, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 171, 172, 175, 177, 180, 181, 182, 187, 188, 192, 195, 197, 198, 270, 322, 326, 329, 342, 343, 344, 361, 370], "refer": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 69, 71, 72, 86, 90, 94, 96, 100, 107, 109, 110, 112, 113, 114, 115, 122, 134, 157, 159, 161, 165, 167, 171, 175, 180, 181, 182, 192, 193, 195, 197, 198, 280, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369, 370, 375], "develop": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 35, 36, 37, 42, 43, 44, 45, 47, 48, 51, 52, 54, 180, 356, 376], "guid": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 35, 36, 37, 42, 43, 44, 45, 47, 48, 51, 52, 53], "all": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 56, 67, 68, 69, 70, 71, 72, 74, 75, 76, 85, 90, 91, 92, 96, 99, 100, 101, 104, 105, 110, 115, 116, 117, 118, 123, 127, 130, 131, 132, 136, 139, 140, 141, 143, 144, 145, 149, 172, 174, 175, 179, 180, 181, 183, 184, 191, 192, 193, 199, 215, 291, 318, 320, 329, 330, 332, 334, 342, 352, 353, 359, 362, 366, 367, 368, 370, 374, 375], "type": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 50, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 176, 180, 181, 182, 183, 187, 188, 192, 193, 330, 336, 344, 361, 366, 367, 368, 370], "function": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 19, 21, 23, 25, 26, 28, 29, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 55, 58, 59, 61, 73, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 97, 102, 103, 106, 107, 109, 114, 115, 126, 127, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 146, 149, 158, 164, 171, 172, 173, 174, 177, 180, 182, 189, 216, 217, 232, 233, 234, 235, 240, 241, 242, 243, 257, 258, 268, 295, 297, 299, 301, 306, 307, 318, 321, 324, 329, 335, 337, 338, 340, 344, 352, 362, 365, 372, 374], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 54, 55, 58, 60, 63, 64, 65, 67, 68, 69, 70, 71, 74, 75, 76, 82, 85, 86, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 113, 115, 117, 118, 121, 122, 123, 125, 126, 127, 130, 131, 132, 134, 136, 137, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 169, 170, 171, 172, 175, 177, 178, 179, 180, 182, 184, 185, 187, 188, 191, 192, 193, 195, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 291, 307, 320, 323, 324, 326, 329, 330, 332, 333, 343, 344, 352, 353, 356, 359, 360, 362, 363, 364, 365, 366, 369, 370, 372, 374, 375], "section": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 54, 60, 86, 104, 105, 181, 183, 193, 356, 359, 360, 362, 365, 366, 369, 374], "declar": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 192, 362, 375], "dal": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 50, 52, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 280, 281, 282, 283, 311, 312, 315, 322, 349, 356, 357, 358, 360, 361, 362, 369, 375], "namespac": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 282, 283, 357, 358, 360, 361, 362, 369, 375], "avail": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 53, 58, 63, 64, 65, 66, 67, 68, 69, 73, 75, 76, 94, 97, 98, 100, 101, 102, 103, 104, 105, 106, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 141, 146, 147, 148, 149, 153, 162, 165, 167, 170, 171, 172, 175, 180, 182, 183, 184, 185, 188, 192, 193, 195, 318, 320, 366, 369, 370, 373, 375], "via": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 76, 110, 115, 140, 180, 182, 362, 366, 375], "inclus": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52], "algo": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 52, 203, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 311, 312], "hpp": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 52, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 311, 312, 357, 358, 360, 375], "header": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 179, 180, 375], "file": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 53, 146, 177, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 319, 361, 362, 366, 370, 375], "templat": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 56, 62, 66, 78, 79, 85, 97, 106, 123, 143, 149, 151, 170, 180, 192, 215, 216, 225, 226, 253, 256, 257, 362], "typenam": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 54, 216, 225, 226, 253, 256, 257, 362], "float": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 46, 47, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 181, 182, 192, 204, 208, 211, 216, 219, 220, 223, 225, 226, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 251, 252, 253, 254, 255, 256, 257, 260, 261, 265, 266, 271, 275, 277, 280, 281, 283, 286, 304, 311, 312, 322, 324, 325, 329, 342, 344, 357, 358, 360, 370, 375], "by_default": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 260], "class": [1, 3, 4, 5, 8, 11, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 42, 43, 44, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 78, 79, 82, 85, 86, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 183, 184, 187, 188, 190, 191, 192, 193, 195, 197, 198, 215, 253, 256, 280, 303, 318, 330, 335, 342, 343, 344, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369], "paramet": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 55, 60, 66, 74, 86, 97, 106, 114, 123, 127, 149, 151, 161, 170, 175, 178, 179, 180, 182, 184, 188, 191, 193, 194, 205, 214, 224, 229, 231, 244, 253, 318, 330, 352, 361, 362, 366, 370, 374, 375], "The": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 39, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 197, 198, 200, 214, 215, 274, 276, 279, 291, 293, 295, 297, 299, 301, 303, 308, 309, 310, 318, 320, 322, 324, 325, 326, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 353, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 370, 372, 374, 375], "point": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 46, 47, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 180, 192, 276, 322, 324, 330, 355, 360, 370, 374], "us": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 44, 46, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 188, 189, 191, 192, 193, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 280, 281, 282, 283, 288, 297, 299, 301, 306, 307, 310, 318, 320, 321, 325, 329, 330, 332, 336, 338, 339, 340, 343, 344, 345, 346, 348, 352, 353, 356, 357, 358, 359, 360, 361, 362, 366, 369, 370, 372, 375, 376], "intermedi": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 180, 332, 352, 370, 375], "can": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 197, 198, 199, 279, 320, 324, 326, 329, 330, 342, 352, 353, 360, 366, 369, 370, 374, 375], "doubl": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 44, 46, 47, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 176, 182, 187, 209, 212, 216, 223, 224, 229, 250, 257, 271, 322, 370], "specifi": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 39, 40, 41, 44, 50, 52, 54, 56, 58, 61, 62, 66, 67, 70, 71, 74, 78, 79, 81, 83, 84, 85, 97, 100, 102, 105, 106, 110, 112, 115, 123, 126, 129, 130, 131, 132, 133, 138, 143, 146, 149, 151, 160, 161, 168, 169, 170, 171, 172, 175, 176, 180, 182, 184, 188, 189, 324, 330, 353, 355, 370, 374], "an": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 112, 113, 115, 116, 117, 118, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 168, 169, 170, 171, 172, 177, 179, 180, 182, 185, 187, 191, 192, 193, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 285, 288, 291, 309, 318, 322, 324, 329, 330, 332, 334, 346, 352, 353, 355, 356, 359, 360, 361, 362, 365, 366, 369, 370, 372, 375], "implement": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 44, 48, 50, 53, 55, 60, 61, 63, 64, 65, 85, 102, 103, 116, 117, 118, 124, 126, 130, 131, 132, 139, 140, 141, 142, 149, 151, 162, 170, 171, 172, 175, 177, 179, 180, 181, 183, 185, 191, 192, 200, 318, 323, 333, 335, 342, 352, 359, 362, 363, 364, 365, 366, 369, 370], "brute_forc": [1, 21, 220, 261], "problem": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 53, 54, 57, 58, 59, 61, 62, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 97, 100, 106, 112, 115, 119, 123, 126, 135, 137, 143, 144, 145, 149, 151, 152, 153, 157, 158, 159, 160, 163, 170, 171, 172, 191, 276, 303, 317, 322, 324, 325, 329, 330, 332, 334, 337, 338, 339, 340, 342, 344, 345, 346, 348, 349, 352, 370], "solv": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 59, 62, 70, 71, 72, 74, 85, 90, 91, 92, 100, 135, 151, 170, 171, 172, 276, 324, 330, 332, 352], "constructor": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 42, 43, 44, 46, 47, 48, 71, 87, 88, 89, 91, 92, 112, 115, 171, 172, 175, 176, 179, 182, 184, 192, 193, 359, 361], "epsilon": [1, 32, 67, 68, 69, 85, 97, 127, 209, 250, 271, 322, 344, 352, 370], "std": [1, 3, 4, 8, 9, 11, 13, 17, 21, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 54, 180, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 280, 281, 283, 304, 315, 322, 342, 349, 357, 358, 360, 369, 370, 375], "int64_t": [1, 3, 4, 8, 9, 11, 13, 17, 21, 32, 33, 34, 36, 44, 46, 47, 48, 204, 208, 209, 214, 216, 224, 244, 247, 250, 253, 256, 257, 271, 280, 281, 283, 304, 322, 342, 357, 358, 360, 370, 375], "min_observ": [1, 209, 250], "creat": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 42, 43, 44, 46, 47, 48, 52, 54, 70, 71, 91, 92, 100, 105, 112, 115, 161, 171, 172, 176, 180, 182, 187, 192, 208, 214, 215, 280, 356, 360, 366, 369, 370, 375], "new": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 42, 43, 44, 46, 47, 48, 53, 74, 85, 100, 105, 106, 112, 115, 123, 144, 149, 162, 171, 172, 176, 180, 181, 182, 188, 191, 193, 280, 285, 303, 329, 342, 360, 370], "instanc": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 36, 37, 42, 43, 44, 46, 47, 48, 50, 54, 70, 180, 182, 185, 187, 188, 362, 370], "properti": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 36, 46, 48, 50, 74, 280, 320, 356, 360, 362, 365, 366, 370], "bool": [1, 8, 9, 13, 23, 32, 36, 48, 54, 253, 256], "mem_save_mod": 1, "flag": [1, 13, 23, 32, 37, 54, 56, 58, 67, 68, 70, 71, 100, 102, 103, 110, 113, 115, 126, 127, 129, 130, 131, 132, 133, 146, 149, 159, 161, 171, 172, 174, 176], "memori": [1, 9, 11, 13, 33, 34, 36, 46, 47, 51, 55, 56, 67, 68, 82, 86, 90, 100, 115, 123, 127, 135, 149, 151, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 184, 190, 191, 192, 224, 229, 244, 280, 318, 352, 359, 360, 361, 362, 366, 368, 370, 373], "save": [1, 9, 54, 90], "mode": [1, 9, 21, 54, 55, 64, 65, 66, 68, 69, 70, 95, 96, 97, 99, 101, 103, 105, 106, 113, 117, 118, 119, 120, 121, 122, 123, 126, 147, 148, 149, 151, 153, 154, 155, 168, 169, 170, 188, 192, 194, 318, 321, 335, 345, 346, 348, 356], "getter": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 37, 362, 370], "setter": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 362, 370], "get_mem_save_mod": 1, "const": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 33, 34, 36, 37, 39, 44, 46, 47, 48, 52, 185, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 275, 277, 280, 281, 282, 283, 286, 304, 311, 312, 315, 322, 324, 325, 329, 342, 349, 357, 358, 360, 361, 362, 370, 375], "auto": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 33, 34, 36, 37, 39, 52, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 275, 277, 280, 281, 282, 283, 286, 304, 311, 312, 315, 322, 324, 325, 329, 342, 349, 357, 358, 360, 361, 375], "set_mem_save_mod": 1, "valu": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 150, 152, 154, 157, 158, 159, 160, 161, 163, 164, 165, 167, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 187, 192, 193, 204, 208, 216, 217, 221, 223, 227, 228, 230, 247, 253, 256, 257, 258, 262, 267, 280, 303, 318, 324, 329, 330, 336, 342, 352, 353, 355, 357, 359, 360, 361, 362, 366, 367, 370, 372], "number": [1, 3, 4, 8, 9, 11, 13, 21, 32, 36, 39, 40, 41, 44, 46, 47, 48, 50, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 115, 117, 118, 120, 121, 122, 123, 130, 131, 132, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 159, 160, 164, 165, 169, 170, 171, 172, 175, 176, 180, 182, 184, 185, 186, 187, 188, 192, 193, 205, 208, 212, 213, 214, 215, 224, 231, 253, 256, 322, 324, 330, 332, 342, 352, 360, 366, 367, 369, 370, 372], "get_min_observ": 1, "set_min_observ": 1, "result_option_id": [1, 5, 8, 21, 24, 29], "result_opt": [1, 5, 8, 21, 24, 29, 206, 207, 209, 222, 223, 248, 249, 250, 261, 263, 271, 322], "choos": [1, 4, 5, 8, 9, 21, 24, 29, 57, 58, 70, 71, 75, 85, 90, 91, 100, 106, 127, 138, 139, 144, 184, 274, 325, 330, 356], "which": [1, 5, 8, 9, 13, 21, 24, 29, 33, 34, 36, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 85, 86, 90, 91, 92, 93, 95, 97, 100, 102, 104, 105, 106, 107, 109, 110, 112, 115, 125, 129, 130, 131, 132, 133, 140, 146, 149, 155, 157, 159, 169, 171, 172, 175, 177, 178, 179, 180, 188, 189, 191, 193, 288, 320, 329, 330, 342, 345, 346, 348, 353, 363, 364, 366, 367, 368, 370, 375], "should": [1, 5, 8, 21, 24, 29, 33, 34, 36, 46, 47, 48, 54, 68, 91, 92, 97, 99, 105, 130, 131, 137, 138, 145, 146, 150, 161, 180, 183, 185, 260, 362, 366, 370, 375], "return": [1, 3, 4, 5, 8, 11, 13, 21, 24, 29, 33, 34, 36, 39, 46, 47, 52, 54, 56, 58, 60, 63, 64, 65, 70, 71, 82, 86, 116, 117, 118, 126, 127, 128, 137, 139, 140, 146, 149, 160, 161, 172, 180, 182, 185, 187, 188, 192, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 275, 277, 280, 281, 283, 286, 291, 293, 304, 311, 312, 324, 325, 329, 332, 334, 336, 342, 357, 358, 359, 360, 362, 366, 370], "get_result_opt": [1, 5, 8, 21, 24, 29], "set_result_opt": [1, 5, 8, 21, 24, 29, 206, 207, 209, 222, 223, 248, 249, 250, 261, 263, 271, 322], "distanc": [1, 14, 16, 17, 18, 19, 21, 49, 55, 67, 68, 69, 100, 102, 103, 106, 144, 171, 173, 220, 229, 259, 260, 303, 308, 309, 310, 318, 321, 324, 335, 342, 352, 370], "search": [1, 11, 13, 21, 53, 90, 100, 135, 220, 261, 291, 293, 303, 332, 334, 335, 341, 370], "get_epsilon": [1, 32], "set_epsilon": [1, 32, 238, 239], "invari": [1, 3, 4, 8, 9, 21, 23, 32, 54], "0": [1, 3, 4, 8, 9, 16, 17, 18, 19, 21, 23, 28, 32, 33, 34, 36, 37, 46, 47, 48, 52, 53, 54, 56, 57, 58, 59, 60, 61, 67, 69, 70, 71, 74, 75, 76, 81, 83, 84, 85, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 110, 114, 115, 123, 125, 130, 131, 132, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 152, 153, 158, 159, 160, 163, 171, 172, 180, 182, 184, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 280, 281, 283, 310, 311, 312, 322, 324, 329, 330, 332, 334, 338, 342, 344, 348, 352, 353, 357, 358, 360, 370, 372, 375], "struct": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 44, 54, 253, 256], "parameter": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32], "entiti": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32, 54, 180, 366, 370], "alia": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32, 39, 362], "tabl": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 37, 44, 45, 49, 52, 54, 56, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 75, 78, 79, 81, 82, 83, 84, 85, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 192, 195, 197, 198, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 275, 277, 281, 282, 283, 286, 304, 311, 312, 315, 318, 322, 324, 325, 329, 330, 336, 342, 349, 357, 358, 359, 361, 362, 370, 375], "weight": [1, 9, 21, 24, 29, 32, 57, 58, 59, 60, 61, 67, 70, 71, 72, 85, 90, 100, 102, 103, 106, 110, 132, 143, 144, 145, 174, 195, 198, 210, 251, 252, 271, 307, 322, 330, 343, 352, 363, 364, 365, 366, 370], "n": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 29, 32, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 90, 91, 92, 97, 98, 99, 100, 101, 102, 104, 106, 107, 109, 110, 112, 114, 115, 116, 119, 123, 125, 126, 127, 128, 130, 131, 132, 133, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 164, 165, 168, 169, 170, 171, 172, 177, 195, 197, 198, 203, 205, 206, 207, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 276, 315, 322, 324, 325, 326, 329, 330, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 366, 370, 372], "time": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 29, 32, 54, 56, 58, 59, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 172, 175, 177, 180, 182, 187, 193, 195, 197, 198, 326, 329, 330, 337, 338, 339, 340, 352, 366, 370, 372], "p": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 25, 28, 29, 32, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 163, 164, 168, 169, 170, 171, 172, 177, 180, 193, 195, 198, 308, 310, 322, 324, 325, 326, 329, 330, 336, 337, 338, 339, 340, 342, 343, 344, 345, 348, 349, 352, 366, 372], "where": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 29, 32, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 84, 85, 90, 91, 92, 97, 99, 100, 105, 106, 107, 109, 110, 114, 115, 116, 117, 118, 123, 125, 126, 127, 128, 130, 131, 132, 136, 138, 139, 140, 143, 144, 145, 149, 150, 152, 153, 158, 164, 165, 167, 170, 171, 172, 177, 180, 184, 199, 285, 324, 326, 329, 330, 332, 336, 338, 340, 342, 344, 345, 346, 348, 352, 353, 355, 370, 375], "each": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 24, 29, 32, 44, 48, 54, 56, 58, 59, 60, 61, 68, 69, 70, 71, 72, 74, 75, 85, 90, 91, 92, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 129, 136, 138, 139, 140, 141, 144, 145, 146, 147, 149, 154, 155, 158, 160, 164, 165, 169, 171, 172, 178, 180, 181, 182, 184, 192, 193, 195, 197, 198, 276, 291, 307, 322, 324, 325, 329, 330, 332, 342, 343, 349, 352, 353, 355, 359, 362, 365, 369, 370, 373, 375], "row": [1, 3, 4, 5, 8, 13, 16, 17, 18, 19, 24, 29, 33, 35, 45, 47, 48, 56, 67, 68, 85, 96, 99, 100, 101, 105, 118, 139, 146, 147, 148, 149, 150, 177, 180, 181, 182, 184, 187, 208, 215, 283, 329, 330, 359, 366, 370, 372, 375], "store": [1, 3, 4, 5, 8, 16, 17, 18, 19, 24, 29, 32, 36, 37, 44, 46, 47, 48, 50, 54, 56, 66, 67, 68, 78, 79, 85, 95, 96, 97, 99, 100, 103, 105, 106, 125, 126, 139, 140, 143, 149, 151, 164, 170, 171, 175, 181, 182, 187, 192, 329, 342, 352, 355, 360, 361, 363, 364, 366, 367, 368, 369, 370, 375], "one": [1, 3, 4, 5, 8, 16, 17, 18, 19, 24, 29, 36, 42, 43, 44, 48, 50, 54, 60, 66, 67, 70, 71, 74, 82, 86, 90, 91, 92, 95, 99, 100, 102, 103, 105, 106, 107, 109, 112, 114, 115, 126, 129, 130, 131, 132, 133, 138, 139, 140, 141, 143, 145, 146, 149, 150, 158, 165, 167, 170, 171, 172, 176, 180, 183, 184, 188, 192, 208, 279, 324, 326, 329, 330, 334, 336, 352, 353, 359, 360, 362, 366, 367, 368, 370], "featur": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 24, 29, 37, 45, 46, 47, 54, 56, 57, 58, 59, 60, 61, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 85, 90, 91, 92, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 130, 131, 132, 138, 143, 144, 145, 146, 149, 160, 163, 164, 171, 172, 176, 177, 180, 181, 184, 192, 193, 200, 253, 256, 274, 276, 279, 285, 288, 297, 303, 322, 324, 325, 326, 329, 330, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 353, 355, 369, 370, 372], "vector": [1, 3, 4, 5, 8, 9, 14, 16, 17, 18, 19, 21, 24, 26, 29, 39, 44, 45, 49, 53, 54, 55, 57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 85, 87, 88, 89, 90, 91, 92, 100, 101, 102, 103, 105, 106, 107, 109, 112, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 143, 144, 145, 146, 149, 157, 158, 159, 160, 164, 168, 169, 170, 172, 174, 177, 180, 181, 184, 188, 191, 193, 215, 274, 276, 285, 303, 309, 317, 318, 321, 322, 324, 325, 326, 329, 330, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 355, 365, 366, 370, 372], "get_data": [1, 3, 4, 5, 8, 9, 21, 24, 29, 32, 36, 46, 47, 244, 280, 360], "set_data": [1, 3, 4, 5, 8, 9, 21, 24, 29, 32], "A": [1, 3, 4, 8, 9, 16, 17, 18, 29, 32, 37, 48, 50, 53, 54, 56, 58, 60, 64, 66, 70, 71, 75, 81, 91, 96, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 117, 120, 121, 122, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 145, 147, 155, 158, 159, 161, 165, 167, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 187, 195, 197, 198, 329, 330, 334, 336, 353, 355, 362, 365, 366, 367, 369, 370, 372, 373], "singl": [1, 49, 63, 64, 65, 67, 70, 81, 86, 90, 91, 100, 102, 105, 115, 116, 117, 118, 126, 129, 130, 131, 132, 133, 145, 146, 172, 187, 188, 318, 321, 356, 359, 366, 370], "column": [1, 35, 45, 46, 47, 48, 67, 68, 125, 126, 149, 150, 152, 164, 170, 177, 180, 181, 182, 184, 204, 208, 215, 247, 281, 329, 359, 366, 367, 368, 370, 372], "per": [1, 9, 70, 71, 72, 90, 139, 181, 211, 254, 255, 330], "get_weight": [1, 9, 29, 32], "set_weight": [1, 9, 29, 32], "core_observ": 1, "m": [1, 4, 16, 17, 18, 19, 21, 53, 54, 59, 61, 66, 70, 74, 75, 85, 90, 97, 98, 99, 101, 105, 119, 127, 128, 130, 131, 132, 133, 138, 139, 140, 144, 158, 163, 180, 184, 197, 253, 256, 324, 326, 329, 330, 337, 338, 339, 340, 342, 345, 346, 348, 349, 352, 372], "core": [1, 53, 67, 68, 69, 322, 376], "get_core_observ": 1, "set_core_observ": 1, "respons": [1, 3, 9, 21, 24, 32, 36, 46, 47, 61, 70, 71, 72, 73, 74, 75, 76, 90, 91, 92, 93, 107, 109, 112, 113, 114, 115, 132, 158, 178, 183, 185, 198, 209, 217, 218, 219, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 253, 256, 258, 259, 260, 263, 268, 271, 322, 330, 352, 362, 370, 372], "1": [1, 3, 4, 8, 9, 11, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 37, 44, 53, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 97, 100, 101, 102, 104, 106, 107, 109, 110, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 152, 154, 157, 158, 159, 160, 163, 164, 165, 168, 171, 172, 180, 184, 193, 195, 204, 208, 210, 211, 215, 218, 219, 221, 224, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 253, 254, 256, 259, 262, 267, 268, 271, 280, 281, 283, 322, 324, 325, 326, 329, 330, 332, 334, 338, 340, 342, 343, 344, 345, 346, 348, 349, 352, 356, 357, 358, 360, 370, 372, 375, 376], "y_i": [1, 3, 57, 58, 59, 61, 70, 71, 72, 75, 76, 90, 91, 100, 101, 115, 130, 131, 132, 158, 171, 172, 324, 330, 337, 339, 342, 344, 352, 372], "assign": [1, 3, 36, 44, 48, 67, 68, 69, 85, 90, 100, 102, 103, 106, 157, 159, 180, 181, 322, 324, 360, 369, 370], "sampl": [1, 3, 4, 9, 17, 53, 66, 70, 71, 72, 76, 90, 100, 104, 105, 106, 110, 119, 132, 136, 139, 141, 253, 256, 297, 329, 330, 332, 338, 349, 353, 362, 370], "x_i": [1, 3, 57, 58, 59, 61, 69, 70, 71, 72, 74, 75, 76, 78, 85, 90, 91, 92, 95, 100, 101, 106, 107, 109, 112, 114, 115, 123, 130, 131, 132, 138, 144, 158, 163, 171, 172, 324, 330, 337, 338, 339, 340, 342, 352, 372], "get_respons": [1, 3, 9, 21, 24, 32, 209, 210, 211, 217, 218, 219, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 268, 271, 322], "set_respons": [1, 3, 9, 21, 24, 32], "core_flag": 1, "get_core_flag": 1, "set_core_flag": 1, "core_observation_indic": 1, "indic": [1, 5, 8, 21, 24, 29, 32, 37, 42, 43, 44, 46, 48, 50, 54, 61, 66, 67, 68, 70, 85, 91, 92, 97, 99, 100, 102, 103, 110, 113, 115, 127, 130, 131, 132, 133, 136, 137, 139, 140, 141, 143, 144, 145, 171, 172, 180, 208, 220, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 261, 268, 330, 360, 369, 370, 374], "get_core_observation_indic": 1, "set_core_observation_indic": 1, "option": [1, 5, 8, 29, 37, 54, 58, 67, 70, 74, 75, 76, 100, 102, 110, 115, 126, 136, 139, 140, 146, 150, 161, 171, 172, 180, 181, 192, 195, 198, 361, 370], "default_result_opt": [1, 5, 8, 24], "cluster_count": [1, 3, 4, 216, 257], "found": [1, 67, 68, 74, 180, 375], "get_cluster_count": [1, 3, 4, 209, 250, 277, 324], "set_cluster_count": [1, 3, 4, 52, 216, 217, 257, 258, 275, 277, 311, 312, 324, 325], "desc": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 223], "precondit": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 36, 48], "has_data": [1, 3, 4, 8, 17, 19, 21, 24, 48], "true": [1, 3, 4, 8, 9, 13, 17, 19, 21, 23, 24, 32, 36, 54, 56, 67, 70, 71, 72, 74, 75, 76, 90, 91, 92, 102, 103, 105, 110, 112, 113, 115, 126, 130, 131, 132, 138, 146, 157, 159, 171, 174, 185, 218, 219, 222, 223, 225, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 253, 256, 259, 260, 263, 264, 265, 266, 268, 280, 286, 329, 353, 360, 363, 364, 366, 367, 368, 369, 375], "row_count": [1, 3, 4, 8, 9, 17, 19, 21, 24, 32, 33, 34, 46, 47, 204, 208, 215, 224, 247, 281, 283, 357, 358, 369, 370, 375], "column_count": [1, 3, 4, 8, 9, 17, 19, 21, 24, 32, 33, 34, 46, 47, 204, 208, 215, 247, 281, 283, 357, 358, 369, 375], "void": [1, 9, 29, 33, 34, 36, 46, 47, 54, 180, 215, 216, 222, 225, 226, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 280, 315, 322, 349, 360, 370], "run_comput": [1, 4, 29, 271, 275, 315, 322, 325, 349], "max_observ": [1, 271, 322], "5": [1, 8, 9, 21, 32, 33, 34, 53, 54, 70, 76, 90, 94, 96, 104, 110, 141, 163, 204, 208, 210, 215, 217, 218, 219, 224, 225, 226, 232, 233, 234, 235, 236, 237, 247, 251, 252, 253, 255, 258, 259, 260, 264, 265, 266, 271, 281, 283, 286, 304, 322, 329, 332, 334, 342, 357, 358], "dbscan_desc": [1, 209, 250, 271, 322], "kmean": [1, 3, 4, 52, 216, 217, 257, 258, 271, 277, 311, 312, 322, 324], "print_tabl": [1, 3, 4, 8, 21, 52, 271, 275, 277, 286, 304, 311, 312, 322, 324, 325, 329, 342], "python": [1, 3, 8, 21, 32, 55, 56, 57, 59, 61, 62, 66, 69, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 91, 92, 97, 100, 106, 112, 113, 115, 119, 123, 125, 126, 130, 136, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 163, 164, 165, 167, 170, 171, 172, 182, 269, 272, 284, 287, 289, 302, 316, 322, 323, 324, 328, 329, 331, 341, 342, 351, 352], "support": [1, 3, 8, 14, 21, 33, 34, 37, 44, 45, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 66, 69, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 106, 110, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 128, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 199, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268, 269, 272, 284, 287, 289, 302, 316, 317, 318, 321, 322, 323, 324, 326, 328, 329, 330, 331, 334, 335, 336, 341, 342, 344, 349, 359, 360, 361, 366, 367, 370, 375, 376], "batch": [1, 3, 4, 8, 11, 13, 21, 29, 32, 53, 54, 66, 69, 82, 97, 99, 103, 106, 111, 119, 123, 127, 130, 131, 132, 133, 136, 138, 139, 140, 151, 153, 166, 170, 174, 177, 194, 269, 272, 273, 278, 284, 287, 289, 290, 292, 294, 296, 298, 300, 302, 305, 313, 316, 318, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 336, 341, 342, 343, 349, 350, 351, 352, 366, 370], "process": [1, 3, 4, 8, 11, 13, 21, 29, 32, 37, 44, 49, 53, 54, 66, 69, 74, 97, 106, 108, 111, 112, 119, 123, 130, 131, 139, 140, 141, 153, 166, 177, 180, 181, 187, 188, 192, 194, 200, 215, 269, 272, 273, 278, 284, 287, 289, 290, 292, 294, 296, 298, 300, 302, 305, 313, 316, 318, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 341, 342, 343, 349, 350, 351, 352, 353, 361, 366, 370, 373, 374], "dbscan_brute_force_batch": [1, 201, 202, 245, 269, 322, 323], "cpp": [1, 3, 4, 8, 11, 13, 21, 29, 32, 54, 56, 57, 58, 59, 61, 62, 66, 69, 71, 72, 75, 76, 78, 79, 85, 91, 92, 97, 100, 101, 106, 110, 112, 113, 115, 119, 123, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 201, 202, 245, 269, 272, 273, 278, 284, 287, 289, 290, 292, 294, 296, 298, 300, 302, 305, 313, 316, 318, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 336, 341, 342, 343, 349, 350, 351, 352, 356, 375], "scikit": [1, 3, 8, 21, 32, 56, 57, 59, 61, 62, 66, 69, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 91, 92, 97, 100, 106, 112, 113, 115, 119, 123, 125, 126, 130, 136, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 163, 164, 165, 167, 170, 171, 172, 269, 272, 284, 287, 289, 302, 316, 322, 323, 324, 328, 329, 331, 341, 342, 351, 352], "learn": [1, 3, 8, 17, 18, 19, 21, 32, 46, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 90, 91, 92, 97, 100, 101, 106, 108, 111, 112, 113, 115, 116, 117, 118, 119, 123, 125, 126, 130, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 163, 164, 165, 167, 170, 171, 172, 186, 188, 191, 269, 272, 284, 287, 289, 297, 299, 301, 302, 316, 320, 322, 323, 324, 328, 329, 331, 338, 339, 340, 341, 342, 351, 352, 367, 375], "intelex": [1, 3, 8, 21, 32, 56, 57, 59, 61, 62, 66, 69, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 91, 92, 97, 100, 106, 112, 113, 115, 119, 123, 125, 126, 130, 136, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 163, 164, 165, 167, 170, 171, 172, 269, 272, 284, 287, 289, 302, 316, 322, 323, 324, 328, 329, 331, 341, 342, 351, 352], "chapter": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 55, 108, 111, 165, 323, 333], "describ": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 40, 41, 44, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 82, 85, 86, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 137, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 176, 180, 184, 187, 195, 197, 198, 320, 323, 329, 333, 336, 342, 362, 365, 366, 367, 369, 370], "program": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 35, 38, 45, 51, 199, 270, 274, 276, 279, 285, 288, 291, 293, 295, 297, 299, 301, 303, 307, 314, 317, 318, 321, 335, 359, 362, 366, 370], "interfac": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 35, 38, 45, 51, 54, 56, 58, 59, 60, 61, 62, 66, 69, 71, 72, 73, 75, 76, 78, 79, 82, 85, 91, 92, 97, 100, 101, 106, 112, 113, 115, 119, 123, 125, 126, 128, 132, 135, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 192, 199, 270, 274, 276, 279, 285, 288, 291, 293, 295, 297, 299, 301, 303, 307, 314, 317, 335, 359, 362, 366, 370, 376], "dbscan": [2, 14, 69, 209, 250, 270, 271, 323, 335], "k": [2, 14, 16, 17, 19, 20, 32, 36, 53, 54, 55, 57, 58, 59, 61, 66, 78, 79, 85, 90, 91, 97, 101, 107, 109, 110, 112, 113, 114, 115, 123, 127, 128, 130, 131, 133, 135, 139, 141, 152, 158, 159, 160, 163, 171, 172, 173, 174, 191, 198, 274, 276, 303, 318, 321, 323, 326, 329, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 352, 354, 370], "mean": [2, 5, 8, 9, 14, 29, 53, 54, 55, 63, 64, 65, 66, 70, 71, 72, 74, 75, 76, 82, 83, 85, 86, 91, 92, 100, 107, 109, 116, 117, 118, 119, 126, 128, 135, 143, 144, 145, 146, 149, 150, 158, 173, 174, 177, 185, 203, 206, 246, 248, 274, 276, 279, 286, 314, 315, 318, 323, 326, 329, 330, 332, 334, 335, 349, 353, 366, 370], "initi": [2, 3, 11, 13, 14, 36, 46, 47, 48, 57, 58, 59, 64, 65, 68, 70, 82, 86, 87, 88, 89, 90, 95, 96, 102, 103, 112, 113, 115, 117, 118, 121, 140, 143, 144, 145, 147, 148, 155, 169, 171, 174, 175, 180, 181, 192, 193, 197, 200, 274, 323, 324, 329, 330, 335, 342, 366, 375], "partit": [3, 4, 11, 70, 74, 90, 99, 100, 106, 274, 276, 324, 325, 330, 342, 353, 355], "minim": [3, 9, 24, 53, 54, 56, 61, 70, 72, 90, 92, 97, 100, 106, 107, 109, 114, 115, 127, 130, 131, 135, 191, 276, 307, 324, 330, 343, 352], "criterion": [3, 59, 61, 70, 74, 75, 90, 144, 165, 276, 324, 330], "character": [3, 54, 66, 106, 177, 178, 191, 276, 320, 324], "repres": [3, 5, 17, 36, 37, 40, 44, 48, 56, 62, 64, 65, 70, 73, 74, 78, 79, 82, 85, 86, 90, 93, 97, 101, 103, 105, 106, 113, 117, 118, 121, 122, 127, 128, 132, 135, 136, 137, 139, 140, 147, 148, 149, 152, 154, 155, 160, 161, 163, 168, 169, 176, 177, 178, 182, 183, 184, 276, 279, 297, 324, 326, 330, 338, 353, 360, 361, 362, 369], "call": [3, 8, 36, 46, 47, 52, 54, 56, 59, 61, 69, 70, 71, 81, 91, 92, 103, 105, 106, 112, 115, 133, 149, 151, 170, 171, 175, 176, 180, 182, 185, 187, 188, 189, 192, 193, 253, 256, 276, 285, 324, 329, 330, 334, 352, 356, 360, 362, 370], "centroid": [3, 4, 52, 102, 103, 104, 105, 217, 258, 274, 275, 276, 277, 311, 312, 324, 325], "lloyd": [3, 53, 102, 103, 106, 276], "": [3, 53, 56, 57, 58, 59, 68, 70, 72, 90, 102, 103, 106, 119, 127, 130, 131, 139, 141, 144, 151, 161, 180, 200, 276, 329, 330, 336, 349, 352, 360, 366, 370, 373], "train_input": [3, 8, 9, 21, 32, 276, 285, 288, 303, 317, 324, 329, 330, 342, 352], "train_result": [3, 8, 9, 21, 32, 218, 219, 220, 222, 261, 263, 276, 285, 288, 303, 317, 324, 329, 330, 342, 352, 375], "infer_input": [3, 8, 9, 21, 32, 276, 285, 288, 303, 317, 324, 329, 330, 342, 352], "infer_result": [3, 8, 9, 21, 32, 276, 285, 288, 303, 317, 324, 329, 330, 342, 352], "comput": [3, 8, 9, 21, 23, 25, 26, 28, 32, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 75, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 98, 99, 100, 101, 104, 105, 108, 111, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 134, 135, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 181, 183, 185, 187, 190, 191, 192, 194, 195, 203, 205, 206, 207, 209, 214, 215, 216, 221, 223, 224, 227, 228, 229, 230, 244, 246, 248, 249, 250, 257, 262, 267, 270, 274, 276, 279, 285, 288, 291, 293, 295, 297, 299, 301, 303, 306, 307, 308, 309, 310, 314, 317, 318, 321, 324, 329, 330, 342, 352, 366], "lloyd_dens": 3, "2": [3, 4, 9, 28, 32, 33, 34, 36, 53, 54, 56, 58, 59, 60, 65, 67, 70, 71, 72, 75, 76, 78, 79, 83, 85, 86, 88, 90, 92, 97, 100, 101, 106, 107, 109, 112, 114, 115, 118, 119, 122, 128, 129, 130, 131, 132, 136, 139, 141, 144, 148, 154, 157, 158, 159, 164, 165, 168, 171, 172, 180, 184, 189, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 310, 324, 325, 330, 332, 334, 338, 339, 344, 346, 348, 349, 352, 357, 358, 360, 372, 375], "max_iteration_count": [3, 32, 216, 257], "maximum": [3, 13, 29, 32, 53, 54, 67, 68, 74, 75, 76, 85, 100, 116, 117, 118, 119, 125, 135, 137, 139, 181, 203, 246, 314, 315, 349], "iter": [3, 24, 32, 44, 53, 54, 57, 58, 59, 60, 61, 68, 85, 90, 91, 92, 94, 96, 102, 105, 106, 107, 109, 110, 112, 115, 134, 135, 136, 138, 139, 140, 141, 144, 171, 172, 173, 216, 217, 257, 258, 307, 324, 342, 343, 352, 370], "t": [3, 9, 21, 32, 33, 34, 36, 53, 54, 56, 57, 58, 59, 62, 70, 71, 72, 85, 90, 96, 97, 99, 101, 127, 130, 136, 138, 139, 140, 141, 144, 149, 150, 158, 170, 171, 244, 281, 283, 324, 329, 330, 337, 338, 340, 352, 357, 358, 366], "100": [3, 9, 57, 58, 59, 61, 70, 137, 139, 172, 211, 234, 235, 236, 237, 238, 239, 242, 243, 268, 370], "get_max_iteration_count": [3, 32], "set_max_iteration_count": [3, 32, 52, 216, 217, 224, 234, 235, 240, 241, 242, 243, 257, 258, 268, 277, 311, 312, 324], "accuracy_threshold": [3, 32, 216, 257], "threshold": [3, 9, 32, 59, 61, 70, 74, 85, 94, 96, 97, 100, 102, 143, 144, 145, 158, 216, 257, 330], "varepsilon": [3, 32, 59, 136, 324], "stop": [3, 9, 32, 70, 90, 100, 127, 129, 144, 185, 324, 330], "condit": [3, 32, 54, 56, 59, 85, 87, 88, 89, 100, 115, 158, 163, 171, 187, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 324, 342, 370], "get_accuracy_threshold": [3, 32], "set_accuracy_threshold": [3, 32, 52, 216, 217, 224, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 257, 258, 268, 277, 311, 312, 324], "denot": [3, 4, 5, 8, 9, 11, 13, 21, 24, 29, 32, 71, 74, 91, 92, 97, 324, 334, 353, 372], "public": [3, 8, 9, 11, 13, 21, 24, 32, 33, 34, 36, 37, 42, 43, 46, 47, 48, 53, 54, 180, 192, 362], "get_centroid": [3, 4, 52, 216, 217, 257, 258, 275, 277, 311, 312, 324, 325], "set_centroid": [3, 4], "initial_centroid": [3, 52, 217, 258, 277, 311, 312, 324], "get_initial_centroid": 3, "set_initial_centroid": 3, "leq": [3, 59, 70, 81, 84, 90, 105, 127, 128, 130, 131, 132, 133, 138, 139, 149, 150, 160, 163, 171, 324, 329, 338, 340, 342, 344, 345, 346, 348, 352], "objective_function_valu": 3, "object": [3, 14, 23, 33, 34, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 82, 85, 86, 90, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 184, 187, 192, 195, 197, 198, 216, 217, 257, 258, 277, 306, 307, 311, 312, 318, 321, 324, 335, 344, 360, 361, 362, 369, 370, 374], "phi_x": [3, 105], "get_objective_function_valu": [3, 52, 216, 217, 257, 258, 277, 311, 312, 324], "set_objective_function_valu": 3, "label": [3, 8, 9, 11, 13, 21, 24, 32, 57, 58, 59, 60, 61, 71, 74, 75, 91, 92, 100, 115, 121, 122, 123, 130, 131, 157, 159, 165, 171, 172, 184, 195, 205, 223, 224, 277, 286, 291, 304, 324, 329, 330, 332, 342, 343, 344, 370], "get_label": [3, 9, 11, 21, 32, 205, 224, 277, 304, 324, 342], "set_label": [3, 9, 11, 21, 32], "iteration_count": 3, "perform": [3, 9, 36, 46, 47, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 74, 75, 76, 83, 84, 87, 88, 89, 94, 95, 96, 98, 99, 100, 101, 103, 105, 113, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 145, 147, 152, 154, 155, 157, 158, 159, 161, 163, 165, 167, 168, 169, 175, 177, 180, 181, 183, 186, 188, 189, 199, 320, 324, 330, 342, 352, 353, 359, 362, 366, 369, 370, 375, 376], "get_iteration_count": [3, 216, 217, 257, 258], "set_iteration_count": 3, "get_model": [3, 8, 9, 21, 32, 52, 210, 211, 217, 218, 219, 220, 222, 225, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 268, 277, 286, 304, 311, 312, 324, 329, 342, 375], "set_model": [3, 8, 9, 21, 32], "postcondit": [3, 4, 8, 17, 19, 21, 24, 36], "trained_model": [3, 8, 9, 32], "defin": [3, 35, 36, 39, 44, 46, 47, 52, 56, 58, 59, 60, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 85, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 112, 115, 116, 117, 118, 125, 126, 129, 131, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 163, 168, 169, 171, 172, 175, 177, 180, 182, 183, 185, 192, 193, 195, 197, 198, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 311, 312, 324, 329, 330, 332, 334, 342, 345, 346, 348, 352, 355, 359, 360, 362, 363, 364, 365, 366, 369, 370], "correspond": [3, 9, 46, 54, 56, 60, 70, 73, 74, 90, 91, 93, 95, 96, 99, 100, 113, 121, 136, 150, 171, 172, 176, 177, 178, 180, 181, 184, 195, 330, 334, 342, 352, 353, 355, 367, 370], "run_train": [3, 8, 21, 52, 277, 286, 304, 311, 312, 324, 329, 342], "kmeans_desc": [3, 4, 52, 216, 217, 257, 258, 275, 277, 311, 312, 324, 325], "10": [3, 4, 21, 52, 53, 54, 61, 85, 94, 95, 96, 98, 99, 115, 139, 204, 210, 231, 247, 251, 252, 255, 275, 277, 304, 311, 312, 324, 325, 332, 342, 344, 376], "50": [3, 52, 90, 277, 311, 312, 324], "1e": [3, 32, 52, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268, 277, 311, 312, 324], "4": [3, 33, 34, 36, 52, 53, 180, 204, 208, 215, 224, 232, 247, 277, 280, 281, 283, 311, 312, 324, 332, 334, 357, 358, 360], "print_valu": [3, 52, 277, 311, 312, 324], "run_infer": [3, 8, 21, 277, 286, 304, 324, 329, 342], "new_data": [3, 8, 21, 277, 286, 304, 324, 329, 342], "kmeans_lloyd_dense_batch": [3, 106, 201, 202, 245, 272, 323, 324], "receiv": [4, 11, 13, 58, 59, 160, 274, 291, 293, 325, 332, 334, 374], "after": [4, 9, 68, 70, 71, 74, 81, 85, 91, 92, 103, 112, 115, 126, 127, 134, 140, 171, 182, 192, 260, 274, 325, 366, 370], "dens": [4, 5, 9, 16, 17, 18, 19, 25, 26, 28, 29, 46, 71, 72, 75, 76, 91, 92, 100, 110, 115, 181, 183, 208, 211, 216, 257, 274, 275, 279, 288, 295, 297, 299, 301, 308, 309, 310, 314, 343, 344, 366, 368, 369], "random": [4, 5, 9, 53, 60, 73, 76, 81, 82, 83, 84, 85, 86, 88, 90, 97, 98, 99, 100, 104, 106, 112, 115, 136, 138, 139, 140, 141, 163, 171, 252, 255, 274, 279, 288, 325, 326, 330], "parallel": [4, 53, 70, 86, 104, 105, 106, 143, 149, 151, 170, 185, 188, 215, 274, 325, 334, 370], "kmeans_init": [4, 216, 257, 275, 325], "init": [4, 54, 96, 375], "seed": [4, 9, 53, 70, 86, 87, 88, 89], "none": [4, 9, 21, 32, 37, 50, 54, 70, 75, 76, 146, 165, 167], "detail": [4, 9, 21, 29, 32, 33, 34, 36, 54, 64, 65, 67, 68, 73, 78, 79, 82, 86, 93, 95, 96, 98, 99, 103, 104, 105, 108, 111, 113, 116, 117, 118, 121, 122, 125, 128, 129, 133, 134, 137, 141, 146, 147, 148, 152, 154, 155, 164, 165, 167, 169, 175, 179, 180, 181, 182, 187, 195, 197, 198, 247, 288, 318, 321, 330, 332, 334, 342, 370, 375], "v1": 4, "enable_if_not_default_dens": 4, "get_se": [4, 9], "set_se": [4, 9], "local_trials_count": 4, "attempt": [4, 54], "find": [4, 9, 21, 32, 54, 55, 59, 70, 71, 72, 74, 75, 85, 90, 91, 92, 100, 106, 135, 151, 183, 303, 324, 325, 329, 330, 332, 334, 342, 370, 375], "best": [4, 9, 54, 56, 62, 66, 74, 75, 78, 79, 81, 85, 90, 97, 106, 110, 123, 143, 149, 151, 170, 171], "term": [4, 9, 85, 90, 107, 109, 115, 123, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 171, 180], "potenti": 4, "If": [4, 8, 9, 13, 33, 34, 44, 46, 47, 48, 50, 54, 56, 62, 66, 67, 68, 70, 71, 72, 74, 76, 78, 79, 85, 90, 97, 100, 106, 110, 112, 115, 123, 126, 127, 129, 130, 131, 132, 136, 138, 139, 140, 141, 143, 145, 146, 149, 150, 152, 160, 164, 171, 172, 182, 185, 187, 189, 192, 193, 324, 330, 336, 353, 360, 372], "equal": [4, 9, 25, 36, 44, 46, 47, 48, 50, 54, 56, 58, 67, 68, 70, 74, 81, 100, 101, 105, 106, 110, 113, 132, 136, 138, 139, 141, 143, 150, 158, 160, 164, 171, 172, 180, 182, 184, 208, 280, 308, 325, 330, 342, 345, 360, 370], "trial": [4, 81], "int": [4, 33, 34, 36, 56, 83, 85, 106, 123, 155, 169, 187, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 357, 358, 360], "log": [4, 58, 75, 85, 106, 115, 123, 128, 130, 344, 375], "enable_if_plus_plus_dens": 4, "get_local_trials_count": 4, "set_local_trials_count": 4, "local_tri": 4, "expr": 4, "parallel_plus_dens": [4, 216], "plus_plus_dens": [4, 216, 257], "random_dens": [4, 216, 257], "obtain": [4, 5, 33, 34, 70, 102, 103, 125, 160, 162, 172, 175, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 326, 330, 359, 366, 375], "kmeans_init_dens": [4, 106, 201, 202, 245, 273, 323, 325], "In": [5, 33, 34, 53, 54, 58, 60, 64, 68, 70, 71, 72, 75, 82, 86, 91, 92, 95, 96, 99, 100, 101, 103, 105, 106, 107, 109, 110, 113, 115, 117, 121, 123, 124, 126, 128, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 155, 161, 162, 163, 164, 169, 170, 171, 172, 175, 177, 180, 181, 182, 184, 185, 187, 192, 193, 279, 324, 326, 329, 330, 352, 356, 362, 366, 370, 372, 373, 374, 375], "statist": [5, 14, 16, 17, 18, 19, 24, 49, 53, 63, 64, 65, 66, 115, 116, 117, 118, 119, 126, 158, 161, 177, 180, 181, 279, 314, 318, 321, 326, 335, 366], "correl": [5, 8, 54, 55, 80, 107, 146, 149, 173, 181, 226, 279, 285, 318, 326, 329], "two": [5, 9, 26, 50, 54, 56, 58, 59, 69, 70, 71, 74, 90, 91, 92, 96, 97, 100, 105, 113, 115, 121, 124, 126, 130, 131, 144, 147, 149, 157, 165, 167, 171, 172, 178, 180, 184, 191, 200, 279, 309, 318, 322, 326, 329, 330, 334, 346, 353, 355, 360, 362, 370, 372, 375], "most": [5, 28, 54, 56, 66, 74, 106, 114, 123, 175, 184, 192, 200, 279, 310, 326, 342, 348, 353, 375], "fundament": [5, 279, 326], "measur": [5, 26, 53, 54, 60, 66, 70, 71, 80, 97, 102, 103, 106, 119, 163, 177, 279, 309, 326, 330, 346], "linear": [5, 14, 15, 17, 32, 53, 55, 62, 66, 85, 107, 109, 114, 115, 151, 156, 161, 170, 171, 174, 191, 279, 295, 297, 317, 318, 326, 329, 335, 336, 338, 352, 370], "depend": [5, 36, 54, 66, 70, 71, 72, 74, 76, 85, 91, 92, 104, 106, 107, 109, 110, 112, 113, 114, 126, 130, 131, 132, 139, 141, 143, 146, 147, 148, 149, 158, 171, 177, 178, 180, 181, 183, 188, 195, 197, 198, 279, 326, 329, 330, 353, 356, 370, 372, 375], "between": [5, 9, 26, 37, 55, 56, 66, 67, 68, 70, 72, 74, 78, 79, 80, 96, 100, 102, 103, 106, 107, 109, 110, 112, 115, 123, 139, 143, 149, 151, 170, 171, 179, 182, 183, 184, 279, 309, 326, 334, 342, 346, 352, 360, 370], "variabl": [5, 9, 56, 66, 72, 74, 76, 85, 92, 107, 109, 110, 112, 113, 114, 115, 130, 131, 132, 135, 149, 158, 163, 165, 167, 178, 198, 210, 211, 251, 252, 254, 255, 279, 326, 342, 353, 356, 370, 375], "joint": [5, 53, 279, 326], "ani": [5, 36, 39, 54, 56, 58, 62, 63, 64, 65, 67, 68, 69, 70, 74, 75, 76, 78, 79, 82, 85, 86, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 121, 122, 125, 126, 129, 130, 131, 132, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 171, 172, 184, 187, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 320, 324, 326, 329, 337, 338, 339, 340, 345, 346, 348, 360, 370], "dimensionless": [5, 279, 326], "while": [5, 9, 54, 56, 63, 64, 65, 66, 74, 85, 100, 105, 116, 117, 118, 172, 180, 181, 182, 191, 192, 193, 279, 326, 334, 361, 370], "unit": [5, 126, 149, 188, 279, 326], "multipli": [5, 32, 58, 279, 326, 370], "anoth": [5, 36, 42, 43, 44, 48, 54, 86, 106, 182, 279, 326, 336, 360, 366, 370], "import": [5, 9, 56, 66, 165, 167, 177, 210, 211, 251, 252, 254, 255, 279, 326, 329, 375], "distinct": [5, 101, 177, 279, 326], "affect": [5, 279, 326, 366], "higher": [5, 9, 54, 70, 90, 101, 279, 326, 376], "varianc": [5, 8, 29, 55, 70, 85, 100, 116, 117, 118, 119, 126, 143, 146, 147, 148, 149, 150, 158, 160, 173, 181, 203, 246, 279, 285, 286, 314, 315, 318, 326, 329, 330, 349, 366], "correal": [5, 279, 326], "remov": [5, 54, 70, 175, 187, 279, 326, 329], "effect": [5, 54, 109, 177, 183, 279, 326], "normal": [5, 55, 57, 58, 59, 66, 71, 82, 112, 113, 125, 126, 146, 149, 150, 173, 177, 180, 279, 318, 326, 366], "squar": [5, 29, 53, 55, 61, 70, 72, 74, 76, 92, 100, 107, 109, 114, 116, 117, 118, 119, 128, 135, 136, 144, 147, 148, 151, 158, 173, 174, 181, 191, 203, 246, 279, 314, 315, 318, 324, 326, 330, 349], "root": [5, 70, 74, 100, 136, 158, 165, 167, 279, 326, 330, 353, 355], "Their": [5, 279, 326], "usag": [5, 35, 38, 45, 51, 55, 57, 58, 59, 61, 70, 72, 75, 76, 90, 94, 100, 110, 113, 120, 122, 165, 167, 175, 177, 180, 191, 192, 279, 318, 320, 326, 359, 362, 366, 374, 375], "follow": [5, 29, 36, 39, 44, 50, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 279, 314, 324, 325, 326, 329, 330, 332, 336, 342, 344, 349, 352, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375], "cor_matrix": [5, 206, 248], "matrix": [5, 24, 32, 55, 62, 63, 64, 65, 66, 85, 96, 97, 101, 107, 109, 110, 112, 114, 125, 126, 129, 130, 132, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 164, 168, 169, 170, 171, 173, 181, 182, 183, 184, 215, 226, 318, 326, 329, 335, 352, 363, 364, 367, 370, 372], "get_cor_matrix": [5, 206, 248], "set_cor_matrix": 5, "cov_matrix": [5, 207, 249], "get_cov_matrix": [5, 207, 249], "set_cov_matrix": 5, "get_mean": [5, 8, 29, 203, 206, 246, 248, 286, 315, 329, 349], "set_mean": [5, 8, 29], "is_empti": [5, 9, 16, 17, 18, 19, 29, 32], "fals": [5, 9, 16, 17, 18, 19, 29, 32, 36, 54, 67, 68, 70, 71, 74, 75, 76, 90, 91, 92, 103, 105, 112, 115, 130, 131, 137, 138, 146, 157, 158, 159, 231, 280, 353, 360, 369], "princip": [7, 14, 55, 156, 161, 173, 174, 181, 285, 318, 328, 335, 375], "compon": [7, 12, 14, 52, 55, 60, 85, 99, 110, 126, 129, 130, 133, 138, 156, 161, 172, 173, 174, 178, 181, 183, 184, 186, 190, 200, 205, 285, 291, 318, 320, 328, 333, 335, 370, 375], "analysi": [7, 14, 16, 53, 55, 56, 101, 106, 156, 161, 174, 181, 191, 285, 295, 318, 328, 335, 337, 375], "pca": [7, 14, 146, 147, 148, 149, 150, 160, 225, 226, 264, 265, 266, 285, 286, 328, 335, 375], "exploratori": [8, 149, 285, 329], "dimension": [8, 53, 69, 70, 85, 90, 91, 92, 101, 106, 115, 130, 131, 149, 170, 285, 322, 324, 325, 329, 336, 342, 349, 370, 372, 375], "reduct": [8, 50, 70, 85, 90, 149, 170, 285, 329, 330, 370], "transform": [8, 55, 82, 124, 127, 136, 138, 140, 141, 149, 173, 177, 180, 199, 225, 226, 264, 265, 266, 285, 318, 329, 336, 361, 362, 366, 370], "possibli": [8, 54, 149, 285, 329], "uncorrel": [8, 149, 285, 329], "direct": [8, 33, 34, 39, 44, 45, 54, 90, 149, 285, 329, 365, 366, 370], "largest": [8, 100, 103, 149, 160, 172, 285, 329, 332], "mostli": [8, 149, 151, 170, 285, 329], "spread": [8, 149, 285, 329], "out": [8, 9, 44, 46, 47, 48, 50, 54, 149, 158, 177, 180, 184, 253, 256, 285, 329, 360, 366], "covari": [8, 14, 49, 55, 85, 143, 144, 146, 147, 148, 149, 158, 173, 174, 181, 206, 207, 225, 226, 248, 249, 279, 285, 318, 321, 335, 366], "svd": [8, 54, 146, 149, 168, 169, 170, 225, 285], "cov": [8, 66, 207, 225, 249, 326], "dim_reduct": [8, 265, 266], "component_count": [8, 11], "r": [8, 53, 57, 58, 59, 60, 61, 70, 74, 76, 81, 83, 84, 85, 90, 97, 99, 127, 128, 130, 131, 132, 133, 138, 140, 144, 151, 152, 153, 158, 171, 200, 215, 329, 330, 336, 337, 338, 339, 340, 342, 352, 353, 372, 375], "zero": [8, 26, 36, 44, 46, 47, 48, 50, 56, 65, 70, 75, 76, 85, 102, 118, 126, 139, 143, 144, 145, 146, 148, 149, 150, 152, 158, 160, 171, 181, 182, 184, 309, 330, 346, 352, 360, 367, 370], "eigenvector": [8, 146, 147, 148, 149, 150, 151, 225, 226, 264, 265, 266, 286, 329, 375], "get_component_count": [8, 11, 205, 286, 329], "set_component_count": [8, 11, 225, 226, 264, 265, 266, 286, 329, 375], "determinist": 8, "whether": [8, 36, 48, 54, 110, 132, 137, 161, 168, 169, 175, 176, 180, 181, 182, 187, 193, 334, 370], "appli": [8, 37, 53, 54, 70, 85, 90, 106, 115, 120, 121, 122, 126, 146, 150, 164, 177, 180, 182, 324, 329, 330, 352, 370], "sign": [8, 53, 57, 81, 146, 149, 171, 352, 372], "flip": [8, 146, 149], "techniqu": [8, 9, 32, 53, 54, 62, 70, 73, 85, 93, 124, 146, 149, 151, 170, 171, 177, 179, 180, 288, 330, 352, 370], "must": [8, 54, 69, 74, 104, 105, 154, 155, 160, 171, 180, 181, 189, 193, 375], "get_determinist": 8, "set_determinist": [8, 225, 226, 264, 265, 266, 286, 329, 375], "precomput": [8, 128, 135, 149, 173, 192, 226, 265, 266, 329], "contain": [8, 9, 13, 24, 32, 33, 34, 36, 37, 39, 44, 48, 52, 54, 56, 58, 64, 65, 67, 68, 70, 71, 72, 74, 85, 91, 92, 95, 96, 99, 100, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 129, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 155, 157, 158, 159, 160, 163, 164, 165, 169, 171, 172, 179, 180, 184, 187, 192, 195, 320, 329, 330, 334, 356, 360, 365, 366, 367, 369, 370], "get_eigenvector": [8, 225, 226, 264, 265, 266, 286, 329, 375], "set_eigenvector": 8, "first": [8, 9, 32, 33, 37, 50, 52, 53, 54, 64, 68, 74, 95, 96, 103, 104, 105, 106, 107, 109, 112, 113, 115, 117, 118, 121, 138, 139, 140, 147, 155, 169, 171, 180, 184, 208, 212, 213, 281, 325, 329, 357, 366, 367, 370, 374], "get_vari": [8, 29, 203, 246, 286, 315, 329, 349], "set_vari": [8, 29], "eigenvalu": [8, 146, 147, 148, 149, 150, 151, 160, 225, 226, 264, 265, 266, 286, 329], "get_eigenvalu": [8, 225, 226, 264, 265, 266, 286, 329], "set_eigenvalu": 8, "dataset": [8, 9, 21, 29, 32, 37, 53, 60, 70, 71, 72, 74, 76, 97, 100, 106, 183, 314, 326, 329, 330, 343, 344, 349, 352, 361, 370, 372, 374], "x": [8, 9, 11, 13, 16, 17, 18, 19, 21, 32, 54, 56, 58, 59, 61, 62, 66, 69, 70, 71, 72, 81, 83, 84, 85, 90, 91, 92, 96, 97, 101, 106, 107, 109, 112, 114, 115, 119, 123, 125, 126, 128, 130, 131, 132, 138, 140, 141, 143, 144, 145, 149, 150, 152, 153, 154, 157, 158, 159, 163, 164, 168, 170, 171, 200, 221, 227, 228, 230, 262, 267, 322, 324, 325, 326, 329, 330, 336, 337, 338, 339, 340, 342, 343, 344, 349, 352, 372, 376], "transformed_data": 8, "project": [8, 53, 128, 129, 130, 131, 132, 133, 150, 200, 356], "get_transformed_data": [8, 225, 226, 264, 265, 266, 286, 329, 375], "set_transformed_data": 8, "pca_desc": [8, 225, 226, 264, 265, 266, 286, 329, 375], "pca_cor_dense_batch": [8, 149, 201, 245, 284, 328, 329], "pca_dense_batch": [8, 149, 201, 202, 284, 328, 329], "ensembl": [9, 14, 49, 60, 73, 74, 90, 91, 92, 93, 288, 318, 321, 330, 335, 353], "tree": [9, 21, 53, 55, 71, 72, 73, 165, 167, 185, 191, 253, 256, 288, 303, 318, 321, 354], "structur": [9, 36, 44, 53, 54, 71, 73, 74, 90, 91, 92, 100, 106, 176, 177, 179, 180, 181, 182, 183, 184, 186, 191, 192, 288, 330, 353, 360, 366, 370], "classifi": [9, 14, 31, 53, 55, 60, 70, 71, 73, 74, 75, 91, 115, 124, 157, 159, 165, 174, 191, 288, 318, 330, 335, 351, 353], "known": [9, 54, 70, 71, 73, 74, 143, 145, 182, 288, 320, 330, 342, 353], "built": [9, 70, 73, 74, 288, 330], "gener": [9, 32, 53, 56, 57, 58, 59, 61, 64, 65, 67, 68, 71, 72, 73, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 103, 104, 105, 110, 113, 115, 117, 118, 120, 122, 136, 138, 139, 140, 141, 147, 148, 165, 167, 171, 172, 176, 179, 180, 181, 183, 187, 192, 199, 288, 317, 318, 324, 330, 352, 362, 370, 374, 375, 376], "bag": [9, 73, 74, 288, 353], "bootstrap": [9, 70, 90, 288, 330], "aggreg": [9, 70, 71, 72, 90, 146, 288, 330], "choic": [9, 73, 100, 106, 127, 288, 329, 330], "For": [9, 11, 21, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 192, 193, 195, 197, 198, 200, 288, 291, 303, 318, 330, 332, 334, 342, 366, 370], "more": [9, 46, 53, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 78, 79, 81, 82, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 112, 113, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 169, 170, 171, 172, 175, 177, 181, 182, 186, 188, 191, 193, 195, 197, 198, 200, 288, 320, 329, 330, 332, 334, 342, 362, 367, 370, 373], "see": [9, 36, 46, 54, 55, 58, 62, 64, 65, 67, 70, 71, 73, 74, 78, 79, 82, 86, 90, 91, 92, 93, 95, 96, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 169, 171, 172, 179, 181, 182, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 288, 330, 332, 334, 342, 352, 360, 366, 370, 375], "breiman84": [9, 53, 71, 72, 73, 74, 75, 76, 93, 288, 330], "breiman2001": [9, 53, 73, 288, 330], "hist": [9, 70, 174, 251, 252, 253, 254, 255, 256, 288], "decision_forest": [9, 210, 211, 251, 252, 253, 254, 255, 256], "do": [9, 59, 61, 71, 75, 76, 91, 92, 100, 102, 103, 110, 127, 130, 131, 143, 144, 145, 149, 150, 151, 157, 159, 162, 169, 170, 172, 175, 176, 180, 182, 187, 188, 192, 215, 332, 359, 366, 370, 374], "error": [9, 53, 55, 56, 58, 59, 63, 64, 65, 67, 74, 75, 76, 105, 106, 107, 109, 112, 115, 116, 117, 118, 126, 128, 135, 146, 158, 159, 160, 171, 172, 173, 174, 190, 210, 211, 251, 252, 254, 255, 318, 320, 352, 370], "metric": [9, 21, 25, 28, 55, 70, 71, 72, 100, 173, 303, 308, 310, 318, 342, 345, 346, 348, 366], "out_of_bag_error": [9, 210, 211, 251, 254, 255], "produc": [9, 37, 54, 70, 86, 90, 95, 105, 106, 109, 126, 180, 193, 324, 329, 330, 342, 373], "cumul": [9, 81, 82, 83, 84], "predict": [9, 21, 32, 53, 54, 55, 56, 60, 73, 93, 157, 158, 159, 161, 178, 194, 210, 211, 251, 252, 254, 255, 318, 324, 330, 335, 342, 344, 352, 353, 370, 372], "out_of_bag_error_per_observ": [9, 211, 254, 255], "mdi": [9, 70, 71, 210, 251, 254, 255, 330], "decreas": [9, 66, 70, 71, 106, 160, 171, 330, 332, 352], "impur": [9, 70, 253, 256], "sum": [9, 29, 50, 57, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 85, 90, 91, 92, 96, 97, 103, 106, 107, 115, 116, 117, 118, 119, 123, 126, 127, 128, 130, 131, 132, 135, 136, 137, 139, 143, 147, 148, 158, 159, 160, 171, 173, 180, 181, 203, 246, 314, 315, 326, 329, 330, 349, 352], "node": [9, 70, 71, 72, 73, 74, 75, 76, 90, 91, 92, 93, 100, 106, 149, 151, 165, 167, 170, 183, 192, 193, 253, 256, 330, 342, 353, 355, 373], "averag": [9, 21, 70, 71, 115, 127, 135, 139, 159, 173, 303, 324, 330, 342], "over": [9, 54, 70, 74, 85, 90, 182, 330, 342, 360, 370], "mda_raw": [9, 70, 211], "accuraci": [9, 57, 58, 59, 60, 61, 70, 74, 124, 137, 157, 159, 171, 172, 216, 257, 330], "permut": [9, 70, 152, 329, 330], "portion": [9, 163], "rate": [9, 90, 94, 96, 97, 105, 106, 130, 136, 138, 140, 141, 159, 197], "mse": [9, 61, 72, 74, 76, 107, 109, 128, 167], "same": [9, 44, 48, 50, 56, 62, 66, 67, 68, 69, 71, 74, 78, 79, 85, 86, 91, 92, 97, 106, 123, 130, 131, 143, 149, 151, 155, 162, 169, 170, 180, 184, 192, 193, 322, 324, 325, 330, 332, 352, 359, 360, 362, 366, 367, 368, 369, 370, 375], "done": [9, 54, 71, 72, 97, 102, 106, 107, 109, 112, 114, 137, 177, 180, 183, 185, 191, 193, 366], "predictor": [9, 74, 107, 353], "differ": [9, 28, 29, 54, 55, 61, 82, 85, 86, 114, 116, 117, 118, 119, 124, 130, 172, 174, 177, 180, 182, 184, 191, 193, 199, 203, 246, 310, 314, 315, 318, 348, 349, 366, 370], "mda_scal": [9, 70], "scale": [9, 16, 17, 19, 53, 70, 89, 90, 123, 125, 126, 329, 330, 370], "its": [9, 21, 24, 33, 34, 36, 44, 48, 50, 54, 56, 58, 59, 62, 70, 71, 72, 74, 85, 90, 100, 105, 106, 110, 113, 126, 134, 135, 139, 141, 152, 158, 162, 180, 182, 185, 303, 307, 320, 330, 342, 343, 344, 353, 365, 366, 369, 370, 372, 375], "standard": [9, 29, 54, 70, 83, 116, 117, 118, 119, 126, 145, 203, 246, 314, 315, 349, 370, 375], "deviat": [9, 29, 70, 83, 116, 117, 118, 119, 126, 145, 158, 203, 246, 314, 315, 320, 349], "class_label": 9, "math": [9, 53, 123, 343, 344], "class_respons": [9, 210, 251, 252], "deprec": [9, 55, 56, 58, 59, 61, 62, 66, 69, 70, 71, 72, 75, 76, 78, 79, 85, 91, 92, 97, 100, 101, 102, 106, 112, 113, 115, 119, 123, 125, 126, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 175, 176, 179, 182, 184, 186, 187, 188, 192, 318], "class_prob": [9, 210, 251, 252], "probabl": [9, 53, 54, 56, 58, 60, 71, 81, 83, 84, 85, 91, 100, 105, 106, 115, 144, 163, 165, 172, 195, 210, 251, 252, 253, 342, 344], "final": [9, 57, 58, 59, 74, 103, 144, 155, 169, 180, 192, 193, 199, 329, 353, 373], "combin": [9, 67, 70, 100, 102, 110, 115, 126, 129, 130, 131, 132, 133, 146, 172, 177, 362, 370], "through": [9, 54, 60, 126, 129, 146, 159, 177, 180, 182, 184, 366], "major": [9, 21, 48, 53, 57, 58, 61, 71, 74, 139, 146, 147, 148, 149, 150, 177, 182, 184, 186, 191, 200, 303, 330, 342, 353, 366, 370], "vote": [9, 21, 71, 100, 172, 259, 303, 330, 342], "unweight": [9, 71, 365, 370], "simpl": [9, 54, 60, 74, 106, 112, 115, 123, 353, 360], "split": [9, 32, 54, 59, 61, 64, 68, 71, 73, 91, 92, 93, 95, 96, 99, 100, 103, 105, 113, 117, 121, 143, 147, 155, 165, 167, 169, 193, 253, 256, 355], "strategi": [9, 53, 106, 138, 172], "build": [9, 54, 57, 58, 59, 60, 61, 71, 72, 74, 75, 76, 90, 91, 92, 100, 112, 115, 171, 172, 186, 191, 199, 318, 321, 342, 352, 371, 376], "among": [9, 32, 52, 66, 68, 106, 171, 177, 317, 330, 352, 374], "histogram": 9, "bin": [9, 70, 90, 330], "subset": [9, 56, 70, 75, 76, 90, 100, 103, 144, 171, 177, 180, 330, 352, 355, 370], "select": [9, 24, 50, 53, 68, 70, 73, 75, 76, 86, 87, 88, 89, 90, 93, 100, 106, 107, 138, 140, 144, 171, 172, 177, 180, 188, 193, 195, 307, 325, 330, 343, 352, 353, 370], "from": [9, 21, 29, 33, 34, 36, 37, 42, 43, 44, 46, 47, 48, 50, 52, 53, 56, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 85, 86, 90, 93, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 125, 126, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 170, 172, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 191, 192, 193, 195, 197, 198, 199, 203, 208, 215, 246, 280, 303, 314, 315, 319, 320, 322, 324, 325, 329, 330, 332, 336, 342, 349, 352, 353, 355, 359, 360, 361, 362, 366, 369, 370, 372, 374, 375], "tree_count": 9, "min_bin_s": 9, "onli": [9, 13, 21, 32, 33, 34, 36, 37, 50, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 141, 145, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 174, 175, 177, 184, 185, 188, 191, 193, 195, 197, 198, 215, 318, 322, 324, 326, 329, 330, 332, 334, 342, 343, 344, 349, 352, 357, 358, 359, 366, 370, 376], "get_min_bin_s": 9, "set_min_bin_s": 9, "whole": [9, 33, 70, 182, 281, 357], "get_bootstrap": 9, "set_bootstrap": 9, "min_observations_in_leaf_nod": 9, "leaf": [9, 70, 71, 72, 73, 74, 75, 76, 90, 91, 92, 93, 100, 253, 256, 330, 342, 353, 355], "get_min_observations_in_leaf_nod": 9, "set_min_observations_in_leaf_nod": [9, 210, 211, 251, 252, 253, 254, 255, 256], "splitter": [9, 330], "randomli": [9, 70, 74, 90, 138, 325, 330], "get_splitter_mod": 9, "set_splitter_mod": [9, 252, 255], "impurity_threshold": 9, "induc": [9, 13, 70, 100, 330, 334, 355, 370], "greater": [9, 56, 68, 70, 104, 105, 106, 107, 109, 110, 150, 164, 171, 184, 330, 367, 370], "than": [9, 56, 59, 60, 62, 66, 68, 70, 78, 79, 85, 90, 100, 104, 105, 106, 107, 109, 110, 123, 130, 143, 144, 146, 149, 150, 160, 164, 171, 172, 181, 191, 330, 342], "get_impurity_threshold": 9, "set_impurity_threshold": 9, "max_leaf_nod": 9, "maxim": [9, 55, 56, 57, 58, 59, 61, 70, 71, 90, 91, 171, 172, 173, 318, 324, 330], "limit": [9, 25, 54, 56, 70, 91, 92, 100, 115, 127, 135, 143, 145, 158, 173, 185, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 308, 318, 320, 330, 342, 345], "get_max_leaf_nod": 9, "set_max_leaf_nod": 9, "observations_per_tree_fract": 9, "fraction": [9, 70, 71, 74, 75, 76, 90, 100, 104, 105, 330, 342, 352, 370], "get_observations_per_tree_fract": 9, "set_observations_per_tree_fract": 9, "features_per_nod": 9, "consid": [9, 13, 54, 67, 68, 69, 70, 145, 158, 160, 322, 330, 370, 375], "when": [9, 33, 34, 36, 44, 46, 47, 48, 50, 54, 58, 60, 61, 62, 63, 64, 65, 66, 70, 78, 79, 81, 82, 85, 86, 90, 91, 100, 102, 103, 105, 106, 110, 115, 123, 130, 131, 136, 137, 138, 146, 149, 150, 151, 158, 161, 162, 170, 172, 175, 177, 178, 180, 181, 182, 184, 185, 187, 191, 192, 193, 195, 199, 253, 256, 330, 359, 360, 366, 370, 373], "look": [9, 54], "sqrt": [9, 59, 66, 70, 78, 79, 83, 85, 106, 119, 136, 143, 144, 158, 326, 329, 330, 346, 349, 372], "3": [9, 17, 33, 34, 36, 53, 59, 65, 70, 85, 90, 95, 104, 113, 118, 122, 143, 144, 145, 148, 154, 168, 171, 180, 184, 193, 204, 208, 214, 224, 238, 239, 247, 280, 281, 283, 332, 334, 352, 357, 358, 360, 367, 369, 375], "total": [9, 54, 56, 67, 69, 70, 94, 95, 96, 98, 99, 105, 123, 139, 158, 172, 175, 322, 330], "get_features_per_nod": 9, "set_features_per_nod": [9, 210, 211, 251, 252, 253, 254, 255, 256], "memory_saving_mod": 9, "get_memory_saving_mod": 9, "set_memory_saving_mod": 9, "get_error_metric_mod": 9, "set_error_metric_mod": [9, 210, 211, 251, 254, 255], "get_tree_count": [9, 253, 256], "set_tree_count": [9, 210, 211, 251, 252, 253, 254, 255, 256], "min_observations_in_split_nod": 9, "get_min_observations_in_split_nod": 9, "set_min_observations_in_split_nod": [9, 210, 251, 252, 253], "enable_if_classification_t": [9, 21, 32], "get_infer_mod": 9, "set_infer_mod": [9, 210, 251, 252], "max_tree_depth": 9, "depth": [9, 74, 75, 76, 90], "expand": [9, 332], "until": [9, 54, 59, 70, 74, 85, 100, 106, 127, 139, 141, 144, 175, 192, 324, 325, 330], "leav": [9, 54, 90, 165, 167], "pure": [9, 54], "less": [9, 54, 70, 100, 110, 144, 146, 160, 330, 342, 362], "min": [9, 29, 50, 61, 70, 97, 119, 124, 139, 171, 184, 215, 349, 352], "get_max_tree_depth": 9, "set_max_tree_depth": [9, 253], "get_variable_importance_mod": 9, "set_variable_importance_mod": [9, 210, 211, 251, 254, 255], "get_voting_mod": [9, 21], "set_voting_mod": [9, 21, 210, 251, 252, 259, 260], "max_bin": 9, "discret": [9, 53, 70, 82, 90, 370], "bucket": [9, 70, 90, 100, 355], "continu": [9, 70, 71, 74, 82, 90, 91, 92, 106, 127, 175, 176, 177, 180, 330, 342, 366, 370], "increas": [9, 54, 66, 70, 74, 90, 172, 330, 370], "cost": [9, 70, 90, 97, 100, 110, 320], "256": [9, 70, 90], "get_max_bin": 9, "set_max_bin": 9, "min_weight_fraction_in_leaf_nod": 9, "minimum": [9, 29, 56, 68, 70, 74, 75, 76, 102, 116, 117, 118, 119, 125, 127, 135, 137, 138, 181, 203, 246, 314, 315, 330, 349], "requir": [9, 13, 35, 36, 56, 60, 61, 64, 67, 68, 70, 71, 72, 75, 81, 82, 85, 90, 91, 92, 95, 96, 101, 102, 103, 104, 105, 106, 112, 113, 115, 117, 120, 121, 122, 123, 126, 129, 130, 131, 132, 139, 141, 147, 149, 151, 152, 153, 155, 160, 168, 169, 170, 171, 172, 175, 177, 179, 181, 182, 188, 191, 192, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320, 324, 330, 361, 362, 366, 372, 375], "get_min_weight_fraction_in_leaf_nod": 9, "set_min_weight_fraction_in_leaf_nod": [9, 210, 251, 252, 253], "min_impurity_decrease_in_split_nod": 9, "growth": 9, "earli": 9, "abov": [9, 58, 75, 82, 86, 105, 107, 109, 137, 144, 163, 180, 332, 334], "otherwis": [9, 33, 34, 36, 74, 112, 115, 126, 139, 140, 158, 160, 171, 172, 182, 320, 334, 344, 370, 375], "get_min_impurity_decrease_in_split_nod": 9, "set_min_impurity_decrease_in_split_nod": [9, 210, 251, 252, 253], "class_count": [9, 21, 32, 253, 304, 342], "count": [9, 36, 44, 48, 50, 54, 209, 216, 217, 250, 257, 258, 280, 360, 365, 369, 370], "get_class_count": [9, 21, 32], "set_class_count": [9, 21, 32, 210, 232, 233, 251, 252, 253], "visitor": [9, 253, 256], "traverse_depth_first": [9, 253, 256], "tree_idx": 9, "travers": [9, 100, 229, 253, 256, 342], "th": [9, 13, 53, 56, 59, 61, 64, 70, 85, 90, 95, 96, 99, 100, 103, 105, 113, 117, 121, 123, 125, 126, 136, 138, 143, 144, 145, 147, 149, 152, 155, 158, 163, 164, 169, 172, 180, 184, 324, 329, 330, 342, 372, 375], "index": [9, 33, 36, 39, 45, 46, 56, 68, 70, 71, 74, 75, 86, 90, 91, 92, 96, 101, 106, 123, 138, 139, 140, 172, 180, 184, 208, 253, 256, 324, 330, 367, 369, 370], "functor": 9, "get": [9, 39, 40, 41, 54, 56, 62, 66, 67, 69, 70, 71, 74, 78, 79, 81, 85, 91, 92, 97, 99, 100, 106, 110, 112, 115, 123, 126, 127, 143, 149, 151, 161, 170, 171, 172, 175, 180, 181, 185, 186, 188, 191, 192, 322, 330, 370, 375], "notifi": 9, "visit": [9, 200], "split_node_info": [9, 253, 256], "leaf_node_info": [9, 253, 256], "traverse_breadth_first": 9, "breadth": 9, "y": [9, 16, 17, 18, 19, 21, 32, 36, 53, 56, 57, 58, 59, 61, 69, 70, 71, 72, 74, 75, 76, 83, 85, 90, 91, 92, 96, 97, 100, 101, 107, 109, 112, 114, 115, 125, 126, 128, 130, 131, 132, 139, 150, 157, 159, 164, 171, 172, 221, 227, 228, 230, 262, 267, 322, 330, 336, 337, 338, 339, 340, 342, 343, 344, 352, 372], "w": [9, 32, 53, 71, 72, 85, 90, 106, 330, 343, 344, 352, 372], "oob_err": 9, "get_oob_err": [9, 210, 211, 251, 252, 254, 255], "set_oob_err": 9, "oob_err_per_observ": 9, "get_oob_err_per_observ": [9, 211, 254, 255], "set_oob_err_per_observ": 9, "oob_err_accuraci": 9, "out_of_bag_error_accuraci": 9, "get_oob_err_accuraci": 9, "set_oob_err_accuraci": 9, "oob_err_decision_funct": 9, "out_of_bag_error_decision_funct": 9, "get_oob_err_decision_funct": 9, "set_oob_err_decision_funct": 9, "var_import": 9, "get_var_import": [9, 210, 211, 251, 252, 254, 255], "set_var_import": 9, "oob_err_predict": 9, "out_of_bag_error_predict": 9, "get_oob_err_predict": 9, "set_oob_err_predict": 9, "oob_err_r2": 9, "r2": 9, "out_of_bag_error_r2": 9, "get_oob_err_r2": 9, "set_oob_err_r2": 9, "get_prob": [9, 210, 251, 252, 253], "set_prob": 9, "decis": [10, 14, 32, 53, 55, 60, 91, 92, 93, 161, 165, 167, 171, 172, 174, 185, 191, 199, 232, 233, 234, 235, 240, 241, 242, 243, 253, 268, 288, 318, 321, 331, 335, 352, 354], "forest": [10, 14, 53, 55, 74, 174, 185, 191, 253, 288, 318, 331, 335, 353], "classif": [10, 14, 20, 23, 24, 32, 53, 57, 58, 59, 60, 61, 70, 73, 74, 76, 77, 90, 93, 100, 115, 120, 122, 123, 156, 161, 166, 171, 172, 178, 191, 194, 196, 219, 240, 241, 251, 252, 253, 288, 303, 306, 307, 317, 331, 335, 341, 343, 344, 352, 370], "regress": [10, 14, 21, 32, 53, 55, 60, 61, 70, 71, 73, 74, 77, 90, 91, 93, 100, 107, 109, 110, 130, 131, 156, 161, 166, 171, 174, 178, 191, 194, 196, 211, 238, 239, 254, 255, 256, 260, 288, 303, 317, 318, 331, 335, 341, 351, 353, 370], "df": [10, 14, 73, 210, 211, 251, 252, 253, 254, 255, 256, 288, 331, 335], "undirect": [11, 39, 44, 45, 215, 291, 332, 365, 366, 370], "graph": [11, 13, 14, 45, 49, 53, 73, 74, 93, 205, 212, 213, 214, 215, 224, 229, 231, 244, 291, 293, 318, 321, 332, 334, 335, 353, 372], "g": [11, 13, 39, 44, 54, 74, 85, 90, 127, 128, 136, 139, 140, 141, 143, 145, 185, 215, 291, 293, 324, 332, 334, 366, 369, 370, 372, 375], "vertex": [11, 13, 39, 40, 41, 42, 43, 44, 215, 291, 332, 334, 370, 372], "belong": [11, 32, 57, 58, 59, 61, 69, 71, 75, 85, 91, 100, 115, 123, 130, 131, 143, 144, 145, 157, 159, 165, 171, 172, 178, 291, 317, 322, 330, 332, 352, 355], "vertic": [11, 13, 39, 40, 41, 44, 212, 213, 215, 291, 293, 332, 334, 366, 370], "afforest": [11, 291], "vertex_partitioning_input": [11, 291, 332], "vertex_partitioning_result": [11, 291, 332], "connected_compon": [11, 205], "alloc": [11, 13, 33, 34, 36, 42, 43, 44, 56, 82, 86, 134, 171, 175, 180, 182, 189, 192, 280, 352, 360], "char": [11, 13, 37, 42, 43, 54, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "custom": [11, 13, 177, 180, 181, 342, 370], "manag": [11, 13, 49, 53, 54, 55, 180, 182, 183, 187, 190, 318, 321, 360], "insid": [11, 13, 36, 54, 140, 182, 280, 360, 369, 370], "get_alloc": [11, 13], "copi": [11, 13, 33, 34, 36, 100, 175, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 359, 360, 366, 369, 370, 375], "intern": [11, 13, 36, 53, 54, 70, 71, 73, 74, 85, 91, 92, 93, 98, 99, 100, 104, 105, 136, 138, 139, 140, 141, 180, 182, 280, 330, 353, 356, 360, 370, 374], "construct": [11, 13, 36, 42, 43, 44, 74, 81, 91, 100, 180, 182, 366, 370], "constant": [11, 13, 32, 44, 59, 71, 74, 91, 92, 106, 128, 129, 130, 131, 132, 133, 140, 144, 158, 353], "get_graph": 11, "set_graph": 11, "empti": [11, 13, 36, 42, 43, 44, 48, 54, 56, 70, 106, 110, 127, 132, 138, 141, 182, 324, 330, 369, 370], "size": [11, 13, 24, 32, 33, 34, 36, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 82, 85, 86, 87, 88, 89, 96, 97, 99, 100, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 144, 149, 150, 152, 153, 154, 155, 160, 165, 170, 171, 172, 175, 177, 180, 182, 189, 195, 215, 325, 330, 343, 344, 352, 360, 370], "vertex_count": [11, 215], "id": [11, 13, 36, 46, 47, 48, 54, 56, 58, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 82, 85, 86, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 121, 122, 125, 126, 129, 130, 131, 132, 133, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 187, 192, 195, 197, 198, 280, 332, 334, 356, 360, 369, 376], "connected_components_batch": [11, 201, 202, 290, 332, 333], "subgraph": [12, 14, 53, 293, 333, 335, 370], "isomorph": [12, 14, 53, 293, 333, 335], "connect": [12, 14, 53, 143, 145, 157, 159, 161, 165, 167, 205, 291, 333, 335, 366, 370], "target": [13, 21, 59, 293, 303, 334, 342], "pattern": [13, 16, 39, 44, 53, 101, 181, 293, 295, 334, 337], "h": [13, 53, 54, 57, 58, 63, 64, 65, 85, 90, 116, 117, 118, 128, 132, 139, 144, 158, 215, 293, 334, 343, 344, 370], "map": [13, 54, 90, 99, 101, 105, 293, 334], "onto": [13, 293, 334, 369], "fast": [13, 53, 60, 149, 293], "graph_matching_input": [13, 293, 334], "graph_matching_result": [13, 293, 334], "subgraph_isomorph": [13, 231], "kind": [13, 46, 47, 48, 75, 76, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 369], "non_induc": [13, 231], "get_kind": [13, 46, 47, 48, 369], "set_kind": [13, 231], "semantic_match": 13, "semant": [13, 54], "get_semantic_match": 13, "set_semantic_match": [13, 231], "max_match_count": 13, "match": [13, 54, 231, 375], "get_max_match_count": 13, "set_max_match_count": [13, 231], "exist": [13, 150, 182, 200, 334], "edg": [13, 39, 40, 41, 42, 43, 44, 70, 199, 212, 213, 332, 334, 366, 370, 372], "target_graph": [13, 231], "pattern_graph": [13, 231], "bigger": 13, "smaller": [13, 54, 68, 70, 90, 100, 149, 151, 170, 191, 330], "get_pattern_graph": 13, "set_pattern_graph": 13, "get_target_graph": 13, "set_target_graph": 13, "vertex_match": 13, "match_count": 13, "pattern_vertex_count": 13, "sort": [13, 54, 55, 56, 70, 74, 173, 318, 329, 330], "e": [13, 53, 54, 59, 61, 70, 74, 85, 91, 115, 130, 131, 136, 160, 171, 185, 251, 252, 253, 254, 255, 256, 260, 324, 329, 330, 334, 352, 366, 369, 370, 372], "j": [13, 29, 53, 54, 61, 66, 70, 72, 74, 78, 79, 85, 90, 95, 97, 99, 100, 101, 107, 109, 110, 112, 113, 114, 115, 119, 123, 125, 126, 127, 130, 131, 132, 138, 139, 145, 149, 158, 164, 172, 180, 184, 212, 213, 215, 324, 326, 329, 330, 338, 339, 340, 342, 344, 345, 346, 348, 349, 367, 370, 375], "element": [13, 29, 33, 36, 39, 46, 47, 48, 53, 54, 70, 72, 85, 86, 87, 88, 89, 96, 97, 99, 100, 105, 112, 115, 120, 121, 122, 126, 129, 138, 143, 146, 152, 158, 159, 160, 171, 181, 182, 184, 280, 281, 329, 330, 355, 357, 360, 366, 367, 370, 372], "wa": [13, 54, 70, 74, 138, 140, 172, 375], "get_vertex_match": [13, 231], "set_vertex_match": 13, "get_match_count": [13, 231], "set_match_count": 13, "big": [13, 33, 34, 318, 324, 330, 342, 370], "small": [13, 54, 59, 106, 123, 149, 151, 170], "subgraph_isomorphism_batch": [13, 201, 202, 292, 333, 334], "mathemat": [14, 53, 318, 321, 335, 371], "descript": [14, 36, 39, 40, 41, 44, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 171, 172, 181, 182, 185, 186, 187, 192, 193, 195, 197, 198, 280, 352, 359, 360, 362, 365, 366, 369, 372, 374], "decomposit": [14, 49, 53, 55, 112, 113, 173, 318, 321, 329, 335], "kernel": [14, 32, 49, 53, 54, 55, 171, 173, 174, 295, 297, 299, 301, 318, 321, 335, 352, 370], "polynomi": [14, 15, 180, 297, 335, 336], "radial": [14, 15, 299, 335, 336], "basi": [14, 15, 150, 151, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 299, 335, 336], "rbf": [14, 15, 101, 299, 335, 336], "sigmoid": [14, 15, 301, 335, 336, 344], "knn": [14, 21, 49, 55, 174, 191, 218, 219, 220, 259, 260, 261, 304, 318, 321, 335, 342, 370], "nn": [14, 20, 100, 303, 335, 341, 370], "descriptor": [14, 52, 182, 203, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 275, 277, 286, 304, 311, 312, 315, 322, 324, 325, 329, 342, 349, 362, 366, 375], "pairwis": [14, 49, 53, 318, 321, 335, 342], "minkowski": [14, 25, 26, 27, 308, 310, 335, 342, 345, 347], "chebyshev": [14, 27, 308, 335, 342, 347], "cosin": [14, 27, 80, 309, 335, 342, 347], "basic": [14, 30, 36, 63, 64, 65, 116, 117, 118, 119, 126, 144, 180, 181, 184, 192, 314, 335, 350, 360, 366, 375], "machin": [14, 49, 53, 55, 172, 174, 188, 191, 317, 318, 321, 335], "svm": [14, 31, 53, 171, 172, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268, 317, 335, 336, 351, 370, 375], "simplest": [16, 101, 106, 295, 337], "linear_kernel": [16, 32, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 262, 268], "shift": [16, 17, 19], "coeffici": [16, 17, 18, 19, 28, 32, 101, 107, 109, 110, 112, 114, 115, 119, 130, 131, 132, 138, 141, 143, 145, 158, 171, 191, 214, 215, 222, 263, 343, 344, 349, 352], "b": [16, 17, 19, 53, 54, 70, 71, 72, 73, 84, 101, 106, 125, 127, 139, 140, 141, 171, 330, 337, 338, 340, 352, 372], "get_shift": [16, 17, 19], "set_shift": [16, 17, 19, 221, 227, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 262, 268], "get_scal": [16, 17, 19], "set_scal": [16, 17, 19, 221, 227, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 262, 268], "so": [16, 17, 18, 19, 54, 56, 57, 59, 61, 64, 65, 71, 72, 74, 75, 76, 83, 85, 91, 92, 94, 96, 97, 100, 102, 103, 110, 115, 117, 118, 147, 148, 155, 157, 158, 159, 163, 169, 172, 175, 176, 177, 178, 181, 184, 324, 332, 353, 356], "get_x": [16, 17, 18, 19], "set_x": [16, 17, 18, 19], "get_i": [16, 17, 18, 19], "set_i": [16, 17, 18, 19], "get_valu": [16, 17, 18, 19, 24, 221, 223, 227, 228, 230, 262, 267], "set_valu": [16, 17, 18, 19, 24], "popular": [17, 18, 19, 32, 57, 58, 60, 74, 101, 106, 171, 175, 180, 191, 297, 299, 301, 317, 338, 339, 340, 352], "similar": [17, 53, 70, 80, 100, 106, 107, 109, 114, 214, 215, 297, 338, 375], "origin": [17, 36, 74, 86, 101, 102, 103, 125, 149, 208, 280, 297, 336, 338, 360, 370], "allow": [17, 39, 54, 70, 86, 90, 110, 297, 330, 338, 342, 362, 366], "fit": [17, 61, 74, 107, 109, 112, 170, 177, 180, 181, 297, 320, 338, 353, 366, 370, 373], "model": [17, 24, 44, 49, 53, 57, 58, 59, 60, 61, 70, 71, 72, 74, 75, 76, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 107, 109, 110, 112, 113, 114, 115, 120, 121, 122, 123, 158, 161, 165, 167, 171, 172, 175, 177, 179, 191, 192, 194, 199, 253, 256, 277, 286, 297, 304, 307, 311, 312, 318, 321, 324, 329, 330, 335, 336, 338, 342, 343, 352, 353, 370, 375], "polynomial_kernel": [17, 32, 227], "degre": [17, 28, 39, 40, 41, 66, 144, 212, 213, 310, 342, 348], "d": [17, 21, 37, 53, 54, 56, 59, 63, 64, 65, 70, 71, 72, 75, 76, 97, 106, 116, 117, 118, 127, 136, 138, 139, 140, 141, 171, 180, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 303, 318, 321, 324, 325, 330, 338, 352, 354, 372], "get_degre": [17, 28], "set_degre": [17, 28, 227], "rbf_kernel": [18, 32, 228, 232, 267], "sigma": [18, 70, 83, 85, 91, 97, 101, 115, 131, 158, 168, 169, 170, 329, 330, 339, 344], "get_sigma": 18, "set_sigma": [18, 228, 232, 267], "sigmoid_kernel": [19, 32, 230], "identifi": [21, 56, 68, 69, 100, 109, 142, 143, 144, 145, 180, 187, 192, 303, 322, 332, 342, 355], "chosen": [21, 74, 100, 106, 303, 330, 342, 361], "brute": [21, 53, 67, 68, 174, 303], "forc": [21, 53, 67, 68, 138, 174, 303], "voting_mod": [21, 210, 251, 252, 259, 260], "uniform": [21, 53, 82, 100, 259, 260, 370], "invers": [21, 54, 59, 83, 100, 139, 151, 170], "constexpr": [21, 24, 33, 34, 36, 37, 39, 204, 208, 216, 247, 257, 280, 281, 283, 357, 358, 360], "result_option_id_bas": [21, 24], "minkowski_dist": [21, 28], "kd_tree": [21, 219], "chebyshev_dist": [21, 25], "neighbor_count": [21, 304, 342], "enable_if_brute_force_t": 21, "distance_t": 21, "enable_if_not_classification_t": 21, "calcul": [21, 24, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 74, 75, 76, 78, 79, 82, 85, 86, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 115, 116, 117, 118, 121, 123, 125, 126, 129, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 171, 172, 191, 195, 197, 198, 208, 307, 324, 343, 344, 352], "get_dist": [21, 220, 229], "set_dist": 21, "dist": 21, "get_neighbor_count": 21, "set_neighbor_count": 21, "enable_if_not_search_t": 21, "get_indic": [21, 220, 261], "set_indic": 21, "knn_desc": [21, 218, 219, 220, 261, 304, 342], "knn_cls_brute_force_dense_batch": [21, 100, 201, 202, 245, 302, 341, 342], "knn_cls_kd_tree_dense_batch": [21, 100, 201, 202, 302, 341, 342], "knn_search_brute_force_dense_batch": [21, 201, 202, 245, 302, 341, 342], "distribut": [21, 49, 53, 55, 59, 66, 69, 71, 85, 86, 97, 100, 106, 111, 115, 119, 123, 143, 144, 145, 153, 158, 163, 173, 177, 192, 194, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 302, 318, 321, 335, 341, 366], "logist": [22, 53, 55, 61, 128, 130, 135, 173, 174, 191, 223, 318, 343], "loss": [22, 58, 61, 90, 91, 92, 128, 135, 173, 174, 223, 343], "logisticloss": [23, 306, 344], "common": [23, 44, 48, 75, 81, 82, 83, 84, 92, 110, 127, 161, 214, 231, 306, 344, 369], "binari": [23, 57, 58, 59, 60, 70, 71, 73, 74, 75, 76, 91, 92, 93, 100, 102, 103, 106, 115, 156, 161, 171, 172, 306, 319, 330, 344, 353, 355, 370, 375], "dense_batch": [23, 24, 223, 306, 307], "oper": [23, 25, 26, 28, 36, 38, 42, 43, 44, 45, 46, 47, 48, 51, 52, 100, 128, 129, 130, 131, 132, 133, 138, 150, 175, 177, 180, 181, 184, 187, 188, 191, 253, 256, 270, 274, 276, 279, 285, 288, 291, 293, 295, 297, 299, 301, 303, 306, 307, 308, 309, 310, 314, 317, 318, 321, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 359, 361, 366, 369, 370, 373, 375, 376], "logloss_object": [23, 24, 223], "l1_regularization_coeffici": 23, "l2_regularization_coeffici": 23, "fit_intercept": 23, "l1": [23, 107, 110, 115, 130, 131, 132, 159, 223, 344], "regular": [23, 53, 85, 90, 94, 96, 97, 107, 109, 110, 115, 130, 131, 132], "strength": 23, "get_l1_regularization_coeffici": 23, "set_l1_regularization_coeffici": 23, "l2": [23, 90, 107, 110, 115, 130, 131, 132, 223, 344], "get_l2_regularization_coeffici": 23, "set_l2_regularization_coeffici": 23, "intercept_flag": 23, "get_intercept_flag": 23, "set_intercept_flag": [23, 223], "design": [24, 180, 307, 320, 325, 343, 370], "On": [24, 54, 67, 96, 100, 128, 129, 149, 151, 170, 174, 307, 343, 373, 375], "gradient": [24, 53, 55, 110, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 173, 174, 185, 191, 223, 307, 318], "sometim": [24, 54, 307, 343, 372], "hessian": [24, 110, 128, 129, 130, 131, 132, 133, 134, 138, 174, 223, 307], "updat": [24, 33, 34, 57, 58, 59, 70, 85, 90, 100, 102, 110, 112, 115, 127, 138, 140, 141, 171, 186, 307, 324, 342, 343, 352, 360, 373], "inform": [24, 36, 48, 53, 54, 55, 56, 62, 63, 64, 65, 66, 68, 70, 71, 74, 75, 78, 79, 81, 85, 91, 92, 97, 106, 116, 117, 118, 123, 143, 149, 151, 152, 165, 170, 171, 179, 180, 181, 183, 187, 188, 190, 200, 280, 307, 318, 343, 360, 366, 370], "objective_funct": [24, 223], "objective_t": 24, "obj": [24, 33, 34], "get_object": 24, "set_object": 24, "valuea": 24, "train": [24, 52, 53, 54, 55, 56, 60, 93, 95, 99, 130, 131, 138, 158, 161, 178, 194, 210, 211, 216, 217, 218, 219, 220, 222, 225, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 276, 285, 288, 297, 303, 311, 312, 317, 318, 325, 335, 338, 355, 370, 372, 375], "correct": [24, 53, 54, 139, 343, 344], "get_paramet": 24, "set_paramet": 24, "get_hessian": [24, 223], "set_hessian": 24, "get_gradi": [24, 223], "set_gradi": 24, "infti": [25, 83, 85, 90, 138, 140, 308, 345], "inner": [26, 141, 309, 346], "product": [26, 56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 96, 97, 106, 116, 117, 118, 123, 143, 147, 148, 149, 151, 170, 171, 186, 188, 309, 320, 336, 346, 370], "cosine_dist": [26, 220], "wide": [28, 62, 109, 180, 200, 310, 318, 348], "commonli": [28, 114, 310, 348], "euclidean": [28, 100, 102, 103, 106, 310, 324, 342, 348], "also": [28, 54, 56, 62, 70, 71, 73, 74, 85, 100, 101, 106, 107, 109, 126, 138, 149, 151, 162, 171, 175, 176, 177, 178, 180, 182, 192, 310, 329, 330, 348, 353, 356, 370, 376], "extern": [28, 36, 46, 47, 48, 54, 71, 74, 91, 92, 200, 353, 360, 366], "quantit": [29, 66, 119, 314, 349, 370], "characterist": [29, 39, 58, 67, 100, 101, 102, 110, 115, 116, 119, 126, 128, 129, 130, 131, 132, 133, 135, 146, 161, 172, 173, 314, 349, 370], "second": [29, 32, 34, 53, 64, 68, 90, 96, 103, 105, 107, 109, 113, 116, 117, 118, 119, 121, 139, 147, 155, 169, 203, 212, 213, 246, 283, 314, 315, 349, 358], "order": [29, 53, 55, 56, 64, 68, 74, 90, 101, 103, 125, 126, 146, 147, 148, 149, 150, 155, 160, 163, 164, 169, 173, 174, 180, 181, 184, 185, 192, 203, 246, 314, 315, 318, 329, 342, 349, 362, 370], "raw": [29, 48, 70, 116, 117, 118, 119, 176, 177, 180, 182, 203, 246, 314, 315, 330, 349, 360, 366], "moment": [29, 48, 55, 64, 125, 126, 173, 174, 177, 181, 203, 246, 314, 315, 318, 349, 373], "variat": [29, 81, 82, 116, 117, 118, 119, 203, 246, 314, 315, 349], "basic_statist": [29, 203, 246, 315, 349], "descriptor_bas": 29, "float_t": [29, 260, 265, 266], "method_t": [29, 260, 265, 266], "task_t": [29, 260, 265, 266], "standard_devi": 29, "get_standard_devi": [29, 203, 246, 315, 349], "set_standard_devi": 29, "max": [29, 50, 54, 61, 70, 119, 123, 124, 127, 130, 131, 132, 138, 140, 144, 216, 257, 349, 376], "get_max": [29, 203, 246, 315, 349], "set_max": 29, "sum_squares_cent": 29, "get_sum_squares_cent": [29, 203, 246, 315, 349], "set_sum_squares_cent": 29, "full": [29, 36, 44, 85, 99, 110, 139, 152, 160, 192, 280, 360, 370], "sum_squar": 29, "get_sum_squar": [29, 203, 246, 315, 349], "set_sum_squar": 29, "get_sum": [29, 203, 246, 315, 349], "set_sum": 29, "get_min": [29, 203, 246, 315, 349], "set_min": 29, "second_order_raw_mo": 29, "get_second_order_raw_mo": [29, 203, 246, 315, 349], "set_second_order_raw_mo": 29, "bs_desc": [29, 203, 246, 315, 349], "cout": [29, 33, 34, 36, 39, 54, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 315, 349, 357, 358, 360, 369, 375], "endl": [29, 33, 34, 36, 39, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 315, 349, 357, 358, 360, 369, 375], "basic_statistics_dense_batch": [29, 201, 202, 245, 313, 349, 350], "famili": [32, 70, 86, 171, 317, 352, 376], "thunder": [32, 171, 174, 234, 235, 236, 237, 238, 239, 317], "smo": [32, 240, 241, 317], "nu_classif": [32, 234, 235], "nu_regress": [32, 236, 237], "kernel_t": 32, "cache_s": 32, "cach": [32, 54, 171, 214, 215, 352], "megabyt": 32, "200": [32, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 255, 268], "get_cache_s": 32, "set_cache_s": [32, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268], "nu": [32, 352, 370], "enable_if_nu_task_t": 32, "get_nu": 32, "set_nu": [32, 234, 235, 236, 237], "get_kernel": 32, "set_kernel": 32, "tau": [32, 75, 76, 171], "quadrat": [32, 171, 352], "6": [32, 33, 34, 53, 56, 90, 157, 171, 204, 220, 224, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 261, 268, 281, 283, 332, 334, 357, 358], "get_tau": 32, "set_tau": [32, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268], "enable_if_epsilon_available_t": 32, "100000": 32, "upper": [32, 125, 151, 152, 153, 154, 155, 171, 181, 184, 215, 352, 370], "bound": [32, 68, 84, 123, 125, 171, 352, 370], "constraint": [32, 54, 135, 352], "optim": [32, 53, 55, 62, 63, 64, 65, 90, 110, 115, 116, 117, 118, 127, 130, 138, 140, 171, 181, 183, 186, 200, 318, 330, 332, 352, 370], "enable_if_c_available_t": 32, "get_c": 32, "set_c": [32, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 268], "shrink": [32, 58, 171, 352], "enabl": [32, 37, 56, 70, 81, 100, 102, 103, 106, 115, 126, 140, 149, 151, 155, 169, 170, 171, 172, 175, 177, 180, 181, 182, 184, 185, 186, 188, 191, 193, 195, 320, 366, 370], "get_shrink": 32, "set_shrink": [32, 240, 241], "get_support_vector_count": 32, "first_class_respons": 32, "uniqu": [32, 46, 47, 48, 56, 68, 69, 74, 149, 162, 180, 322, 329, 369, 370], "get_first_class_respons": 32, "set_first_class_respons": 32, "bia": [32, 171, 352, 370], "get_bia": 32, "set_bia": 32, "first_class_label": 32, "get_first_class_label": 32, "set_first_class_label": 32, "second_class_label": 32, "get_second_class_label": 32, "set_second_class_label": 32, "support_vector": 32, "nsv": 32, "get_support_vector": 32, "set_support_vector": 32, "bias": [32, 53, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268], "get_bias": [32, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268], "set_bias": 32, "second_class_respons": 32, "get_second_class_respons": 32, "set_second_class_respons": 32, "coeff": [32, 214, 232, 233], "lagrang": 32, "get_coeff": [32, 214, 232, 233], "set_coeff": 32, "support_indic": 32, "get_support_indic": [32, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268], "set_support_indic": 32, "decision_funct": 32, "get_decision_funct": [32, 232, 233, 234, 235, 240, 241, 242, 243, 268], "set_decision_funct": 32, "svm_two_class_thunder_dense_batch": [32, 171, 172, 201, 202, 245, 316, 351, 352], "svm_two_class_smo_dense_batch": [32, 171, 201, 202, 316, 351, 352], "svm_reg_thunder_dense_batch": [32, 201, 202, 316, 351, 352], "svm_multi_class_thunder_dense_batch": [32, 172, 201, 202, 316, 351, 352], "svm_nu_cls_thunder_dense_batch": [32, 201, 202, 316, 351, 352], "svm_nu_reg_thunder_dense_batch": [32, 201, 202, 316, 351, 352], "column_accessor": [33, 204, 247, 281, 357], "provid": [33, 34, 36, 52, 54, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 85, 86, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 318, 330, 357, 358, 359, 360, 361, 366, 369, 370, 374, 375], "read": [33, 34, 36, 38, 45, 54, 149, 151, 170, 180, 182, 184, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282, 357, 358, 359, 361, 366, 375], "access": [33, 34, 36, 39, 44, 46, 50, 56, 58, 62, 63, 64, 65, 67, 68, 70, 78, 79, 82, 85, 86, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 115, 116, 117, 118, 121, 123, 125, 126, 129, 137, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 192, 195, 197, 198, 281, 283, 357, 358, 359, 361, 365, 366, 370, 375], "contigu": [33, 34, 46, 47, 175, 181, 182, 184, 357, 358, 359, 360, 366, 368, 369, 370], "homogen": [33, 34, 45, 48, 56, 62, 66, 70, 78, 79, 81, 85, 97, 106, 110, 123, 143, 149, 151, 170, 171, 177, 181, 182, 183, 204, 215, 247, 281, 283, 330, 357, 358, 359, 360, 366, 369, 370], "arrai": [33, 34, 45, 46, 47, 48, 49, 56, 59, 70, 128, 130, 139, 160, 175, 177, 181, 182, 183, 184, 189, 208, 280, 318, 330, 357, 358, 366, 367, 369, 370, 375], "includ": [33, 34, 36, 52, 54, 56, 60, 69, 85, 96, 100, 106, 126, 139, 157, 159, 170, 175, 177, 185, 187, 190, 191, 193, 195, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 311, 312, 320, 335, 342, 356, 357, 358, 360, 366, 370, 374, 375], "sycl": [33, 34, 36, 50, 53, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 318, 356, 357, 358, 360, 362, 370, 375, 376], "iostream": [33, 34, 36, 204, 208, 212, 213, 214, 215, 216, 218, 219, 223, 231, 247, 250, 257, 258, 264, 265, 266, 280, 281, 283, 357, 358, 360, 375], "main": [33, 34, 36, 54, 56, 70, 96, 101, 123, 139, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 330, 357, 358, 360, 366, 373], "queue": [33, 34, 36, 50, 52, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 281, 283, 311, 312, 357, 358, 360, 362, 369, 375], "default_selector": [33, 34, 36, 280, 281, 283, 357, 358, 360], "host_data": [33, 34, 281, 283, 357, 358], "0f": [33, 34, 36, 208, 280, 281, 283, 357, 358, 360], "5f": [33, 34, 281, 283, 357, 358], "1f": [33, 34, 281, 283, 357, 358], "2f": [33, 34, 281, 283, 357, 358], "7f": [33, 34, 281, 283, 357, 358], "9f": [33, 34, 281, 283, 357, 358], "shared_data": [33, 34, 281, 283, 357, 358], "malloc_shar": [33, 34, 247, 281, 283, 357, 358], "event": [33, 34, 281, 283, 357, 358, 370], "memcpi": [33, 34, 247, 281, 283, 357, 358], "sizeof": [33, 34, 54, 171, 247, 281, 283, 357, 358], "homogen_t": [33, 34, 47, 204, 224, 244, 247, 281, 283, 357, 358, 368, 369], "wrap": [33, 34, 36, 46, 47, 204, 208, 224, 280, 281, 283, 357, 358, 360, 369], "acc": [33, 34, 204, 208, 247, 281, 283, 357, 358, 375], "block": [33, 34, 36, 46, 47, 48, 53, 64, 65, 68, 95, 96, 99, 103, 105, 113, 117, 118, 121, 122, 143, 147, 148, 149, 151, 154, 155, 168, 169, 170, 175, 180, 181, 182, 184, 193, 199, 214, 215, 280, 281, 283, 318, 357, 358, 359, 360, 366, 368, 369, 370, 373, 374, 376], "pull": [33, 34, 204, 208, 247, 281, 283, 357, 358, 359, 375], "get_count": [33, 34, 36, 48, 204, 208, 247, 280, 281, 283, 357, 358, 360, 375], "free": [33, 34, 36, 44, 46, 47, 48, 50, 52, 152, 281, 283, 357, 358, 360, 374], "qualifi": [33, 34], "least": [33, 34, 46, 47, 53, 55, 61, 69, 107, 114, 143, 145, 149, 151, 160, 170, 191, 193, 318, 370], "int32_t": [33, 34, 42, 43, 46, 47, 212, 215, 224, 229, 370], "u": [33, 34, 39, 53, 97, 127, 128, 136, 138, 139, 140, 141, 168, 169, 170, 329, 345, 346, 348, 370, 372], "enable_if_t": [33, 34], "is_const_v": [33, 34], "table_build": [33, 34], "builder": [33, 34, 71, 91, 92, 112, 115, 171, 172, 191, 214, 215, 366, 370], "method": [33, 34, 36, 42, 43, 44, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 137, 138, 139, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 179, 180, 181, 182, 186, 187, 188, 192, 193, 195, 197, 198, 211, 216, 219, 220, 223, 225, 226, 229, 234, 235, 236, 237, 238, 239, 240, 241, 244, 251, 252, 253, 254, 255, 256, 257, 260, 261, 265, 266, 270, 274, 275, 276, 279, 285, 288, 291, 293, 295, 297, 299, 301, 303, 306, 307, 308, 309, 310, 314, 317, 318, 322, 356, 359, 370], "data_t": [33, 34], "column_index": 33, "rang": [33, 34, 36, 39, 40, 41, 44, 48, 54, 70, 90, 125, 170, 180, 191, 214, 215, 280, 318, 359, 360], "row_rang": [33, 34], "directli": [33, 34, 54, 69, 175, 366], "within": [33, 34, 36, 46, 47, 48, 61, 69, 70, 106, 145, 176, 199, 330, 359, 363, 364, 366, 367, 368], "possibl": [33, 34, 46, 47, 54, 56, 69, 70, 74, 75, 76, 90, 100, 123, 176, 180, 182, 185, 188, 193, 329, 330, 359, 360, 370, 375], "case": [33, 34, 54, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 74, 81, 84, 85, 86, 91, 92, 97, 106, 110, 112, 115, 116, 117, 118, 123, 126, 130, 131, 136, 138, 139, 140, 141, 149, 151, 152, 153, 160, 170, 171, 172, 175, 177, 180, 182, 184, 192, 208, 324, 329, 330, 334, 352, 359, 370, 372, 375], "immut": [33, 34, 36, 280, 360, 365, 366, 369, 370], "convert": [33, 34, 54, 180, 181, 232, 234, 236, 238, 240, 242, 366], "mutabl": [33, 34, 36, 280, 360], "reus": [33, 34], "reset": [33, 34, 36], "either": [33, 34, 36, 54, 59, 87, 88, 89, 96, 99, 139, 177, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 329, 366, 370], "enough": [33, 34, 54], "pointer": [33, 34, 36, 44, 46, 47, 48, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 75, 76, 78, 79, 82, 85, 86, 87, 88, 89, 90, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 116, 117, 118, 121, 122, 125, 126, 129, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 171, 172, 182, 185, 187, 188, 189, 192, 193, 195, 197, 198, 280, 359, 360, 375], "push": [33, 34], "row_accessor": [34, 283, 358, 375], "third": [34, 54, 96, 105, 107, 283, 358, 370], "exampl": [35, 38, 45, 51, 70, 74, 86, 109, 111, 124, 151, 166, 191, 200, 318, 323, 327, 328, 331, 333, 336, 341, 343, 350, 351, 353, 359, 362, 365, 369, 370, 374, 376], "divid": [36, 53, 61, 70, 96, 163, 325, 330, 370], "sever": [36, 144, 175, 177, 180, 182, 184, 192, 193, 359, 360, 366, 373], "share": [36, 44, 46, 47, 48, 50, 280, 360, 366, 369, 374], "re": [36, 54, 60, 96, 97, 181, 182, 208], "static": [36, 46, 47, 356, 375], "simplifi": [36, 53], "wai": [36, 39, 54, 70, 71, 91, 92, 106, 149, 178, 180, 183, 184, 329, 330, 352, 359, 365, 366, 375], "doe": [36, 46, 47, 54, 70, 82, 86, 90, 100, 106, 112, 115, 118, 123, 126, 127, 140, 146, 171, 172, 175, 177, 180, 181, 182, 183, 192, 330, 343, 344, 362, 373, 374], "pass": [36, 56, 58, 60, 62, 63, 64, 65, 67, 68, 70, 78, 79, 82, 85, 86, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 113, 115, 116, 117, 118, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 137, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 180, 182, 188, 195, 197, 198, 329, 362, 375], "own": [36, 46, 47, 60, 162, 175, 180, 185, 192, 360, 366], "ownership": [36, 46, 47, 280, 366], "fill": [36, 81, 82, 83, 84, 86, 139, 152, 280, 360], "scalar": [36, 54, 87, 88, 89, 366], "nullptr": [36, 46, 47, 129, 140, 360], "without": [36, 48, 54, 70, 71, 72, 90, 127, 139, 151, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 320, 330, 360, 366, 370, 374], "mutable_data": [36, 360], "other": [36, 42, 43, 46, 47, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 78, 79, 81, 85, 97, 105, 106, 116, 117, 118, 123, 142, 143, 149, 151, 152, 170, 171, 181, 182, 183, 186, 188, 320, 345, 346, 348, 361, 362, 366, 369, 370, 375], "move": [36, 42, 43, 44, 48, 74, 152, 353], "delet": [36, 46, 47, 260, 360], "input": [36, 37, 39, 54, 57, 58, 59, 61, 66, 69, 70, 71, 72, 76, 83, 84, 87, 88, 89, 90, 94, 97, 100, 106, 107, 109, 112, 114, 115, 123, 128, 138, 141, 149, 151, 161, 162, 165, 167, 170, 171, 175, 179, 180, 181, 184, 193, 194, 206, 207, 215, 248, 249, 274, 291, 293, 322, 325, 329, 330, 332, 334, 336, 337, 338, 339, 340, 343, 344, 345, 346, 348, 361, 366, 370, 374], "member": [36, 86, 370], "constdelet": [36, 47], "shared_ptr": [36, 54], "user": [36, 46, 47, 54, 95, 96, 97, 99, 134, 138, 140, 161, 180, 182, 192, 200, 280, 324, 360, 362, 366, 370, 374], "ref": [36, 54], "alias": [36, 39], "referenc": 36, "unmanag": 36, "hold": [36, 48, 50, 54, 56, 82, 86, 96, 99, 123, 184, 360], "is_same_v": 36, "replac": [36, 48, 70, 74, 90, 106, 127, 139, 149, 330], "swap": [36, 42, 43, 44, 48], "get_mutable_data": [36, 280, 360], "has_mutable_data": [36, 280, 360], "othewis": 36, "throw": [36, 54, 185, 187], "domain_error": 36, "noexcept": [36, 39, 48], "need_mutable_data": [36, 280, 360], "get_siz": 36, "byte": [36, 171, 175, 189, 366, 370], "current": [36, 54, 58, 65, 68, 71, 86, 91, 92, 106, 113, 118, 121, 122, 138, 144, 148, 149, 151, 154, 165, 167, 168, 170, 180, 182, 185, 318, 320, 324, 330, 336, 342, 343, 344, 366, 375], "boundari": [36, 59, 189], "check": [36, 46, 47, 71, 91, 92, 112, 115, 127, 136, 138, 139, 140, 141, 171, 172, 175, 187, 188, 193], "list": [36, 44, 52, 54, 104, 112, 113, 115, 158, 171, 172, 174, 180, 187, 192, 193, 195, 197, 198, 359, 360, 366, 369], "brief": [36, 52, 54, 360], "introduct": [36, 52, 53, 260, 318, 321, 360], "api": [36, 44, 46, 86, 112, 115, 171, 172, 199, 318, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 357, 358, 360, 361, 363, 364, 367, 368, 369, 370, 376], "scenario": [36, 175, 177, 180, 182, 191, 192, 193, 360, 366, 373, 374, 375], "string": [36, 37, 54, 180, 187, 216, 225, 226, 253, 256, 257, 280, 360, 362, 370], "print_properti": [36, 280, 360], "data_count": [36, 280, 360], "arr_data": [36, 280, 360], "ones": [36, 115, 143, 144, 145, 171, 280, 352, 360], "arr_on": [36, 280, 360], "thei": [36, 54, 60, 148, 161, 192, 193, 280, 318, 330, 336, 360, 370, 374], "arr_mdata": [36, 280, 360], "still": [36, 54, 280, 360], "submit": [36, 280, 360], "handler": [36, 280, 360], "cgh": [36, 280, 360], "mdata": [36, 280, 360], "cone": [36, 280, 360], "parallel_for": [36, 215, 280, 360], "array_addit": [36, 280, 360], "idx": [36, 54, 280, 360], "wait": [36, 180, 247, 280, 360], "io": [37, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "enum": [37, 48, 370], "read_opt": 37, "uint64_t": 37, "parse_head": 37, "default_delimit": 37, "default_read_opt": 37, "data_sourc": [37, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282, 361, 362, 375], "file_nam": 37, "delimit": [37, 361, 370], "opt": 37, "get_file_nam": 37, "get_delimit": 37, "get_read_opt": 37, "name": [37, 44, 176, 180, 182, 185, 186, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320, 361, 362, 375], "get_filenam": 37, "charact": [37, 54, 370], "separ": [37, 54, 74, 101, 171, 191, 336, 345, 346, 348, 352, 370], "get_delimt": 37, "dure": [37, 54, 70, 74, 85, 100, 106, 138, 152, 179, 180, 182, 187, 192, 193, 330, 342, 353, 366, 370], "line": [37, 54, 370], "record": [37, 71, 370], "read_arg": [37, 362], "attribut": [37, 39, 42, 43, 44, 177, 182, 366, 370], "datasourc": [37, 176, 180, 362], "result": [37, 52, 54, 56, 58, 59, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 78, 79, 82, 85, 86, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 110, 113, 115, 116, 117, 121, 125, 126, 127, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 171, 172, 175, 180, 182, 188, 192, 193, 195, 197, 198, 203, 205, 206, 207, 208, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 252, 254, 255, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 275, 277, 286, 291, 304, 311, 312, 315, 320, 322, 324, 325, 329, 330, 332, 342, 349, 352, 353, 366, 370, 373, 374, 375], "csv": [38, 45, 180, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282, 362, 366, 370, 375], "arg": [38, 45, 123, 324, 325, 342, 366], "preview": [39, 42, 43, 44, 50, 52, 205, 212, 213, 214, 215, 224, 229, 231, 244, 311, 312], "service_funct": [39, 212, 213, 215], "you": [39, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 68, 70, 71, 75, 76, 78, 79, 85, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 112, 113, 115, 116, 117, 118, 121, 122, 125, 126, 127, 129, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 191, 192, 193, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 318, 324, 356, 366, 370, 376], "introduc": [39, 54, 359], "graph_trait": [39, 44, 365], "shown": [39, 74, 110, 149, 180, 353, 366, 375], "below": [39, 44, 54, 56, 58, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 78, 79, 82, 85, 86, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 121, 122, 125, 126, 129, 130, 131, 132, 133, 137, 139, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 174, 182, 195, 197, 198, 322, 330, 353, 359, 366, 375], "shorter": 39, "notat": [39, 158, 318, 321, 332, 334, 371], "graph_alloc": 39, "allocator_typ": [39, 44], "graph_user_value_typ": [39, 44], "vertex_user_value_typ": [39, 44], "edge_user_value_typ": [39, 44], "vertex_typ": [39, 44, 212, 224, 229], "vertex_size_typ": [39, 44], "edge_size_typ": [39, 44], "vertex_edge_size_typ": [39, 44, 213], "vertex_outward_edge_size_typ": [39, 44, 212], "vertex_edge_iterator_typ": [39, 44], "const_vertex_edge_iterator_typ": [39, 44], "vertex_edge_range_typ": 39, "const_vertex_edge_range_typ": 39, "const_vertex_outward_edge_range_typ": 39, "ha": [39, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 107, 109, 112, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 180, 192, 342, 355, 366, 370, 372], "return_typ": 39, "get_": [39, 362], "graph_el": 39, "get_vertex_count": [39, 40, 41, 212, 213, 215], "get_edge_count": [39, 40, 41, 212, 213], "get_vertex_degre": [39, 41, 213], "get_vertex_neighbor": [39, 41, 213], "get_vertex_outward_degre": [39, 40, 212], "outward": [39, 40, 44], "get_vertex_outward_neighbor": [39, 40, 212], "get_edge_valu": [39, 40, 212], "v": [39, 53, 54, 55, 70, 75, 76, 105, 119, 141, 168, 169, 170, 329, 330, 334, 345, 346, 348, 349, 366, 370, 372], "sourc": [39, 40, 45, 49, 54, 70, 149, 151, 170, 176, 177, 184, 193, 199, 318, 319, 370, 375], "destin": [39, 40, 54], "graph_typ": [39, 44], "my_graph_typ": 39, "valid": [39, 54, 178, 199, 318], "concept": [39, 44, 48, 50, 177, 199, 318, 321, 360, 362, 363, 364, 365, 369, 370, 374], "adjac": [39, 44, 45, 334, 365, 370], "directed_adjacency_vector_graph": [42, 44, 212, 229, 363], "vertexvalu": [42, 43, 44], "empty_valu": [42, 43, 44], "edgevalu": [42, 43, 44], "graphvalu": [42, 43, 44], "indextyp": [42, 43, 44, 54], "destruct": [42, 43, 182], "undirected_adjacency_vector_graph": [43, 44, 205, 213, 214, 215, 224, 231, 244, 364], "_graph": 44, "suffix": 44, "them": [44, 46, 54, 55, 85, 106, 126, 130, 131, 132, 141, 143, 145, 155, 169, 179, 180, 192, 325, 334, 366, 370, 375], "topologi": [44, 188, 366, 370], "how": [44, 48, 50, 52, 54, 91, 92, 177, 180, 360, 375], "increment": [44, 48, 50, 53, 200, 360, 373], "decrement": [44, 48, 50, 54, 360], "goe": [44, 48, 50, 54, 151, 170, 360, 366], "scope": [44, 46, 47, 48, 50, 360], "graph_nam": 44, "int32": 44, "17": 44, "iso": [44, 112, 115, 171], "iec": [44, 112, 115, 171], "14882": [44, 112, 115, 171], "2017": [44, 53], "compliant": 44, "tag": [44, 50, 54], "absenc": [44, 370], "well": [44, 48, 54, 57, 58, 123, 177, 180, 182, 320, 335], "servic": [44, 45, 49, 54, 55, 105, 182, 185, 186, 187, 318, 320], "associ": [44, 53, 55, 59, 63, 64, 65, 74, 100, 109, 113, 116, 117, 118, 121, 122, 126, 173, 176, 177, 180, 181, 182, 318, 329, 335, 342, 353, 355, 360], "special": [44, 71, 72, 91, 92, 107, 136, 138, 139, 140, 141, 177, 181, 184, 370], "const_graph_user_value_typ": 44, "vertex_iter": 44, "const_vertex_iter": 44, "edge_typ": 44, "edge_iter": 44, "Not": [44, 61, 64, 65, 67, 68, 71, 75, 81, 85, 88, 89, 91, 95, 96, 99, 102, 103, 104, 105, 113, 115, 117, 118, 120, 121, 122, 126, 130, 131, 132, 137, 140, 141, 146, 147, 148, 152, 155, 169, 172, 174], "const_edge_iter": 44, "vertex_outward_edge_iterator_typ": 44, "const_vertex_outward_edge_iterator_typ": 44, "vertex_edge_rang": 44, "pair": [44, 54, 95, 97, 101, 126, 139, 146, 150, 172, 330, 337, 338, 339, 340, 342, 345, 346, 348, 370], "const_vertex_edge_rang": 44, "vertex_outward_edge_rang": 44, "const_vertex_outward_edge_rang": 44, "accessor": [45, 49, 54, 318, 370], "trait": [45, 363, 364, 365], "relat": [45, 54, 171, 175, 180, 352, 362, 365, 366, 369], "metadata": [45, 46, 47, 176, 369, 370], "layout": [45, 46, 47, 62, 66, 78, 79, 85, 96, 106, 110, 123, 143, 149, 152, 154, 155, 169, 177, 181, 182, 183, 184, 366, 369, 370], "spars": [45, 97, 109, 149, 177, 181, 183, 184, 208, 363, 364, 365, 366, 369, 370], "compress": [45, 48, 109, 177, 179, 318, 366, 370], "csr": [45, 48, 63, 64, 65, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 116, 117, 118, 120, 121, 122, 177, 181, 182, 183, 208, 232, 234, 236, 238, 240, 242, 363, 364, 365, 366, 369, 370], "csr_tabl": [46, 208, 367], "data_point": [46, 47], "column_indices_point": 46, "row_offsets_point": 46, "sparse_index": [46, 48], "one_bas": [46, 48], "offset": [46, 68, 96, 99, 105, 208], "remain": [46, 47, 59, 130, 131, 139, 152, 324], "side": [46, 47, 54, 56, 362], "columns_indic": [46, 367, 370], "row_offset": [46, 208, 367, 370], "ordin": [46, 47, 48, 71, 74, 91, 92, 176, 177, 180, 366, 370], "integ": [46, 47, 54, 56, 58, 67, 69, 70, 81, 87, 88, 89, 91, 92, 100, 102, 103, 106, 110, 115, 123, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 144, 146, 172, 176, 187, 322, 324, 325, 330, 370], "scheme": [46, 57, 58, 61, 70, 85, 86, 106, 171, 180, 352], "zero_bas": [46, 48], "column_indic": [46, 208], "cast": [46, 47, 54], "equival": [46, 47, 54, 72, 330], "constdatadelet": 46, "constcolumnindicesdelet": 46, "constrowoffsetsdelet": 46, "data_delet": [46, 47], "column_indices_delet": 46, "row_offsets_delet": 46, "last": [46, 47, 85, 102, 103, 105, 112, 115, 139, 141, 171, 180, 184, 193, 200, 367, 370, 373], "get_non_zero_count": 46, "get_index": 46, "No": [46, 47, 53, 181, 200, 320, 336, 342], "actual": [46, 47, 61, 102, 157, 159, 175, 178, 181], "get_column_indic": 46, "get_row_offset": 46, "data_layout": [47, 48], "row_major": [47, 48], "column_major": [47, 48], "subtyp": [48, 50, 367, 368], "get_column_count": [48, 204, 247, 251, 252, 375], "get_row_count": [48, 244, 370], "table_metadata": [48, 369], "get_metadata": 48, "addit": [48, 52, 53, 54, 58, 61, 67, 68, 71, 72, 75, 81, 83, 84, 90, 91, 92, 100, 103, 110, 115, 136, 138, 139, 140, 141, 158, 162, 172, 175, 180, 181, 187, 356, 362, 366, 370], "about": [48, 53, 54, 68, 74, 106, 123, 158, 180, 181, 183, 186, 187, 199, 200, 360, 366, 370], "runtim": [48, 54, 112, 115, 171, 172, 369, 375], "sub": [48, 54, 139, 178, 369], "get_data_layout": 48, "feature_count": 48, "data_typ": 48, "feature_typ": 48, "dtype": 48, "ftype": 48, "get_feature_count": 48, "get_feature_typ": 48, "feature_index": 48, "get_data_typ": 48, "unknown": [48, 181, 182], "undefin": [48, 54], "logic": [48, 54, 183, 184, 366, 370], "nomin": [48, 53, 144, 366, 370], "interv": [48, 56, 59, 70, 76, 84, 97, 158, 330, 344, 366, 370], "ratio": [48, 160, 366, 370], "format": [48, 96, 112, 130, 131, 132, 133, 168, 169, 180, 181, 183, 184, 208, 359, 361, 363, 365, 366, 367, 370], "multipl": [49, 54, 87, 112, 139, 171, 177, 188, 192, 318, 321, 352, 370], "spmd": [49, 50, 51, 311, 312, 318, 321, 322, 324, 342, 349, 370], "commun": [49, 51, 52, 53, 193, 199, 224, 311, 312, 318, 370, 374], "backend": [50, 52, 311, 312, 318, 321, 370], "There": [50, 54, 70, 106, 178, 330, 345, 346, 348], "both": [50, 54, 61, 69, 74, 100, 101, 107, 110, 113, 126, 171, 174, 176, 180, 181, 322, 334, 352, 353, 360, 370], "host": [50, 55, 190, 318, 362, 370], "device_memory_access": 50, "assum": [50, 64, 65, 68, 74, 85, 95, 96, 99, 103, 105, 113, 117, 118, 121, 122, 143, 144, 145, 147, 148, 154, 155, 168, 169, 180, 193, 329], "collect": [50, 52, 54, 64, 68, 85, 96, 99, 103, 105, 106, 113, 117, 121, 126, 129, 146, 147, 150, 155, 158, 160, 161, 162, 169, 175, 177, 180, 318, 321, 366, 370], "control": [50, 110, 175, 183, 370], "obligatori": 50, "asynchron": [50, 54, 180, 193, 374], "usm": [51, 375], "request": [51, 67, 70, 100, 102, 110, 115, 126, 129, 130, 131, 132, 133, 146, 161, 172, 181, 182, 320], "reducion": 51, "consist": [52, 54, 56, 71, 91, 92, 165, 167, 180, 182, 324, 332, 335, 370], "infer": [52, 53, 210, 211, 217, 218, 219, 220, 222, 225, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 268, 276, 285, 288, 303, 317, 362, 370, 372, 375], "accept": [52, 56, 62, 63, 64, 65, 67, 68, 75, 78, 79, 82, 85, 86, 95, 96, 98, 99, 101, 102, 103, 104, 105, 113, 116, 117, 118, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 180, 192, 195, 197, 198, 362, 370], "those": [52, 70, 71, 72, 74, 75, 76, 90, 91, 92, 100, 115, 171, 184, 330, 342, 352, 370], "expect": [52, 55, 157, 158, 159, 173, 180, 318, 342, 374], "rank": [52, 97], "start": [52, 54, 56, 61, 74, 85, 90, 96, 99, 100, 105, 106, 137, 139, 177, 180, 200, 208, 215, 319, 324, 353, 356, 366, 370], "simul": [52, 53, 62, 89], "ccl": [52, 311], "mpi": [52, 193, 312], "particular": [52, 54, 71, 86, 106, 140, 141, 176, 177, 180, 181, 183, 193, 199, 320, 370], "ifndef": [52, 54, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 311, 312], "onedal_data_parallel": [52, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 311, 312], "endif": [52, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 311, 312], "comm": [52, 311, 312], "make_commun": [52, 311, 312], "rank_id": [52, 311, 312], "get_rank": [52, 244, 311, 312], "result_train": [52, 210, 211, 216, 217, 225, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 268, 311, 312], "local_input": [52, 311, 312], "adams2003": [53, 138], "adam": 53, "robert": 53, "john": 53, "jf": 53, "fournier": 53, "sobolev": 53, "vol": 53, "140": 53, "elsevi": 53, "2003": 53, "agrawal94": [53, 56], "rakesh": 53, "agraw": 53, "ramakrishnan": 53, "srikant": 53, "mine": [53, 56, 98, 99, 197, 199, 335], "rule": [53, 55, 59, 74, 75, 124, 173, 318, 324, 335, 352, 353], "proceed": 53, "20th": 53, "vldb": 53, "confer": 53, "santiago": 53, "chile": 53, "1994": 53, "arthur2007": [53, 104, 105, 106], "arthur": 53, "vassilvitskii": 53, "advantag": [53, 54, 107, 123], "care": [53, 54], "eighteenth": 53, "annual": 53, "acm": 53, "siam": 53, "symposium": 53, "societi": 53, "industri": 53, "philadelphia": 53, "pa": 53, "usa": 53, "2007": 53, "pp": 53, "1027": 53, "1035": 53, "http": [53, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "ilpub": 53, "stanford": 53, "edu": 53, "8090": 53, "778": 53, "2006": 53, "13": 53, "pdf": 53, "bahmani2012": [53, 104, 105, 106], "bahmani": 53, "moselei": 53, "vattani": 53, "kumar": 53, "scalabl": [53, 376], "endow": 53, "2012": 53, "org": [53, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "pvldb": 53, "vol5": 53, "p622_bahmanbahmani_vldb2012": 53, "ben2005": [53, 143, 145], "ben": 53, "gal": 53, "detect": [53, 54, 55, 173, 187, 188, 318, 370], "maimon": 53, "o": [53, 67, 68, 70, 75, 76, 106, 151, 170, 330], "rockach": 53, "l": [53, 62, 70, 85, 90, 91, 92, 104, 105, 106, 115, 127, 132, 139, 140, 141, 159, 324, 330, 342, 343, 344, 345, 346, 348, 356], "ed": 53, "knowledg": 53, "discoveri": [53, 56, 335], "handbook": 53, "complet": [53, 70, 71, 85, 91, 92, 112, 115, 171, 172, 182, 366, 370, 374], "practition": 53, "research": 53, "kluwer": 53, "academ": 53, "publish": [53, 320], "2005": 53, "isbn": 53, "387": 53, "24435": 53, "bentley80": [53, 355], "bentlei": 53, "multidimension": [53, 100], "conquer": 53, "23": 53, "214": 53, "229": 53, "1980": 53, "billor2000": [53, 144], "nedret": 53, "billor": 53, "ali": 53, "hadib": 53, "paul": 53, "f": [53, 54, 70, 71, 74, 85, 90, 91, 92, 96, 97, 115, 127, 128, 129, 130, 131, 132, 133, 138, 139, 141, 157, 158, 159, 204, 247, 330, 353], "velleman": 53, "bacon": [53, 142], "adapt": [53, 57, 58, 115, 127, 135, 173], "computation": [53, 149, 151, 170, 191, 359], "effici": [53, 54, 62, 123, 124, 181], "34": 53, "279": 53, "298": 53, "2000": 53, "bishop2006": [53, 115], "christoph": 53, "bishop": 53, "recognit": 53, "198": 53, "springer": 53, "scienc": 53, "busi": 53, "media": 53, "llc": 53, "31073": 53, "8": [53, 106, 159, 204, 208, 210, 247, 251, 252, 253, 332, 356], "boser92": [53, 171, 352], "boser": [53, 171], "guyon": 53, "vapnik": 53, "marginclassi\ufb01": 53, "fifth": [53, 105], "workshop": 53, "theori": 53, "144": 53, "152": 53, "press": 53, "1992": 53, "leo": 53, "breiman": 53, "volum": 53, "45": [53, 209, 250], "issu": [53, 54, 187], "32": [53, 81, 103, 136, 137, 139, 140, 141, 189], "2001": 53, "jerom": 53, "friedman": [53, 61], "richard": 53, "olshen": 53, "charl": 53, "stone": 53, "chapman": 53, "hall": 53, "1984": 53, "bro07": [53, 149, 329], "bro": 53, "acar": 53, "kolda": 53, "resolv": 53, "ambigu": [53, 54, 149, 329], "singular": [53, 55, 173, 318, 329], "sandia": 53, "report": [53, 112, 115, 129, 171, 172], "sand2007": 53, "6422": 53, "unlimit": [53, 70, 75, 76, 90], "releas": [53, 54, 55, 56, 58, 59, 61, 62, 66, 69, 70, 71, 72, 75, 76, 78, 79, 85, 91, 92, 97, 100, 101, 106, 112, 113, 115, 119, 123, 125, 126, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 175, 176, 179, 180, 182, 184, 186, 187, 188, 192, 200, 375, 376], "octob": 53, "byrd2015": [53, 139], "byrd": 53, "hansen": 53, "jorg": 53, "noced": 53, "singer": 53, "stochast": [53, 90, 93, 115, 127, 135, 136, 139, 173, 174], "quasi": 53, "newton": [53, 59], "larg": [53, 54, 56, 89, 109, 115, 175, 332], "2015": 53, "arxiv": 53, "1401": 53, "7020v2": 53, "oc": 53, "ab": 53, "chen2016": [53, 90], "chen": 53, "guestrin": 53, "xgboost": 53, "boost": [53, 55, 57, 58, 59, 61, 74, 185, 191, 318, 353], "system": [53, 54, 62, 89, 94, 97, 112, 188, 194, 196, 200, 375], "kdd": 53, "16": [53, 210, 251, 252, 253], "22nd": 53, "sigkdd": 53, "carletti2021": [53, 334], "carletti": 53, "vincenzo": 53, "et": 53, "al": [53, 94, 95, 96, 97, 98, 99], "multi": [53, 54, 55, 57, 58, 59, 61, 89, 156, 161, 171, 188, 191, 193, 318, 356, 376], "architectur": [53, 54, 188], "comparison": [53, 62, 370], "four": [53, 54, 96], "iapr": 53, "spr": 53, "syntact": 53, "sspr": 53, "cham": 53, "2021": [53, 203, 205, 206, 207, 220, 222, 224, 227, 229, 230, 233, 235, 237, 239, 246, 248, 249, 253, 256, 260, 261, 263, 375], "defazio2014": [53, 140], "defazio": 53, "aaron": 53, "franci": 53, "bach": 53, "simon": 53, "lacost": 53, "julien": 53, "saga": [53, 107, 109, 115, 140], "strongli": [53, 200], "convex": [53, 90, 127, 352], "composit": [53, 127], "advanc": [53, 188], "neural": 53, "2014": 53, "demmel90": [53, 329], "demmel": 53, "kahan": 53, "accur": [53, 56, 74, 175], "bidiagon": 53, "matric": [53, 55, 62, 85, 96, 97, 146, 147, 148, 149, 158, 170, 173, 181, 184, 318, 326, 329, 337, 338, 339, 340, 366], "sci": 53, "stat": 53, "11": [53, 57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 100, 101, 106, 107, 109, 110, 112, 114, 119, 123, 125, 126, 130, 131, 143, 144, 145, 149, 159, 163, 171, 172, 180, 204, 208, 247, 322, 330, 332, 337, 338, 339, 340, 345, 346, 348, 349, 352, 376], "1990": 53, "873": 53, "912": 53, "dempster77": [53, 85], "dempster": 53, "laird": 53, "rubin": 53, "likelihood": [53, 85, 115], "incomplet": [53, 85, 178], "em": 53, "royal": 53, "soc": 53, "ser": 53, "39": 53, "1977": 53, "duchi2011": [53, 136], "elad": 53, "hazan": 53, "duchi": 53, "yoram": 53, "subgradi": [53, 115, 127, 135, 173], "onlin": [53, 54, 66, 111, 119, 123, 153, 174, 177, 194, 318, 321, 366, 370], "journal": 53, "12": [53, 172, 332], "21212159": 53, "2011": [53, 112, 115, 171], "martin": 53, "ester": 53, "han": 53, "peter": 53, "kriegel": 53, "j\u00f6rg": 53, "sander": 53, "xiaowei": 53, "xu": 53, "discov": [53, 56, 353], "databas": [53, 177, 180, 187, 366], "2nd": 53, "226": 53, "231": 53, "1996": 53, "fan05": [53, 171, 352], "rong": 53, "en": 53, "fan": 53, "pai": [53, 54], "hsuen": 53, "chih": 53, "jen": 53, "lin": 53, "work": [53, 61, 96, 123, 149, 151, 161, 170, 171, 175, 177, 182, 195, 198, 318, 352, 366, 373], "1889": 53, "1918": 53, "fleischer2008": [53, 97], "rudolf": 53, "fleischer": 53, "jinhui": 53, "aspect": [53, 161], "4th": 53, "aaim": 53, "2008": 53, "shanghai": 53, "china": 53, "june": 53, "25": 53, "freund99": [53, 57, 59], "yoav": 53, "freund": [53, 57, 59], "schapir": 53, "view": [53, 177, 366], "japanes": 53, "artifici": 53, "intellig": 53, "14": [53, 376], "771": 53, "780": 53, "1999": 53, "friedman98": [53, 58], "trevor": 53, "hasti": 53, "tibshirani": 53, "1998": 53, "friedman00": [53, 61], "annal": 53, "28": 53, "337": 53, "407": 53, "friedman2010": [53, 107, 110], "rob": 53, "path": [53, 69, 100, 188, 229, 355, 375], "coordin": [53, 107, 109, 110, 127, 135, 136, 144, 171, 173, 352], "descent": [53, 90, 107, 109, 110, 115, 127, 135, 173, 174], "softwar": [53, 183, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320], "33": 53, "2010": 53, "friedman2017": [53, 165, 167], "freund01": [53, 59], "version": [53, 54, 55, 58, 71, 72, 86, 100, 149, 151, 165, 167, 170, 180, 184, 185, 188, 190, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 318, 319, 324, 356, 375, 376], "43": 53, "293": 53, "318": 53, "gross2014": [53, 334, 370], "gross": 53, "yellen": 53, "zhang": 53, "edit": 53, "hastie2009": [53, 85, 107, 109, 112, 115, 130, 131, 158], "seri": 53, "2009": 53, "corr": 53, "7th": 53, "print": [53, 54, 208, 253, 256, 375], "2013": 53, "decemb": 53, "hoerl70": [53, 107, 109, 114], "hoerl": 53, "kennard": 53, "ridg": [53, 55, 107, 109, 110, 191, 318], "estim": [53, 56, 58, 70, 71, 85, 100, 106, 107, 109, 112, 114, 116, 117, 118, 120, 121, 122, 123, 127, 129, 139, 143, 145, 161, 175, 178, 191, 330, 342], "nonorthogon": 53, "technometr": 53, "feb": 53, "1970": 53, "55": 53, "67": 53, "hsu02": [53, 172], "wei": 53, "hsu": 53, "multiclass": [53, 60, 172], "ieee": 53, "transact": [53, 56], "network": [53, 149, 151, 170, 175, 179], "415": 53, "425": 53, "2002": 53, "hu2008": [53, 97], "yifan": 53, "hu": 53, "yehuda": 53, "koren": 53, "chri": 53, "volinski": 53, "collabor": [53, 97], "filter": [53, 97, 177, 180, 366], "implicit": [53, 54, 55, 191, 318], "feedback": 53, "icdm": 53, "08": [53, 136], "eighth": 53, "james2013": [53, 100, 114, 124], "gareth": 53, "jame": 53, "daniela": 53, "witten": 53, "joachims99": [53, 171, 352], "thorsten": 53, "joachim": 53, "make": [53, 54, 60, 90, 101, 106, 161, 182, 185, 191, 199, 318, 324, 362, 375, 376], "practic": [53, 54], "sch\u00f6lkopf": 53, "burg": 53, "smola": 53, "169": 53, "184": 53, "mit": 53, "cambridg": 53, "ma": 53, "lang87": [53, 329], "lang": 53, "algebra": [53, 184], "verlag": 53, "york": 53, "1987": 53, "li2015": [53, 100], "li": [53, 159], "shengren": 53, "nina": 53, "amenta": 53, "gpu": [53, 55, 63, 67, 70, 100, 101, 102, 104, 115, 116, 128, 129, 132, 141, 146, 147, 148, 171, 318, 322, 324, 326, 329, 330, 336, 342, 349, 370, 375, 376], "259": 53, "270": 53, "lloyd82": [53, 106, 324], "stuart": 53, "quantiz": 53, "pcm": 53, "1982": 53, "1982pp": 53, "129": 53, "137": 53, "matsumoto98": [53, 88], "matsumoto": 53, "nishimura": 53, "mersenn": [53, 88, 89], "twister": [53, 88, 89], "623": 53, "equidistribut": 53, "pseudo": 53, "30": [53, 74], "januari": 53, "matsumoto2000": [53, 89], "dynam": [53, 54, 356], "creation": [53, 54, 179, 362, 366, 370], "pseudorandom": [53, 88, 89], "mont": [53, 62, 89], "carlo": [53, 62, 89], "niederreit": 53, "spanier": 53, "56": 53, "69": 53, "www": [53, 56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 186, 188, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320], "hiroshima": 53, "ac": 53, "jp": 53, "7em": 53, "mat": 53, "mt": 53, "dc": 53, "html": 53, "mitchell97": [53, 74, 75], "tom": 53, "mitchel": 53, "mcgraw": 53, "hill": 53, "educ": 53, "1997": 53, "mu2014": [53, 141], "mu": [53, 141, 159], "tong": 53, "yuqiang": 53, "alexand": 53, "mini": 53, "cmu": 53, "muli": 53, "minibatch_sgd": 53, "openclspec": [53, 370], "khrono": [53, 370], "opencl": [53, 356, 370, 375], "specif": [53, 54, 60, 66, 70, 86, 88, 90, 113, 126, 127, 128, 130, 131, 132, 136, 137, 138, 139, 140, 141, 157, 161, 175, 177, 180, 181, 182, 183, 192, 193, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 318, 319, 320, 321, 329, 359, 363, 364, 366, 370], "document": [53, 54, 55, 60, 123, 195, 320, 375], "revis": [53, 56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 186, 188], "24": [53, 112, 115, 171], "patwary2016": [53, 100], "md": 53, "mostofa": 53, "patwari": 53, "nadathur": 53, "rajagopalan": 53, "satish": 53, "narayanan": 53, "sundaram": 53, "jialin": 53, "liu": 53, "sadowski": 53, "evan": 53, "racah": 53, "suren": 53, "byna": 53, "craig": 53, "tull": 53, "wahid": 53, "bhimji": 53, "prabhat": 53, "pradeep": 53, "dubei": 53, "panda": [53, 100], "extrem": [53, 54], "2016": 53, "1607": 53, "08220": 53, "ping14": [53, 329], "ping": 53, "tak": 53, "eric": 53, "polizzi": 53, "feast": 53, "subspac": 53, "eigensolv": 53, "acceler": [53, 115, 127, 135, 173, 366], "approxim": [53, 90, 139, 332], "spectral": 53, "platt98": [53, 171], "platt": [53, 171], "sequenti": [53, 74, 352], "microsoft": [53, 356, 376], "com": [53, 56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 186, 188, 320], "wp": 53, "content": [53, 54, 110, 113, 139, 141, 375], "upload": 53, "02": 53, "tr": 53, "98": 53, "quinlan86": [53, 74, 75], "quinlan": 53, "induct": [53, 71, 74, 91, 92, 353], "81": 53, "106": 53, "1986": 53, "quinlan87": [53, 74], "man": 53, "studi": 53, "27": 53, "221": 53, "234": 53, "renie03": [53, 123], "jason": 53, "renni": 53, "lawrenc": 53, "shih": 53, "jaim": 53, "teevan": 53, "david": 53, "karget": 53, "tackl": 53, "poor": 53, "assumpt": [53, 54, 123, 158], "na\u00efv": [53, 55, 191, 318], "bay": [53, 55, 191, 318], "text": [53, 59, 60, 61, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 85, 106, 110, 113, 115, 118, 119, 120, 121, 122, 123, 127, 128, 135, 136, 141, 143, 144, 145, 150, 151, 152, 154, 157, 158, 159, 160, 165, 168, 170, 171, 180, 193, 195, 322, 330, 349, 361, 362, 370], "twentieth": 53, "icml": 53, "washington": 53, "rumelhart86": [53, 141], "rumelhart": 53, "geoffrei": 53, "hinton": 53, "ronald": 53, "william": 53, "represent": [53, 177, 178, 184, 361, 366, 370], "back": [53, 155, 169, 177, 179, 180, 182, 253, 256, 366], "propag": [53, 54], "natur": [53, 54, 172, 184], "323": 53, "533": 53, "536": 53, "sokolova09": [53, 157, 159], "marina": 53, "sokolova": 53, "gui": 53, "lapalm": 53, "systemat": 53, "task": [53, 107, 109, 211, 219, 220, 229, 234, 235, 236, 237, 238, 239, 240, 241, 244, 251, 252, 253, 254, 255, 256, 260, 261, 265, 266, 336, 342], "427": 53, "437": 53, "atour": 53, "iro": 53, "umontr": 53, "ca": 53, "rali": 53, "site": 53, "publi": 53, "sokolovalapalm": 53, "jipm09": 53, "syclspec": [53, 370], "subgroup": 53, "integr": [53, 172, 356, 366], "devic": [53, 175, 179, 191, 193, 199, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 336, 342, 366, 370, 373, 375], "modern": [53, 200], "sutton2018": [53, 332], "michael": 53, "sutton": 53, "tal": 53, "nun": 53, "amnon": 53, "barak": 53, "ipdp": 53, "2018": 53, "tan2005": [53, 106], "pang": 53, "ning": 53, "tan": 53, "steinbach": 53, "vipin": 53, "addison": 53, "weslei": 53, "longman": 53, "co": [53, 66, 79, 346], "inc": [53, 54], "boston": 53, "032132136": 53, "verma2014": [53, 100], "verma": 53, "deepika": 53, "namita": 53, "kakkar": 53, "neha": 53, "mehan": 53, "kd": 53, "engin": [53, 55, 70, 76, 82, 85, 90, 98, 99, 100, 104, 136, 138, 139, 140, 141, 173, 318], "5291": 53, "5294": 53, "wen2018": [53, 171, 352], "wen": 53, "zeyi": 53, "jiashuai": 53, "shi": 53, "qinbin": 53, "bingsheng": 53, "he": 53, "jian": 53, "thundersvm": 53, "cpu": [53, 55, 56, 57, 58, 59, 61, 62, 63, 66, 69, 70, 71, 72, 75, 76, 78, 79, 85, 91, 92, 97, 100, 101, 102, 104, 106, 112, 113, 115, 116, 119, 123, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 260, 318, 336, 342, 370, 376], "19": [53, 376], "wu04": [53, 172], "ting": 53, "wu": [53, 172], "rubi": 53, "weng": 53, "coupl": [53, 180], "975": 53, "1005": 53, "2004": 53, "zhu2005": [53, 58], "zhu": 53, "ji": [53, 97], "hui": 53, "zou": 53, "saharon": 53, "rosset": 53, "adaboost": [53, 60, 61], "As": [54, 178], "effort": [54, 200], "spent": 54, "mainten": 54, "rather": [54, 62, 66, 70, 78, 79, 85, 106, 110, 123, 143, 149, 181], "essenti": [54, 179, 183], "keep": [54, 155, 169], "abl": [54, 180], "quickli": 54, "understand": 54, "written": [54, 175, 180, 370, 375], "By": [54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 78, 79, 85, 95, 100, 101, 102, 103, 104, 105, 107, 109, 110, 115, 116, 117, 118, 125, 126, 127, 129, 132, 137, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 168, 169, 171, 172, 175, 180, 187, 188, 192, 195, 197, 198, 329, 370], "ensur": [54, 149, 151, 170, 188, 189, 192], "yourself": 54, "These": [54, 86, 96, 117, 121, 122, 139, 172, 176, 179, 182, 335, 359, 375], "cover": [54, 108, 111, 171, 175, 182, 192, 199], "our": 54, "along": [54, 100, 180], "To": [54, 56, 61, 62, 66, 68, 70, 71, 72, 74, 75, 78, 79, 81, 85, 90, 91, 92, 97, 99, 100, 102, 103, 106, 108, 110, 111, 112, 115, 123, 127, 143, 149, 151, 162, 170, 171, 172, 175, 176, 179, 180, 181, 182, 187, 188, 189, 192, 329, 330, 355, 366, 376], "contribut": [54, 58, 90, 106], "trail": [54, 104], "end": [54, 58, 59, 61, 81, 84, 97, 128, 130, 131, 138, 139, 149, 152, 153, 160, 179, 191, 199, 215, 318, 329, 352, 356, 370, 372], "alwai": [54, 103, 366], "put": [54, 70, 330], "surround": 54, "prefer": [54, 94, 96, 97], "tab": [54, 110], "indent": 54, "configur": [54, 56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 180, 186, 188, 320, 375], "your": [54, 56, 58, 60, 62, 63, 64, 65, 67, 68, 70, 78, 79, 82, 85, 86, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 115, 116, 117, 118, 121, 122, 125, 126, 129, 130, 131, 132, 133, 137, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 168, 169, 171, 172, 175, 177, 182, 189, 191, 192, 195, 197, 198, 200, 320, 356], "editor": 54, "instead": [54, 59, 61, 70, 85, 101, 102, 139, 162, 164, 181, 370, 375], "guarante": [54, 86], "fine": 54, "regardless": [54, 76, 182], "output": [54, 57, 59, 61, 90, 91, 94, 106, 122, 138, 141, 151, 165, 167, 170, 171, 175, 179, 180, 193, 194, 342, 370], "begin": [54, 58, 81, 84, 97, 128, 130, 131, 138, 139, 149, 152, 153, 160, 175, 215, 318, 324, 329, 352, 370, 372], "copyright": [54, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "notic": [54, 55, 56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 186, 188, 318], "warn": [54, 187], "need": [54, 59, 87, 88, 89, 100, 113, 115, 127, 130, 131, 136, 159, 169, 172, 175, 177, 180, 182, 192, 193, 366, 370, 372, 375, 376], "whenev": [54, 56, 123], "forward": 54, "suffici": [54, 149, 151, 154, 155, 170], "give": [54, 70, 71, 72, 74, 90, 91, 92, 115, 134, 330], "meaning": [54, 370], "abbrivi": 54, "word": [54, 106, 123], "letter": 54, "meaningless": 54, "nerr": 54, "abbrevi": 54, "ncompconn": 54, "wgcconnect": 54, "pcreader": 54, "pc": [54, 158], "thing": 54, "cstmrid": 54, "miss": [54, 85, 177, 178, 366], "pricecountread": 54, "numerror": 54, "num": 54, "widespread": 54, "lowercas": 54, "mai": [54, 55, 56, 58, 59, 61, 62, 66, 67, 68, 69, 71, 72, 75, 76, 78, 79, 85, 91, 92, 96, 97, 100, 101, 105, 106, 107, 109, 112, 113, 115, 119, 123, 124, 125, 126, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 175, 176, 177, 179, 180, 182, 184, 186, 187, 188, 191, 192, 193, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320, 324, 356, 366, 370, 372], "underscor": 54, "_": [54, 57, 59, 61, 66, 70, 71, 72, 74, 75, 76, 83, 85, 90, 91, 97, 101, 106, 112, 115, 123, 125, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 143, 149, 158, 159, 160, 164, 171, 326, 329, 330, 339, 345, 348], "kmeans_assign": 54, "capit": 54, "have": [54, 56, 67, 68, 70, 71, 82, 91, 92, 100, 106, 110, 113, 126, 130, 132, 149, 151, 154, 155, 158, 170, 172, 176, 179, 180, 181, 182, 184, 191, 192, 193, 208, 330, 332, 336, 353, 359, 366, 367, 368, 370, 375], "myclass": 54, "mystruct": 54, "mytyp": 54, "myenum": 54, "addtableentri": 54, "deletet": 54, "numblock": 54, "privat": [54, 370], "colsint": 54, "_tablenam": 54, "daysinaweek": 54, "7": [54, 112, 115, 171, 204, 208, 224, 247, 332, 344, 376], "mytabletyp": 54, "inttyp": 54, "doubletyp": 54, "numer": [54, 56, 58, 62, 63, 64, 65, 66, 67, 68, 70, 75, 78, 79, 81, 82, 83, 84, 85, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 163, 164, 168, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 192, 195, 197, 198, 361, 366, 370], "inputid": [54, 161], "add": [54, 71, 90, 91, 92, 106, 112, 115, 162, 171, 172, 180, 181, 187, 192, 193, 356], "step": [54, 57, 58, 61, 70, 71, 74, 85, 91, 92, 98, 106, 112, 115, 136, 139, 140, 141, 144, 171, 172, 180, 182, 192, 193, 324, 325, 329, 330, 332, 342, 366, 375], "prefix": 54, "sbjname": 54, "master": [54, 106, 149, 151, 170, 193], "etc": 54, "partialresult": [54, 64, 106, 117, 147], "renam": 54, "masterinputid": 54, "step2masterinputid": 54, "distributedpartialresultstep3id": 54, "step3localpartialresultid": 54, "partialsvdtableresultid": 54, "localsvdpartialresultid": 54, "step3localnumerictableinputid": 54, "step3localinputid": 54, "step3localcollectioninputid": 54, "step3localinputcollectionid": 54, "distributedinput": 54, "distributedpartialresult": 54, "step1": 54, "step2mast": [54, 64, 96, 103, 105, 113, 117, 121, 147, 155, 169], "step3loc": [54, 96, 155, 169], "1st": 54, "protect": 54, "omit": [54, 192, 362], "destructor": [54, 182], "friend": 54, "improv": [54, 70, 100, 124, 188, 189, 330], "readabl": 54, "hash_map": 54, "urltableproperti": 54, "propertiesmap": 54, "dal_my_defin": 54, "__my_defin": 54, "__file_name_h__": 54, "pragma": 54, "__x86_64__": 54, "linux": [54, 375, 376], "64bit": 54, "maco": [54, 318, 376], "os": 54, "__linux__": 54, "__apple__": 54, "_win64": 54, "winddow": 54, "_win32": 54, "32bit": 54, "__icl": 54, "__intel_compil": 54, "__intel_llvm_compil": 54, "llvm": 54, "daal_intel_cpp_compil": 54, "_msc_ver": 54, "readili": 54, "itself": [54, 70, 330, 370], "linu": 54, "torvald": 54, "sai": 54, "never": [54, 70], "try": [54, 171, 251, 252, 253, 254, 255, 256, 260, 352, 370], "explain": [54, 95, 96, 160, 195, 197, 198], "much": [54, 191], "better": [54, 60, 67, 68, 110, 366], "_working_": 54, "obviou": 54, "wast": 54, "badli": 54, "want": [54, 175, 177, 180], "tell": 54, "what": [54, 251, 252, 253, 254, 255, 256, 260, 370], "bodi": 54, "complex": [54, 90, 115, 149, 151, 170, 177, 191, 330, 366, 373], "someth": 54, "particularli": [54, 107], "clever": 54, "ugli": 54, "excess": 54, "head": [54, 370], "peopl": 54, "why": 54, "clarif": 54, "idea": [54, 70, 86], "certain": [54, 110, 126, 129, 130, 133, 138, 181, 191], "sentinel": 54, "track": [54, 155, 169, 183], "entri": [54, 105, 329], "we": [54, 180, 334], "go": [54, 375], "don": 54, "yet": [54, 182, 370], "know": 54, "_nentri": 54, "everi": [54, 70, 74, 100, 180, 359, 366, 370], "preced": [54, 370], "java": [54, 55, 56, 58, 59, 61, 62, 66, 69, 71, 72, 75, 76, 78, 79, 85, 91, 92, 97, 100, 101, 106, 110, 112, 113, 115, 119, 123, 125, 126, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 175, 176, 179, 182, 184, 186, 187, 188, 192, 318], "daal_deprec": 54, "virtual": [54, 180], "daal_deprecated_virtu": 54, "func": 54, "classmemb": 54, "daal_deprecated_us": 54, "newfunct": 54, "phrase": 54, "doxygen": 54, "removedfunct": 54, "old": 54, "oldfunct": 54, "appropri": [54, 60, 74, 100, 110, 157, 159, 177, 180, 182, 183, 192, 193, 195, 197, 198, 329, 353, 356], "doc": 54, "annot": 54, "befor": [54, 124, 152, 175, 182, 318], "classnam": 54, "pars": [54, 180], "correctli": [54, 157, 159, 160], "quotat": 54, "command": [54, 356, 375], "easier": 54, "reader": 54, "place": [54, 82, 86, 152], "narrowest": 54, "push_back": [54, 180], "brace": 54, "confin": 54, "strchr": 54, "str": 54, "outsid": 54, "loop": [54, 96, 105, 127, 139, 141, 180, 370], "invok": 54, "enter": 54, "ineffici": 54, "1000000": [54, 171], "foo": 54, "my": 54, "ctor": 54, "dtor": 54, "dosometh": 54, "hard": 54, "bar": 54, "hardcodedstr": 54, "caus": [54, 180, 187, 320], "bug": 54, "due": [54, 100, 106, 109, 149], "partial": [54, 64, 90, 95, 96, 99, 105, 113, 121, 128, 130, 131, 132, 139, 147, 192, 193, 343, 344, 373], "even": [54, 182], "chang": [54, 74, 144, 180, 182, 192, 360, 370], "difficult": 54, "termin": [54, 61, 73, 85, 90, 93, 102, 137, 144, 165, 167], "destroi": 54, "revers": [54, 180], "were": [54, 71, 157, 159], "sinc": [54, 185, 375], "undertermin": 54, "At": [54, 56, 57, 58, 59, 61, 70, 75, 76, 90, 94, 95, 96, 100, 110, 113, 115, 120, 121, 160, 165, 167, 171, 172, 195, 197, 198, 366], "run": [54, 82, 127, 139, 140, 149, 175, 185, 187, 188, 216, 222, 225, 226, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 318, 325, 370], "thread": [54, 86, 185, 188, 215, 356, 366, 376], "tri": [54, 70, 90], "therefor": [54, 56, 100, 103, 123, 175, 177, 184, 191, 199, 366], "fail": [54, 180], "might": [54, 100, 102, 110], "prior": [54, 67, 68, 120, 121, 122, 123], "occur": [54, 74, 106, 187, 373], "reccomend": 54, "sure": [54, 60, 182, 324], "happen": [54, 180], "singletonclass": 54, "inst": 54, "bad": [54, 106], "getinst": [54, 188], "impli": [54, 69, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320], "level": [54, 56, 74, 85, 100, 158, 165, 167, 175, 183, 193, 195, 253, 256, 330, 370, 375], "help": [54, 318, 329], "self": [54, 370], "modifi": [54, 134, 149, 175, 180, 182, 188, 192, 329], "len": 54, "respect": [54, 74, 85, 87, 88, 89, 97, 100, 102, 103, 129, 130, 132, 144, 146, 149, 158, 170, 171, 175, 176, 179, 180, 182, 187, 188, 191, 342, 355, 366], "state": [54, 68, 70, 87, 88, 89, 182, 334, 360, 370], "clearli": 54, "almost": 54, "getvalu": 54, "setvalu": 54, "val": 54, "_val": 54, "viral": 54, "appear": [54, 171, 352], "But": 54, "excel": 54, "_isiniti": 54, "_valu": 54, "calcvalu": 54, "symmetri": 54, "dealloc": [54, 100, 175, 182, 189], "bookkeep": 54, "ti": 54, "lifetim": [54, 180], "properli": [54, 370], "leak": 54, "filehold": 54, "_file": 54, "fclose": 54, "instruct": [54, 188, 356], "prioriti": 54, "lost": 54, "ptr": 54, "idiom": 54, "act": 54, "like": [54, 60, 74, 180, 353], "overload": [54, 362], "automat": [54, 56, 106, 112, 115, 140, 171, 177, 180, 181, 182, 366, 370], "autom": 54, "emphas": 54, "unwant": 54, "inexplicit": 54, "printm": 54, "deriv": [54, 56, 58, 60, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 82, 85, 86, 95, 96, 98, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 121, 122, 125, 126, 129, 130, 131, 132, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 177, 182, 185, 192, 195, 197, 198, 369], "forgotten": 54, "polymorph": 54, "behavior": [54, 182, 369], "Be": [54, 59, 366], "veri": [54, 60, 192], "cautiou": 54, "inlin": 54, "unexpect": 54, "especi": [54, 366], "unsign": 54, "max_capac": 54, "1000": [54, 216, 240, 241, 257], "enumer": [54, 74, 184, 369], "mynet": 54, "emaxus": 54, "255": 54, "emaxserv": 54, "prevent": [54, 187], "conflict": 54, "lea": 54, "confict": 54, "anywher": 54, "client_cod": 54, "nest": 54, "focus": 54, "promot": 54, "clariti": 54, "long": [54, 182], "length": [54, 136, 139, 140, 141], "longer": [54, 55, 56, 58, 59, 61, 62, 66, 69, 71, 72, 75, 76, 78, 79, 85, 91, 92, 97, 100, 101, 106, 112, 113, 115, 119, 123, 125, 126, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 175, 176, 179, 182, 184, 186, 187, 188, 192, 200], "40": [54, 94, 96], "break": 54, "maintain": [54, 180], "piec": 54, "harm": 54, "sweet": 54, "just": [54, 370], "proport": [54, 106], "conceptu": 54, "lot": 54, "ok": [54, 187], "shouldn": 54, "exce": [54, 85, 324], "wrong": 54, "think": 54, "human": 54, "brain": 54, "easili": [54, 101], "anyth": 54, "confus": 54, "brilliant": 54, "mayb": 54, "did": 54, "week": 54, "now": 54, "reli": [54, 160, 361], "evalu": [54, 74, 157, 158, 159, 160, 330], "tmp": 54, "express": [54, 71, 74, 91, 92, 115, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320, 324, 353], "decid": 54, "pre": [54, 63, 64, 65, 71, 74, 91, 92, 110, 112, 115, 116, 117, 118, 126, 132, 171, 172, 191], "post": [54, 75, 76], "ignor": [54, 67, 74, 136, 139, 141, 353], "form": [54, 56, 70, 74, 101, 107, 109, 114, 127, 133, 165, 177, 180, 192, 353], "often": [54, 74, 123, 181, 192, 329, 353], "becaus": [54, 56, 62, 70, 149, 171, 172, 177, 180, 191, 192, 329], "made": [54, 370], "could": [54, 107, 109, 336], "expens": 54, "behav": [54, 180], "power": [54, 70, 123, 127, 136, 138, 139, 140, 141, 149, 189, 191, 330], "tool": 54, "qualiti": [54, 55, 156, 173, 318, 370], "paradigm": 54, "debug": 54, "strictli": 54, "purpos": [54, 178, 185, 188, 189, 190, 320], "fat": 54, "suppos": 54, "nor": 54, "absolut": [54, 171, 320, 352, 372], "necessari": [54, 183, 191, 325, 370, 375], "field": [54, 109, 175, 186, 192, 370], "being": [54, 70, 102, 103, 113, 121, 131, 182, 195, 198, 330], "inappropri": 54, "_string": 54, "aaa": 54, "_foo": 54, "_ptra": 54, "_ptrb": 54, "easi": 54, "signal": 54, "indetermin": 54, "dispatch": [54, 188], "subclass": 54, "futur": [54, 55, 56, 58, 59, 61, 62, 66, 69, 70, 71, 72, 75, 76, 78, 79, 85, 91, 92, 97, 100, 101, 106, 112, 113, 115, 119, 123, 125, 126, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 175, 176, 179, 182, 184, 186, 187, 188, 192, 200], "modif": [54, 58, 106, 110, 180, 182, 192], "quietli": 54, "someon": 54, "against": [54, 172], "rais": 54, "fatal": 54, "failur": [54, 112, 115, 171, 172, 179, 187], "factori": 54, "explicit": [54, 106, 362], "duplic": [54, 181], "param": [54, 215, 223], "open": [54, 318, 356], "complic": 54, "flexibl": 54, "high": [54, 66, 100, 149, 151, 170, 175, 370], "obscur": 54, "consider": [54, 181, 183], "isol": 54, "tricki": 54, "carefulli": 54, "extra": [54, 58, 67, 70, 96, 100, 102, 110, 115, 172], "attent": 54, "messag": [54, 187], "emit": 54, "mistak": 54, "tweak": 54, "value_typ": 54, "three": [54, 155, 169, 180, 181, 184, 191, 329, 362, 366, 370], "some_namespac": 54, "everyth": 54, "modelintern": 54, "fooimpl": 54, "here": [54, 107, 109, 112, 114, 215, 329], "unifi": [54, 366], "impltyp": 54, "modelimpl": 54, "daal_c11_overrid": 54, "stand": 54, "secur": [54, 320], "lifecycl": [54, 182], "discuss": [54, 181], "explicitli": [54, 85, 129, 161, 182, 355, 362, 370], "catch": [54, 251, 252, 253, 254, 255, 256, 260], "upon": 54, "invalid": [54, 370], "statu": [54, 112, 115, 129, 171, 172, 180, 185, 186, 187], "recurs": [54, 70, 74, 330], "indefinit": 54, "error_handl": 54, "daal_assert": 54, "nrow": [54, 182], "di": 54, "ncol": 54, "numerictablefeatur": [54, 176], "_ddict": 54, "_arrai": 54, "types": 54, "getvectorupcast": 54, "getconversiondatatyp": 54, "lbuf": 54, "would": [54, 74, 100, 375], "justifi": 54, "converst": 54, "solut": [54, 171, 352], "context": [54, 176, 180, 372], "blockindex": [54, 68], "daal_check": 54, "int_max": 54, "unrel": 54, "1024": 54, "un": 54, "ragn": 54, "cannot": [54, 62, 369, 370], "workflow": [54, 57, 58, 59, 61, 70, 71, 72, 75, 76, 90, 91, 92, 100, 110, 113, 115, 120, 122, 161, 165, 167, 171, 172, 195, 196, 197, 198, 375], "getmaxel": 54, "elementsarrai": 54, "nelement": 54, "newdata": 54, "static_cast": [54, 244], "daal_malloc": [54, 189], "_size": 54, "errormemoryallocationfail": 54, "daal_fre": [54, 189], "olddata": 54, "doubt": 54, "race": 54, "alreadi": [54, 85, 106, 180, 182], "been": [54, 71, 91, 92, 160], "unnot": 54, "outcom": [54, 74, 75, 76, 191, 353], "bear": 54, "mind": 54, "environ": [54, 55, 190, 193, 318, 356, 375], "accord": [54, 60, 71, 74, 82, 91, 92, 100, 106, 172, 182, 190, 324, 329, 330, 352, 370, 374], "daal_check_malloc": 54, "daal_memcpy_": 54, "numberofel": 54, "errormemorycopyfailedintern": 54, "daal_calloc": 54, "service_scalable_calloc": 54, "overflow": 54, "daal_overflow_check_by_multipl": 54, "multiplier1": 54, "multiplier2": 54, "vulner": 54, "verifi": 54, "parti": 54, "overli": 54, "malform": 54, "printabl": 54, "symbol": [54, 200], "encount": [54, 112, 115, 171, 172], "insert": 54, "somewher": 54, "els": 54, "choleski": [55, 173, 318], "qr": [55, 112, 113, 173, 318], "quantil": [55, 70, 144, 173, 318], "solver": [55, 107, 109, 110, 115, 130, 134, 136, 138, 139, 140, 141, 318, 329, 352], "stump": [55, 57, 58, 59, 60, 61, 191, 318], "lasso": [55, 107, 191, 318], "elast": [55, 191, 318], "net": [55, 191, 318], "altern": [55, 138, 200, 318, 324, 370], "extract": [55, 180, 190, 205, 214, 229, 231, 244, 318, 361, 366, 370], "handl": [55, 180, 190, 318, 324], "callback": [55, 190, 318], "uncov": 56, "relationship": [56, 66, 107, 109, 112, 115, 334], "Its": [56, 70, 73, 93, 359], "basket": 56, "aim": [56, 142], "confid": [56, 57, 58, 59, 94, 96, 97, 143, 145, 158, 195], "apriori": 56, "let": [56, 61, 70, 85, 90, 107, 109, 112, 114, 123, 127, 180, 330, 342], "i_1": [56, 127, 130, 131, 132, 133, 139, 180], "i_2": [56, 130, 131, 132, 133, 139], "ldot": [56, 57, 58, 59, 60, 61, 65, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 95, 97, 99, 100, 101, 106, 107, 109, 110, 112, 113, 114, 115, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 136, 139, 140, 141, 143, 144, 145, 148, 149, 154, 157, 158, 159, 163, 164, 168, 171, 172, 180, 184, 193, 322, 324, 325, 326, 329, 330, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352], "i_m": [56, 130, 131, 132, 133], "item": [56, 95, 96, 97, 98, 99, 105, 197], "rightarrow": 56, "intersect": 56, "cap": 56, "emptyset": 56, "left": [56, 57, 58, 59, 66, 70, 71, 72, 75, 76, 84, 85, 90, 91, 97, 101, 115, 123, 128, 130, 131, 132, 138, 139, 140, 141, 158, 168, 169, 170, 180, 326, 329, 330, 339], "hand": [56, 149, 151, 170], "itemset": 56, "anteced": 56, "right": [56, 57, 58, 59, 66, 70, 71, 72, 75, 76, 84, 85, 90, 91, 97, 101, 115, 123, 128, 130, 131, 132, 138, 139, 140, 141, 158, 168, 169, 170, 320, 326, 329, 330, 339, 375], "consequ": 56, "t_1": 56, "t_2": 56, "t_n": 56, "percent": 56, "cup": [56, 325], "decompos": [56, 62, 151, 329], "stage": [56, 73, 85, 93, 94, 95, 96, 110, 113, 120, 121, 122, 157, 158, 159, 165, 167, 180, 191, 199, 318, 324, 329, 330, 342, 366, 370, 375], "involv": [56, 66, 100, 123, 144, 149], "ntransact": 56, "nuniqueitem": 56, "numerict": [56, 58, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 82, 85, 86, 95, 96, 98, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 121, 122, 125, 126, 129, 130, 131, 132, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 168, 169, 172, 176, 182, 183, 187, 195, 197, 198], "except": [56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 74, 75, 78, 79, 82, 85, 86, 95, 96, 98, 101, 102, 103, 104, 105, 107, 109, 110, 113, 114, 115, 116, 117, 118, 125, 126, 129, 130, 131, 132, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 185, 187, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "packedtriangularmatrix": [56, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 82, 85, 86, 95, 96, 98, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 125, 126, 129, 130, 131, 132, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 181, 184, 195, 197, 198], "packedsymmetricmatrix": [56, 62, 63, 64, 65, 67, 68, 70, 75, 78, 79, 82, 85, 86, 95, 98, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 125, 126, 129, 130, 131, 132, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 181, 184, 195, 197, 198], "algorithmfptyp": [56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172], "defaultdens": [56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 98, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 163, 164, 165, 167, 168, 169, 171, 172, 174], "minsupport": 56, "01": [56, 57, 58, 59, 61, 85, 94, 96, 136, 140, 216, 257], "minconfid": 56, "determin": [56, 60, 61, 100, 115, 123, 127, 141, 158, 172, 180, 182, 329, 332, 334, 342], "discoverrul": 56, "itemsetsord": 56, "itemsetsunsort": 56, "itemsetssortedbysupport": 56, "descend": [56, 74, 103, 146, 147, 148, 149, 329, 353], "rulesord": 56, "rulesunsort": 56, "rulessortedbyconfid": 56, "minitemsets": 56, "impos": 56, "maxitemsets": 56, "largeitemset": 56, "nlargeitemset": 56, "largeitemsetssupport": 56, "met": [56, 70, 85, 90, 330], "antecedentitemset": 56, "nantecedentitem": 56, "part": [56, 74, 95, 96, 99, 100, 105, 144, 200, 325, 342, 355, 366, 370], "conseqentitemset": 56, "nconsequentitem": 56, "nrule": 56, "posit": [56, 59, 62, 66, 69, 70, 75, 76, 100, 106, 126, 138, 143, 144, 145, 152, 157, 159, 322, 324, 325, 330], "homogennumerict": [56, 58, 62, 63, 64, 65, 67, 68, 70, 85, 87, 88, 89, 95, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 125, 126, 129, 137, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 168, 169, 172, 181, 182, 184, 195, 197, 198], "\u0441srnumerict": [56, 62, 145], "ascend": [56, 74, 164], "intend": [56, 60, 89, 106, 124, 191], "avoid": [56, 59, 61, 74, 136, 149, 151, 170, 171, 181, 344, 359, 366], "imposs": [56, 175], "amount": [56, 70, 85, 123, 149, 151, 170, 171, 175, 352], "insuffici": [56, 175], "assoc_rules_apriori_batch": 56, "assocrulesaprioribatch": 56, "overal": [56, 62, 66, 78, 79, 81, 85, 97, 105, 106, 110, 123, 143, 149, 151, 170], "soa": [56, 62, 66, 78, 79, 85, 106, 110, 123, 143, 149, 171, 181, 183], "vari": [56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 186, 188, 320], "factor": [56, 57, 58, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 90, 94, 95, 96, 97, 98, 99, 106, 116, 117, 118, 123, 143, 149, 151, 152, 154, 168, 170, 171, 186, 188, 197, 320, 329], "performanceindex": [56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 186, 188, 320], "20201201": [56, 62, 63, 64, 65, 66, 70, 78, 79, 81, 85, 97, 106, 116, 117, 118, 123, 143, 149, 151, 170, 171, 186, 188], "short": [57, 58], "varieti": [57, 58, 182, 192, 193], "noisi": [57, 58, 59, 178], "framework": [57, 59, 70, 71, 72, 74, 75, 76, 90, 91, 92, 127, 136, 138, 139, 140, 141, 171, 199, 330], "x_1": [57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 95, 100, 101, 106, 107, 109, 112, 114, 115, 119, 123, 125, 126, 130, 131, 143, 144, 145, 149, 157, 159, 163, 171, 172, 322, 324, 325, 326, 329, 330, 337, 338, 339, 340, 342, 343, 344, 349, 352, 372], "x_": [57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 95, 100, 101, 106, 107, 109, 112, 114, 119, 123, 125, 126, 130, 131, 132, 143, 144, 145, 149, 158, 163, 164, 171, 172, 322, 326, 329, 330, 337, 338, 339, 340, 344, 349, 352], "1p": [57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 100, 101, 106, 107, 109, 112, 114, 115, 119, 125, 126, 130, 131, 143, 144, 145, 149, 163, 171, 172, 322, 330, 337, 338, 339, 340, 349, 352], "x_n": [57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 100, 101, 106, 119, 123, 125, 126, 130, 131, 143, 144, 145, 149, 157, 159, 163, 171, 172, 322, 324, 325, 326, 329, 330, 337, 338, 339, 340, 342, 343, 344, 349, 352], "n1": [57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 100, 101, 106, 107, 109, 112, 114, 119, 125, 126, 130, 131, 143, 144, 145, 149, 163, 171, 172, 322, 330, 337, 338, 339, 340, 345, 346, 348, 349, 352], "np": [57, 58, 59, 61, 66, 69, 70, 71, 72, 74, 75, 76, 78, 79, 85, 90, 91, 92, 100, 101, 106, 107, 109, 112, 114, 119, 125, 126, 130, 131, 143, 144, 145, 149, 163, 171, 172, 322, 330, 337, 338, 339, 340, 349, 352], "y_1": [57, 58, 59, 61, 70, 71, 72, 74, 75, 76, 90, 91, 92, 95, 100, 101, 107, 109, 112, 114, 115, 130, 131, 157, 159, 171, 172, 330, 337, 338, 339, 340, 342, 343, 344, 352], "y_n": [57, 58, 59, 61, 70, 71, 72, 74, 75, 76, 90, 91, 92, 100, 112, 115, 130, 131, 157, 159, 171, 172, 330, 342, 343, 344, 352], "weak": [57, 58, 59, 60, 61], "learner": [57, 58, 59, 60, 61], "show": [57, 58, 61, 180, 182, 362, 366], "d_1": [57, 58, 106], "frac": [57, 58, 59, 61, 66, 70, 71, 72, 75, 76, 78, 79, 83, 84, 85, 90, 91, 92, 97, 101, 106, 107, 109, 110, 115, 119, 123, 125, 126, 127, 128, 130, 131, 132, 136, 138, 139, 140, 144, 145, 157, 158, 159, 160, 171, 172, 324, 326, 329, 330, 339, 342, 343, 344, 346, 349, 352], "h_t": [57, 58], "d_t": [57, 58, 70, 330], "alpha_t": [57, 58, 139], "d_": [57, 58, 70, 78, 79, 100, 330, 346], "exp": [57, 58, 59, 83, 85, 101, 339, 344], "z_t": [57, 58], "hypothesi": [57, 58, 59], "mathrm": [57, 58, 59, 61, 70, 72, 74, 75, 76, 85, 90, 91, 95, 96, 97, 99, 100, 103, 105, 115, 123, 130, 131, 132, 136, 138, 139, 140, 148, 171, 324, 325, 329, 330, 342, 352, 370, 372], "x_r": [57, 58, 59, 61, 70, 71, 72, 74, 75, 76, 90, 91, 92, 100, 115, 171, 330, 342, 352], "weaklearnertrain": [57, 58, 59, 61], "weaklearnerpredict": [57, 58, 59, 61], "accuracythreshold": [57, 58, 59, 61, 85, 102, 137, 158, 171, 172], "maxiter": [57, 58, 59, 61, 85, 90, 94, 96, 102, 171, 172], "orient": [57, 58, 59, 61, 62, 63, 64, 65, 70, 78, 79, 81, 83, 84, 85, 87, 88, 89, 94, 95, 96, 98, 99, 101, 110, 113, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 132, 136, 138, 139, 140, 143, 145, 152, 154, 155, 157, 158, 159, 163, 165, 167, 168, 169, 171], "adaboost_dense_batch": 57, "samm": [58, 60], "stagewis": 58, "exponenti": [58, 61], "real": [58, 180, 370, 372], "err": 58, "_t": 58, "sum_": [58, 66, 71, 72, 78, 79, 85, 91, 100, 107, 109, 114, 127, 130, 131, 132, 138, 140, 171, 324, 326, 329, 330, 342, 344, 346, 348, 352], "neq": [58, 130, 160], "underset": [58, 61, 75, 76, 97, 130, 131, 132, 138, 140, 171, 352], "argmax": [58, 61, 75, 76], "weigh": [58, 106], "p_k": [58, 130], "prob": 58, "_w": 58, "s_k": [58, 139], "z_i": [58, 158, 352], "z_": [58, 61, 158, 163], "i1": [58, 132, 158, 159], "ic": 58, "ik": [58, 78, 79, 100, 123, 133, 158, 163], "sammer": 58, "learningr": [58, 136], "nclass": [58, 59, 60, 61, 71, 75, 91, 100, 115, 120, 121, 122, 130, 159, 165, 171, 172, 195], "resultstocomput": [58, 67, 70, 100, 115, 126, 129, 130, 131, 132, 133, 146, 174], "64": [58, 67, 70, 100, 102, 110, 115, 129, 130, 131, 132, 133, 146, 172, 189, 375, 376], "bit": [58, 67, 70, 81, 87, 100, 102, 103, 110, 115, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 146, 172, 375, 376], "computeweaklearnerserror": 58, "weaklearnerserror": 58, "adaboost_samme_two_class_batch": 58, "adaboost_sammer_two_class_batch": 58, "adaboost_samme_multi_class_batch": 58, "adaboost_sammer_multi_class_batch": 58, "adaboostsammetwoclassbatch": 58, "adaboostsammertwoclassbatch": 58, "adaboostsammemulticlassbatch": 58, "adaboostsammermulticlassbatch": 58, "robust": [59, 143, 145, 330], "erfinv": 59, "erf": 59, "alpha_i": [59, 85, 171, 352], "h_i": [59, 90], "formul": [59, 335], "r_1": [59, 152, 153, 154, 155, 158, 184], "s_1": 59, "s_": [59, 70, 127, 136, 138, 139, 140, 329, 330], "With": [59, 71, 72, 180, 330], "w_i": [59, 72, 90, 106, 330], "r_i": [59, 184], "s_i": [59, 352], "differenti": [59, 90, 127], "equat": [59, 106, 107, 109, 112, 113, 114, 163], "dt": 59, "alpha": [59, 83, 85, 94, 96, 97, 110, 120, 121, 122, 123, 139, 144, 158, 171, 186, 352], "gamma": [59, 90, 102, 103, 106, 130, 131, 132, 141], "t_i": [59, 149, 329], "\u03bd": 59, "degener": [59, 61, 136], "r_": [59, 95, 97], "gini": [59, 70, 71, 74, 75, 165, 330], "newtonraphsonaccuracythreshold": 59, "raphson": 59, "underneath": [59, 363, 364], "newtonraphsonmaxiter": 59, "degeneratecasesthreshold": [59, 136], "brownboost_dense_batch": 59, "brownboostdensebatch": 59, "strong": 60, "slightli": 60, "guess": [60, 90], "usual": [60, 370], "focu": [60, 157, 159, 200], "logitboost": 60, "brownboost": 60, "getnumberofweaklearn": [60, 61], "sens": [61, 109], "wherea": 61, "y_": [61, 72, 95, 97, 101, 107, 109, 114, 125, 126, 128, 132, 158, 164, 330, 337, 338, 339, 340, 352], "w_": [61, 72, 85, 330], "ij": [61, 66, 78, 79, 85, 95, 100, 107, 109, 112, 114, 119, 125, 126, 130, 131, 132, 158, 164, 171, 326, 329, 343, 344, 349, 352], "f_j": [61, 74, 107, 109, 140, 158, 180], "p_j": 61, "p_i": [61, 71, 75, 330], "thr1": 61, "thr2": 61, "f_": [61, 83, 84, 180], "mj": 61, "approach": [61, 100, 101, 144, 175], "mk": [61, 345, 346, 348], "f_k": [61, 90, 158], "weightsdegeneratecasesthreshold": 61, "responsesdegeneratecasesthreshold": 61, "achiev": [61, 137, 149, 183, 370], "reach": [61, 70, 71, 72, 74, 75, 90, 100, 106, 325, 330], "logitboostmodel": 61, "logitboost_dense_batch": 61, "logitboostdensebatch": 61, "symmetr": [62, 78, 79, 130, 171, 181, 183, 184, 352], "definit": [62, 66, 69, 70, 90, 105, 119, 137, 139, 143, 145, 158, 160, 322, 326, 349, 365, 366, 369, 370, 372], "lower": [62, 125, 181, 184, 352, 370], "triangular": [62, 151, 152, 153, 154, 155, 181, 183, 184, 215], "conjug": [62, 329], "transpos": [62, 96, 99, 329], "stabil": 62, "superior": 62, "kalman": 62, "filtrat": 62, "ll": [62, 159], "choleskyfactor": 62, "upperpackedtriangularmatrix": [62, 181, 184], "cholesky_dense_batch": 62, "choleskydensebatch": 62, "ao": [62, 66, 78, 79, 85, 106, 110, 123, 143, 149, 181, 183], "singlepassdens": [63, 64, 65, 116, 117, 118], "sumdens": [63, 64, 65, 116, 117, 118, 126], "fastcsr": [63, 64, 65, 94, 96, 98, 99, 101, 116, 117, 118, 120, 121, 122], "singlepasscsr": [63, 64, 65, 116, 117, 118], "sumcsr": [63, 64, 65, 116, 117, 118], "csrnumerict": [63, 64, 65, 67, 68, 78, 79, 82, 85, 86, 95, 99, 101, 102, 103, 104, 105, 110, 113, 116, 117, 118, 125, 126, 129, 130, 131, 136, 137, 139, 140, 143, 144, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 181, 184, 195, 197], "west": [63, 64, 65, 116, 117, 118], "outputmatrixtyp": [63, 64, 65], "covariancematrix": [63, 64, 65], "correlationmatrix": [63, 64, 65], "nblock": [64, 65, 68, 95, 96, 99, 103, 105, 113, 117, 118, 121, 122, 147, 148, 151, 154, 155, 168, 169, 170, 193], "across": [64, 68, 71, 95, 96, 99, 103, 105, 113, 117, 121, 147, 149, 151, 155, 169, 170, 175, 193, 366, 373], "valud": [64, 65, 67, 68, 105, 116, 117, 118, 121, 155, 169], "computestep": [64, 95, 96, 103, 105, 113, 117, 121, 147, 155, 169, 193], "step1loc": [64, 95, 96, 103, 105, 113, 117, 121, 147, 155, 169], "schema": [64, 65, 68, 95, 99, 103, 105, 113, 117, 118, 121, 147, 148, 155, 169, 191, 193], "n_i": [64, 65, 99, 103, 105, 113, 117, 118, 121, 122, 147, 148, 154, 155, 168, 169, 193], "nobserv": [64, 65, 103, 117, 118], "crossproduct": [64, 65], "cross": [64, 65, 91, 96, 128, 135, 147, 148, 173, 174, 178, 193, 199], "arriv": [65, 113, 118, 122, 148, 154, 168, 180, 193], "initializationprocedur": [65, 118, 148], "procedur": [65, 70, 74, 86, 90, 100, 110, 114, 115, 118, 148, 180, 192, 324, 330], "extent": 66, "fluctuat": 66, "simultan": [66, 370, 374], "neg": [66, 70, 71, 72, 75, 76, 90, 115, 143, 145, 157, 159, 170, 329, 330, 352], "dimens": [66, 78, 79, 85, 100, 101, 119, 125, 126, 143, 144, 145, 149, 177, 189, 326, 329, 337, 338, 339, 340, 343, 344, 345, 346, 348], "v_": [66, 160, 326, 345, 346, 348], "ki": [66, 97, 326, 329], "kj": [66, 115, 326, 329], "overlin": [66, 70, 71, 72, 78, 79, 126, 139, 160, 326, 329, 330, 343, 344], "cor": [66, 78, 206, 248, 326], "c_": [66, 97, 144, 159, 325, 326, 329], "ii": [66, 159, 326, 329], "cdot": [66, 91, 97, 106, 128, 130, 139, 141, 149, 151, 152, 153, 170, 171, 324, 326, 329, 330, 344], "jj": [66, 138, 326, 329], "cov_dense_batch": [66, 201, 202, 245, 278, 327], "cov_csr_batch": 66, "covdensebatch": 66, "covcsrbatch": 66, "neighborhood": [67, 68, 332], "ly": [67, 68], "minobserv": [67, 68, 69, 322], "memorysavingmod": [67, 68, 90, 174], "up": [67, 68, 200, 318, 375], "worst": [67, 68], "howev": [67, 68, 78, 79, 152, 171, 175, 177, 181], "bitwis": [67, 70, 100, 102, 115, 126, 129, 130, 131, 132, 133, 146, 172], "OR": [67, 70, 100, 102, 115, 126, 129, 130, 131, 132, 133, 146, 172, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "computecoreindic": 67, "computecoreobserv": 67, "ncluster": [67, 102, 103, 104, 105], "coreindic": 67, "arbitrari": [67, 68, 180, 187, 324, 329, 374], "coreobserv": 67, "step1data": 68, "partialord": 68, "reconstruct": [68, 179], "transfer": [68, 99, 149, 151, 170, 193, 366, 370], "partialdata": [68, 96], "datacollect": [68, 85, 105, 158], "boundingbox": 68, "box": 68, "leftblock": 68, "rightblock": 68, "step3partialboundingbox": 68, "particip": 68, "geometr": 68, "repartit": 68, "step4partialord": 68, "step4partialsplit": 68, "partitioneddata": 68, "next": [68, 71, 74, 91, 92, 100, 105, 139, 149, 151, 170, 175, 180, 366], "larger": [68, 110, 171, 182], "step5partialboundingbox": 68, "partitionedhalodata": 68, "halo": 68, "partitionedhalodataindic": 68, "halodata": 68, "halodataindic": 68, "halodatablock": 68, "step6clusterstructur": 68, "step6finishedflag": 68, "finish": [68, 342], "step6nclust": 68, "step6queri": 68, "queri": [68, 70, 71, 72, 90, 100, 187, 330], "partialfinishedflag": 68, "finishedflag": 68, "step8inputclusterstructur": 68, "step8inputnclust": 68, "step8partialqueri": 68, "step8clusterstructur": 68, "step8finishedflag": 68, "step8nclust": 68, "step8queri": 68, "partialnclust": 68, "step9nclust": 68, "clusteroffset": 68, "step10inputclusterstructur": 68, "step10clusteroffset": 68, "step10clusterstructur": 68, "step10finishedflag": 68, "step10queri": 68, "step11inputclusterstructur": 68, "step11partialqueri": 68, "step11clusterstructur": 68, "step11finishedflag": 68, "step11queri": 68, "step12inputclusterstructur": 68, "step12partialord": 68, "assignmentqueri": 68, "partialassignmentqueri": 68, "step13assign": 68, "step13assignmentsqueri": 68, "further": [69, 74, 90, 134, 157, 159, 322, 334], "reachabl": [69, 322], "said": 69, "x_m": [69, 74, 324, 342], "z": [69, 85, 124, 130, 131, 158, 322, 337, 338, 339, 340, 352], "dbscan_dense_batch": 69, "dbscan_dense_distr": 69, "dbscandensebatch": 69, "dbscandensedistr": 69, "d_b": [70, 71, 72, 330], "t_b": [70, 72, 330], "test": [70, 71, 75, 76, 91, 92, 100, 218, 219, 222, 259, 260, 263, 330, 353], "x_t": [70, 330], "t_l": [70, 330], "t_r": [70, 330], "children": [70, 71, 91, 92, 330], "substitut": [70, 330, 362], "reflect": [70, 330], "delta": [70, 74, 76, 126, 330], "predefin": [70, 85, 90, 100, 171, 180, 330, 342, 352], "grow": [70, 74, 90, 100, 330], "fashion": [70, 330], "rel": [70, 330, 375], "j_t": [70, 330], "s_t": [70, 127, 136, 138, 139, 140, 141, 330], "maxleafnod": [70, 330], "capabl": [70, 180], "sequenc": [70, 86, 139, 140, 141, 171, 366, 370], "onc": [70, 100, 139, 188, 342, 366], "retriev": [70, 175, 176, 180, 181, 192, 362], "earlier": [70, 134, 189], "individu": [70, 158, 181, 329], "leapfrog": [70, 86, 87, 88, 89], "rightmost": 70, "demonstr": [70, 86, 180, 366, 375], "subsequ": [70, 86, 87, 88, 89], "skipahead": [70, 86, 87, 88, 89], "independ": [70, 76, 86, 97, 107, 109, 112, 114, 123, 145, 158, 178, 370], "setminu": 70, "oob": [70, 71, 72, 210, 211, 251, 252, 254, 255, 330], "hat": [70, 71, 72, 90, 149, 329, 330], "x_j": [70, 78, 100, 106, 171, 324, 330, 342, 352], "mda": [70, 330], "reason": [70, 180, 187, 200, 330, 366], "latter": [70, 115, 330], "pi": [70, 83, 85, 330], "e_b": [70, 330], "e_": [70, 74, 330], "Then": [70, 100, 325, 330, 343, 344], "binningstrategi": 70, "width": [70, 370], "maxbin": [70, 90], "shareptr": [70, 82, 85, 90, 98, 99, 100, 104, 136, 138, 139, 141], "mt2203": [70, 86], "featurespernod": [70, 90], "impuritythreshold": 70, "anymor": 70, "disabl": [70, 100, 188], "maxtreedepth": [70, 75, 76, 90], "minbins": [70, 90], "minimpuritydecreaseinsplitnod": 70, "minobservationsinleafnod": [70, 75, 76, 90], "minobservationsinsplitnod": 70, "minweightfractioninleafnod": 70, "ntree": 70, "observationspertreefract": [70, 90], "computeoutofbagerror": 70, "computeoutofbagerrorperobserv": 70, "777": [70, 87, 88, 89], "varimport": [70, 165, 167], "outofbagerror": 70, "computeoutofbagerroropt": 70, "variableimport": 70, "null": [70, 115, 126, 129, 136, 139, 146, 150, 168, 169, 172], "outofbagerrorperobserv": 70, "updatedengin": 70, "w_1": [71, 72, 330, 352], "w_n": [71, 72, 330, 352], "y_d": [71, 330], "w_d": [71, 330], "take": [71, 74, 107, 115, 130, 131, 143, 179, 180, 336, 343, 344], "misclassif": [71, 330], "ne": [71, 97, 330], "bigcup": [71, 72, 330], "createtre": [71, 91, 92], "addsplitnod": [71, 91, 92], "addleafnod": [71, 91, 92], "note": [71, 91, 92, 105, 106, 115, 138, 139, 146, 154, 155, 174, 180, 344], "proce": [71, 91, 92], "getmodel": [71, 91, 92, 112, 115, 171, 172], "boolean": [71, 74, 91, 92, 138, 353], "featurevalu": [71, 91, 92], "categor": [71, 74, 91, 92, 102, 103, 106, 115, 176, 177, 180, 366, 370], "exactli": [71, 74, 91, 92, 155, 169, 324, 353], "branch": [71, 74, 75, 76, 91, 92, 353], "featureindex": [71, 91, 92], "classlabel": [71, 91, 92], "df_cls_dense_batch_model_build": 71, "df_cls_traversed_model_build": 71, "dfclsdensebatchmodelbuild": 71, "dfclstraversedmodelbuild": 71, "votingmethod": 71, "df_cls_hist_batch": [71, 201, 245, 287, 331], "df_cls_dense_batch": [71, 201, 202, 287, 331], "df_cls_default_dense_batch": 71, "df_cls_hist_dense_batch": 71, "df_cls_traverse_model": [71, 201, 245], "dfclsdefaultdensebatch": 71, "dfclshistdensebatch": 71, "dfclstraversemodel": 71, "i_": [72, 139, 180, 330], "y_j": [72, 95, 101, 107, 109, 112, 114, 139, 171, 324, 330, 338, 340, 342, 352], "w_j": [72, 90, 330, 344], "b_i": [72, 330], "ib": [72, 330], "df_reg_hist_batch": [72, 201, 245, 289, 331], "df_reg_dense_batch": [72, 201, 202, 289, 331], "df_reg_default_dense_batch": 72, "df_reg_hist_dense_batch": 72, "df_reg_traverse_model": [72, 201, 245], "dfregdefaultdensebatch": 72, "dfreghistdensebatch": 72, "dfregtraversemodel": 72, "ootstrap": 73, "agg": 73, "regat": 73, "child": [73, 93], "hypercub": [74, 353], "frequent": [74, 353], "figur": [74, 353], "mention": [74, 353], "down": [74, 151, 170, 353], "repeat": [74, 85, 106, 180, 325, 353], "subtre": [74, 353], "gain": [74, 75, 90, 165], "midwai": 74, "m1": [74, 101, 337, 338, 339, 340, 345, 346, 348], "mp": [74, 101, 337, 338, 339, 340], "y_m": [74, 101, 337, 338, 339, 340], "exclud": [74, 106], "entir": [74, 100, 106, 143, 144, 154, 168, 180, 181, 373], "account": [74, 143], "examin": [74, 75, 90], "accomplish": 74, "reduc": [74, 75, 76, 101, 106, 158, 160, 175, 179, 184, 352, 374, 375], "rep": 74, "overfit": 74, "unprun": 74, "mispredict": 74, "fewer": [74, 370], "le": [74, 97], "smallest": [74, 144, 172], "disallow": 74, "\u03b4": [75, 76], "\u03c4": [75, 76], "phantom": 75, "0ex": 75, "d_v": [75, 76], "entropi": [75, 91, 128, 135, 173, 174], "similarli": [75, 180, 181, 182, 366], "infogain": [75, 165], "prune": [75, 76], "dataforprun": [75, 76], "labelsforprun": 75, "splitcriterion": [75, 165], "reducederrorprun": [75, 76], "dt_cls_dense_batch": 75, "dtclsdensebatch": 75, "dependentvariablesforprun": 76, "pruningfract": 76, "rest": [76, 85, 172, 332], "sharedptr": [76, 125, 126, 140, 146, 147, 148], "mt19937": [76, 82, 85, 86, 90, 98, 99, 100, 104, 136, 138, 139, 140, 141], "dt_reg_dense_batch": 76, "dtregdensebatch": 76, "jk": [78, 79, 100, 123], "correlationdist": 78, "lowerpackedsymmetricmatrix": [78, 79], "cor_dist_dense_batch": 78, "cordistdensebatch": 78, "cosinedist": 79, "cos_dist_dense_batch": 79, "cosdistdensebatch": 79, "success": [81, 187], "f_p": [81, 180], "mathbb": [81, 84, 133, 330, 336, 337, 338, 339, 340, 342, 352, 372], "geq": [81, 84, 85, 107, 114, 127, 130, 131, 163, 329], "uniformli": [82, 84, 86, 97], "cdf": 82, "bernoulli": 82, "tabletofil": [82, 86], "mergednumerict": [82, 86, 181, 184], "randomnumb": [82, 86], "gaussian": [83, 158], "\u03b1": [83, 171, 352], "\u03c3": 83, "dy": 83, "icdf": 83, "notin": 84, "posteriori": 85, "typic": [85, 161, 171, 175, 177, 180, 191, 192, 193, 195, 196, 197, 198, 370, 372, 374, 375], "hidden": [85, 370, 374], "serv": [85, 151, 370], "area": [85, 157], "underli": [85, 143, 144, 145, 176, 193, 366], "theta": [85, 90, 123, 127, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141], "latent": 85, "l_0": 85, "q": [85, 90, 107, 109, 114, 130, 151, 152, 153, 171, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 329, 352], "dummi": 85, "argument": [85, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 141, 160, 175, 179, 182, 187, 192, 195, 198, 362], "converg": [85, 127, 136, 138, 139, 140, 141], "gmm": 85, "multivari": [85, 142], "pd": 85, "theta_i": 85, "m_i": [85, 95, 99, 106], "sigma_i": 85, "alpha_1": 85, "alpha_k": [85, 123, 171, 352], "theta_1": [85, 128], "theta_k": [85, 131, 139], "ir": 85, "nxk": 85, "hg": [85, 139], "sigma_": [85, 329], "n_r": [85, 330], "lr": 85, "lh": 85, "m_": [85, 99], "lg": 85, "biernacki2003": 85, "maitra2009": 85, "ntrial": [85, 104], "niter": [85, 102, 127, 136, 137, 139, 140, 141], "regard": 85, "skip": [85, 86, 102, 106, 130, 131, 138, 332], "ncompon": [85, 146, 150, 160], "20": [85, 216, 217, 257, 258], "0e": [85, 171, 172], "04": [85, 209, 250, 376], "covariancestorag": 85, "storag": [85, 175, 179, 183, 184, 208, 360, 366], "diagon": [85, 129, 130, 133, 138, 143, 158, 168, 169, 170, 215, 329], "inputweight": 85, "inputmean": 85, "inputcovari": 85, "inputvalu": 85, "batchifac": 85, "regularizationfactor": 85, "ill": 85, "goalfunct": 85, "logarithm": [85, 115, 195], "em_gmm_dense_batch": 85, "emgmmdensebatch": 85, "precis": [86, 127, 157, 159], "nskip": [86, 87, 88, 89], "nthread": [86, 87, 88, 89], "overlap": 86, "stride": 86, "threadidx": [86, 87, 88, 89], "mcg59": 86, "59": 87, "congruenti": 87, "na": [87, 88, 89], "size_t": [87, 88, 89, 182, 220, 261], "period": [88, 89], "19937": 88, "6024": 89, "22203": 89, "processor": [89, 186, 188, 370, 376], "score": [90, 124, 157, 158, 159], "omega": 90, "twice": 90, "lambda": [90, 94, 96, 97, 110, 115, 138], "penal": [90, 107, 109, 114, 115], "norm": [90, 107, 109, 115, 138, 144, 324, 372], "approx": [90, 97], "g_i": [90, 136, 140], "shrinkag": 90, "g_j": [90, 140], "h_j": 90, "criteria": [90, 165, 167, 370], "exact": [90, 102, 143, 145, 180, 334], "inexact": [90, 102], "restrict": [90, 110, 188, 318, 321, 365, 369], "border": 90, "splitmethod": 90, "minsplitloss": 90, "slower": 90, "multinomi": [91, 115, 123], "devianc": 91, "ln": [91, 131], "p_": [91, 97, 130, 342], "highest": [91, 342], "gbt_cls_traversed_model_build": 91, "gbtclstraversedmodelbuild": 91, "crossentropi": 91, "numiter": [91, 92], "gbt_cls_dense_batch": 91, "gbtclsdensebatch": 91, "gbt_reg_traversed_model_build": 92, "gbtregtraversedmodelbuild": 92, "gbt_reg_dense_batch": 92, "gbtregdensebatch": 92, "recommend": [94, 95, 96, 97, 106, 139, 140, 144, 185, 194, 196], "nfactor": [94, 95, 96, 98, 99], "preferencethreshold": [94, 96], "illustr": [95, 96, 99, 113, 121, 175, 191, 193, 369], "graphic": [95, 96, 376], "x_2": [95, 372], "y_2": 95, "userspartialmodel": 95, "itemspartialmodel": 95, "n_j": [95, 123, 180], "step4loc": [96, 105], "fourth": 96, "previous": [96, 192, 324], "execut": [96, 106, 139, 187, 322, 324, 326, 329, 330, 342, 343, 344, 349, 362, 370, 374, 375], "partialmodel": [96, 99, 113, 121], "outputofstep1forstep2": [96, 99, 155, 169], "inputofstep2fromstep1": [96, 99, 155, 169], "lowerpackedtriangularmatrix": [96, 152, 154, 155, 169, 181, 184], "outputofstep2forstep4": 96, "merg": [96, 373], "previou": [96, 99, 105, 106, 127, 139, 192, 362], "Of": [96, 181, 183, 184], "kei": [96, 99, 105, 126, 146, 150, 155, 162, 169, 177, 181, 183, 318, 321], "outputofinitforcomputestep3": [96, 99], "global": [96, 244, 334], "outputofstep3forstep4": [96, 105], "inputofstep4fromstep2": 96, "outputofstep4forstep1": 96, "outputofstep4forstep3": 96, "ui": 97, "1i": [97, 159, 163], "uj": 97, "impl_als_dense_batch": 97, "impl_als_csr_batch": 97, "impl_als_csr_distr": 97, "implalsdensebatch": 97, "implalscsrbatch": 97, "implalscsrdistr": 97, "fullnus": 99, "diagram": [99, 175, 182, 193, 366], "datacolumnslic": 99, "m_j": [99, 126], "m_1": 99, "datarowslic": 99, "x_0": 100, "n_0": 100, "closest": [100, 106, 324, 342, 370], "cut": [100, 355], "hyperplan": [100, 171, 352, 355], "deal": [100, 180, 181, 184, 320], "ever": 100, "heurist": 100, "median": [100, 144], "explor": [100, 342], "progress": [100, 185, 342], "_metric": 100, "datauseinmodel": 100, "donotus": [100, 110], "dous": [100, 110], "reorder": 100, "computeindicesofneighbor": 100, "computedist": 100, "voteweight": 100, "voteuniform": 100, "votedist": 100, "closer": [100, 106], "computeindicesofneigtbor": 100, "kdtree_knn_dense_batch": 100, "bf_knn_dense_batch": 100, "kdtreeknndensebatch": 100, "bfknndensebatch": 100, "computationmod": [101, 174], "matrixmatrix": [101, 174], "vectorvector": 101, "matrixvector": 101, "rowindexx": 101, "rowindexi": 101, "rowindexresult": 101, "locat": [101, 119, 143, 145, 180, 375], "linear_kernel_dense_batch": [101, 201, 202, 245, 294, 336], "kernel_func_lin_dense_batch": 101, "kernel_func_lin_csr_batch": 101, "kernelfunclindensebatch": 101, "kernelfunclincsrbatch": 101, "rbf_kernel_dense_batch": [101, 201, 202, 245, 298, 336], "kernel_func_rbf_dense_batch": 101, "kernel_func_rbf_csr_batch": 101, "kernelfuncrbfdensebatch": 101, "kernelfuncrbfcsrbatch": 101, "inputcentroid": [102, 103, 105], "lloydcsr": [102, 103], "distancetyp": [102, 103], "assignflag": [102, 103], "resultstoevalu": [102, 165, 172], "computecentroid": 102, "computeassign": 102, "computeexactobjectivefunct": 102, "objectivefunct": [102, 103], "partialsum": [103, 117, 118], "partialobjectivefunct": 103, "partialcandidatesdist": 103, "partialcandidatescentroid": 103, "partialresut": [103, 105], "step2comput": 103, "step1comput": 103, "finalizecomput": [103, 192, 193], "deterministiccsr": [104, 105], "randomdens": [104, 105, 174], "randomcsr": [104, 105], "plusplusdens": [104, 105], "pluspluscsr": [104, 105], "parallelplusdens": [104, 105], "parallelpluscsr": [104, 105], "oversamplingfactor": [104, 105, 106], "nround": [104, 105, 106], "round": [104, 105, 106], "step2loc": 105, "step3mast": 105, "forth": [105, 366], "step5mast": 105, "nrowstot": 105, "firstiter": 105, "outputforstep5requir": 105, "parrallelplu": 105, "partialcentroid": 105, "inputofstep2": 105, "internalinput": 105, "outputofstep2forstep3": [105, 155, 169], "accumul": [105, 136, 183], "outputofstep2forstep5": 105, "candid": [105, 106], "inputofstep3fromstep2": [105, 155, 169], "outputofstep3forstep5": 105, "inputofstep4fromstep3": 105, "outputofstep4": 105, "ad": [105, 149, 176, 180, 191, 370], "inputofstep5fromstep2": 105, "inputofstep5fromstep3": 105, "radiu": 106, "c_1": [106, 157, 158, 159, 180, 324, 325], "c_k": [106, 158, 180, 324, 325], "\u03c6": 106, "center": [106, 126, 150, 329], "draw": 106, "resum": [106, 127], "desir": [106, 180, 366, 375], "c_i": [106, 159], "i\u03f5x": 106, "goal": [106, 370], "d_2": 106, "\u03b3": 106, "impact": 106, "p_1": 106, "p_2": 106, "x_k": [106, 171, 352], "distant": [106, 142, 342], "gather": [106, 149, 151, 170, 374], "local": [106, 149, 151, 170, 244, 366], "flow": [106, 139, 175, 182, 366, 370, 374], "kmeans_dense_batch": 106, "kmeans_csr_batch": 106, "kmeans_dense_distr": 106, "kmeans_csr_distr": 106, "kmeansdensebatch": 106, "kmeanscsrbatch": 106, "kmeansdensedistr": 106, "kmeanscsrdistr": 106, "x_p": [107, 109, 112, 114, 115], "explanatori": [107, 109, 112, 115], "penalti": [107, 109, 110], "situat": [107, 149, 151, 170, 177], "y_k": [107, 109, 112, 114, 139, 171, 352], "l_1": [107, 109, 110], "l_2": [107, 324, 372], "beta_": [107, 109, 112, 113, 114, 158], "0j": [107, 109, 112, 113, 114, 130, 131, 158], "1j": [107, 109, 110, 112, 114], "pj": [107, 109, 112, 114], "1k": [107, 109, 110, 114, 345, 346, 348], "nk": [107, 109, 114, 159, 345, 346, 348], "beta": [107, 109, 112, 115, 157, 159, 163, 186, 191], "2n": [107, 109, 132, 352], "qj": [107, 109, 114], "iq": [107, 109, 114, 130], "lambda_": [107, 109, 110], "2j": [107, 110], "beta_j": [107, 109], "relev": [109, 160], "few": 109, "overcom": [109, 114], "multicollinear": [109, 114], "grammatrix": [110, 132], "gram": [110, 132], "choss": 110, "interceptflag": [110, 112, 113, 115, 130, 131, 132, 158], "lassoparamet": 110, "lambda_i": 110, "lambda_j": [110, 113, 114], "lambda_1": [110, 113, 115, 130, 131], "lambda_k": [110, 113, 329], "optimizationsolv": [110, 115], "optresulttocomput": 110, "computegrammatrix": 110, "datauseincomput": 110, "permiss": [110, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 375], "overwrit": [110, 139, 192], "penaltyl1": [110, 115, 130, 131, 132, 174], "umer": 110, "veriabl": 110, "penaltyl2": [110, 115, 130, 131, 132], "lambda_2": [110, 115, 130, 131], "21": 110, "2k": 110, "compromis": 110, "lasso_reg_dense_batch": 110, "lassoregdensebatch": 110, "elastic_net_dense_batch": 110, "elasticnetdensebatch": 110, "residu": [110, 158], "gg": [112, 114], "setbeta": [112, 115], "intercept": [112, 115, 132, 222, 263], "getstatu": [112, 115, 171, 172, 180, 193], "daal_nothrow_except": [112, 115, 171, 172], "macro": [112, 115, 159, 171, 172], "lin_reg_model_build": 112, "linregmodelbuild": 112, "qrdens": 113, "ridgeparamet": 113, "dependentvari": [113, 130, 131, 132, 198], "0_j": 113, "lin_reg_norm_eq_dense_batch": 113, "lin_reg_qr_dense_batch": 113, "ridge_reg_norm_eq_dense_batch": 113, "lin_reg_norm_eq_dense_onlin": 113, "lin_reg_qr_dense_onlin": 113, "ridge_reg_norm_eq_dense_onlin": 113, "lin_reg_norm_eq_dense_distr": 113, "lin_reg_qr_dense_distr": 113, "ridge_reg_norm_eq_dense_distr": 113, "linregnormeqdensebatch": 113, "linregqrdensebatch": 113, "ridgeregnormeqdensebatch": 113, "linregnormeqdenseonlin": 113, "linregqrdenseonlin": 113, "ridgeregnormeqdenseonlin": 113, "linregnormeqdensedistr": 113, "linregqrdensedistr": 113, "ridgeregnormeqdensedistr": 113, "x_ij": [114, 130, 131], "\u03bb_j": 114, "posterior": 115, "00": [115, 130], "dot": [115, 336, 372], "0p": 115, "k0": 115, "iterative_solv": 115, "formula": [115, 160, 326, 344], "log_reg_model_build": 115, "logregmodelbuild": 115, "theta_j": [115, 123, 130, 131, 132], "sgd": [115, 141], "adagrad": [115, 136], "lbfg": [115, 139], "broyden": [115, 127, 135, 173], "fletcher": [115, 127, 135, 173], "goldfarb": [115, 127, 135, 173], "shanno": [115, 127, 135, 173], "computeclasseslabel": 115, "computeclassesprob": 115, "computeclasseslogprob": 115, "logprob": [115, 195], "log_reg_dense_batch": 115, "log_reg_binary_dense_batch": 115, "logregdensebatch": 115, "logregbinarydensebatch": 115, "estimatestocomput": [116, 117, 118], "estimatesal": [116, 117, 118], "estimatesminmax": [116, 117, 118], "estimatesmeanvari": [116, 117, 118], "sumsquar": [116, 117, 118, 181], "sumsquarescent": [116, 117, 118], "secondorderrawmo": [116, 117, 118], "standarddevi": [116, 117, 118], "partialminimum": [117, 118], "partialmaximum": [117, 118], "partialsumsquar": [117, 118], "partialsumsquarescent": [117, 118], "six": 117, "dispers": 119, "smash": [119, 349], "displaystyl": [119, 349], "min_i": [119, 349], "max_i": [119, 349], "sum_i": [119, 349], "s_2": [119, 349], "a_2": [119, 349], "sdm": [119, 349], "k_2": [119, 349], "stdev": [119, 349], "low_order_moms_dense_batch": 119, "low_order_moms_csr_batch": 119, "low_order_moms_dense_onlin": 119, "low_order_moms_csr_onlin": 119, "low_order_moms_dense_distr": 119, "low_order_moms_csr_distr": 119, "lowordermomsdensebatch": 119, "lowordermomscsrbatch": 119, "lowordermomsdenseonlin": 119, "lowordermomscsronlin": 119, "lowordermomsdensedistr": 119, "lowordermomscsrdistr": 119, "priorclassestim": [120, 121, 122], "imagin": [120, 121, 122, 123], "occurr": [120, 121, 122, 123, 145], "trainin": 121, "medic": 123, "diagnosi": 123, "spite": 123, "ip": [123, 132, 158], "frequenc": [123, 139], "n_": 123, "mn_naive_bayes_dense_batch": 123, "mn_naive_bayes_csr_batch": 123, "mn_naive_bayes_dense_onlin": 123, "mn_naive_bayes_csr_onlin": 123, "mn_naive_bayes_dense_distr": 123, "mn_naive_bayes_csr_distr": 123, "mnnaivebayesdensebatch": 123, "mnnaivebayescsrbatch": 123, "mnnaivebayesdenseonlin": 123, "mnnaivebayescsronlin": 123, "mnnaivebayesdensedistr": 123, "mnnaivebayescsrdistr": 123, "feed": [124, 329], "linearli": 125, "_j": [125, 126, 138, 158, 164, 344], "lowerbound": 125, "upperbound": 125, "low_order_mo": [125, 126], "normalizeddata": [125, 126], "minmax_dense_batch": 125, "minmaxdensebatch": 125, "omn": 126, "doscal": 126, "sigma_j": [126, 158], "zscore_dense_batch": 126, "zscoredensebatch": 126, "theta_": [127, 130, 131, 135, 136, 137, 138, 139, 140], "argmin": [127, 128, 135], "f_i": [127, 130, 131, 132, 133, 140, 180], "smooth": [127, 128, 129, 130, 131, 132, 133, 138, 140], "present": [127, 370], "intrins": [127, 136, 137, 138, 140, 141], "s_0": 127, "i_b": 127, "i_j": 127, "nabla": [127, 128, 130, 131, 132, 133, 139, 141], "_d": 127, "lebesgu": [127, 136, 138, 139, 140, 141], "theta_t": [127, 136, 138, 140], "exit": 127, "optionalresultrequir": [127, 137], "theta_p": [128, 131, 132], "ccc": [128, 130, 139], "ddot": [128, 130, 139], "proxim": [128, 129, 130, 131, 132, 133], "prox": [128, 130, 131, 132, 138, 140], "eta": [128, 136, 138, 140, 141], "_2": [128, 130, 131, 132], "lipschitz": [128, 129, 130, 131, 132, 133, 140], "constantoflipschitz": [128, 129, 140], "nonsmoothtermvalu": [129, 130, 131, 132, 133], "proximalproject": [129, 130, 131, 132, 133], "lipschitzconst": [129, 130, 131, 132, 133, 140], "gradientovercertainfeatur": [129, 130, 133], "hessianovercertainfeatur": [129, 130, 133], "proximalprojectionofcertainfeatur": [129, 130, 133], "valueidx": 129, "nonsmoothtermvalueidx": 129, "gradientidx": 129, "hessianidx": 129, "proximalprojectionidx": 129, "lipschitzconstantidx": 129, "gradientovercertainfeatureidx": 129, "hessianovercertainfeatureidx": 129, "proximalprojectionovercertainfeatureidx": 129, "tj": 130, "p_t": 130, "f_t": 130, "t0": 130, "z_j": 130, "i_r": [130, 131, 132], "g_t": [130, 136, 140], "l_": 130, "vdot": 130, "pq": 130, "g_": [130, 136], "tp": [130, 157, 159], "p_p": 130, "theta_0": [130, 131, 132, 137, 140], "numberofterm": [130, 131, 132], "batchindic": [130, 131, 132, 136, 139, 140, 141], "lbfgs_cr_entr_loss_dense_batch": 130, "z_k": 131, "sgd_log_loss_dense_batch": 131, "2m": [132, 139], "i_k": 132, "ndependentvari": 132, "mse_dense_batch": 132, "msedensebatch": 132, "nabla_i": 133, "abil": [134, 360, 366], "presenc": 135, "g_0": [136, 140], "equiv": [136, 140, 141, 336, 342], "g_1": 136, "g_p": 136, "optionaldataid": [136, 139, 140], "gradientsquaresum": 136, "batchsiz": [136, 139, 141], "128": [136, 141], "adagrad_dense_batch": 136, "adagrad_opt_res_dense_batch": 136, "adagraddensebatch": 136, "adagradoptresdensebatch": 136, "inputargu": 137, "optionalargu": 137, "statement": 137, "e5": 137, "optionalresult": 137, "remaind": 138, "divis": [138, 189, 370], "mod": 138, "steplengthsequ": [138, 139], "ep": 138, "nfeatur": [138, 160], "infin": 138, "cyclic": [138, 139], "skipthefirstcompon": 138, "cd_dense_batch": 138, "cddensebatch": 138, "curvatur": 139, "s_j": [139, 324], "buffer": [139, 180, 182, 189, 374], "2l": 139, "i_h": 139, "b_h": 139, "i_l": 139, "correctionpairbatchs": 139, "lk": 139, "unchang": 139, "rho": 139, "bfg": 139, "correctionpair": 139, "correctionindic": 139, "averageargumentliter": 139, "correctionpairindic": 139, "lbfgs_dense_batch": 139, "lbfgs_opt_res_dense_batch": 139, "lbfgsdensebatch": 139, "lbfgsoptresdensebatch": 139, "w_t": 140, "eta_j": 140, "gradientt": 140, "learningratesequ": [140, 141], "diminish": 140, "saga_dense_batch": 140, "saga_logistic_loss_dense_batch": 140, "sagadensebatch": 140, "sagalogisticlossdensebatch": 140, "minibatch": [141, 174], "eta_t": 141, "conserv": 141, "gamma_t": 141, "v_t": [141, 158, 170], "conservativesequ": 141, "innerniter": 141, "9": [141, 204, 247, 332], "sgd_dense_batch": 141, "sgd_mini_dense_batch": 141, "sgd_moment_dense_batch": 141, "sgd_moment_opt_res_dense_batch": 141, "sgddensebatch": 141, "sgdminidensebatch": 141, "sgdmomentdensebatch": 141, "sgdmomentoptresdensebatch": 141, "abnorm": [142, 145], "univari": 142, "alpha_n": [143, 145], "m_n": [143, 145], "sigma_n": [143, 145], "scatter": [143, 145], "out_detect_mult_dense_batch": 143, "outdetectmultdensebatch": 143, "benefit": [143, 151, 170], "5p": 144, "med": 144, "wise": 144, "mahalanobi": 144, "d_i": 144, "discrep": 144, "npr": 144, "chi_": 144, "percentil": [144, 158], "chi": 144, "freedom": 144, "hr": 144, "3p": 144, "initializationmethod": 144, "baconmedian": 144, "05": [144, 158], "One": [144, 172, 177, 370], "tail": [144, 370], "tolerancetoconverg": 144, "005": 144, "out_detect_bacon_dense_batch": 144, "outdetectbacondensebatch": 144, "adjust": [145, 180], "out_detect_uni_dense_batch": 145, "outdetectunidensebatch": 145, "svddens": [146, 147, 148, 149, 150], "zscore": [146, 158], "p_r": [146, 149, 150, 160], "isdeterminist": 146, "datafortransform": [146, 150], "whiten": [146, 150], "pleas": [146, 180], "nobservationscorrel": [147, 148], "crossproductcorrel": [147, 148], "sumcorrel": [147, 148], "sumsvd": [147, 148], "sumsquaressvd": [147, 148], "auxiliarydatasvd": 147, "transmit": [147, 155, 169], "nobservationssvd": [147, 148], "orthogon": [149, 151, 152, 153, 170, 355], "redund": [149, 332], "hoc": 149, "paper": 149, "sgn": [149, 329, 372], "max_": [149, 324, 325, 329, 342], "signum": [149, 329], "pca_cor_csr_batch": 149, "pca_svd_dense_batch": 149, "pca_cor_dense_onlin": 149, "pca_cor_csr_onlin": 149, "pca_svd_dense_onlin": 149, "pca_cor_dense_distr": 149, "pca_cor_csr_distr": 149, "pca_svd_dense_distr": 149, "pcacordensebatch": 149, "pcacorcsrbatch": 149, "pcasvddensebatch": 149, "pcacordenseonlin": 149, "pcacorcsronlin": 149, "pcasvddenseonlin": 149, "pcacordensedistr": 149, "pcacorcsrdistr": 149, "pcasvddensedistr": 149, "setnormalizationflag": 149, "numerictableifac": [149, 181], "auxiliari": [149, 151, 170], "hide": [149, 151, 170, 370], "latenc": [149, 151, 170], "slow": [149, 151, 170], "load": [149, 151, 170, 180, 193, 215, 366, 375], "prefetch": [149, 151, 170], "becom": [149, 151, 170, 177, 193, 370], "bottleneck": [149, 151, 170], "pr": 150, "ncolumn": [150, 182], "transformeddata": 150, "pca_transform_dense_batch": 150, "pcatransformdensebatch": 150, "pivot": 151, "xp": 152, "rectangular": [152, 153, 170], "q_1": [152, 153, 154, 155], "q_2": [152, 153], "bmatrix": [152, 153], "permutedcolumn": 152, "matrixq": [152, 154, 155], "matrixr": [152, 154, 155], "permutationmatrix": 152, "pivoted_qr_dense_batch": 152, "pivotedqrdensebatch": 152, "qr_dense_batch": 153, "qr_dense_onlin": 153, "qr_dense_distr": 153, "qrdensebatch": 153, "qrdenseonlin": 153, "qrdensedistr": 153, "submatrix": [154, 168], "outputofstep1forstep3": [155, 169], "come": [155, 169, 183], "deliv": [155, 169], "inputofstep3fromstep1": [155, 169], "conveni": 156, "c2": 157, "recal": [157, 159], "qualitymetricsid": [157, 158, 159, 160, 161], "confusionmatrix": [157, 159], "recogn": [157, 159], "tn": [157, 159], "fp": [157, 159], "incorrectli": [157, 159], "fn": [157, 159], "under": [157, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 318], "curv": 157, "auc": 157, "c_2": [157, 180], "predictedlabel": [157, 159], "groundtruthlabel": [157, 159], "binarymetr": 157, "fscore": 157, "svm_two_class_metrics_dense_batch": 157, "svmtwoclassmetricsdensebatch": 157, "ht": 158, "variou": [158, 187, 318, 365, 366], "singlebeta": 158, "groupofbeta": 158, "around": 158, "erm": 158, "rm": 158, "sigma_1": 158, "sigma_k": [158, 329], "jt": 158, "c_j": [158, 180, 324], "\u03bd_t": 158, "_1": [158, 329], "_k": 158, "erv": 158, "regss": 158, "resss": 158, "tss": 158, "tt": 158, "r_k": [158, 160], "2_j": 158, "f_1": [158, 180], "p_0": 158, "expectedrespons": 158, "linear_regress": [158, 222, 263], "predictedrespons": 158, "signific": [158, 184], "001": [158, 171, 217, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 258, 268], "betacovari": 158, "confidenceinterv": 158, "inverseofxtx": 158, "tx": 158, "predictedreducedmodelrespons": 158, "numbeta": 158, "numbetareducedmodel": 158, "expectedmean": 158, "expectedvari": 158, "determinationcoeff": 158, "fstatist": 158, "lin_reg_metrics_dense_batch": 158, "linregmetricsdensebatch": 158, "c_l": [159, 324], "_i": [159, 329, 372], "fn_i": 159, "micro": 159, "_m": [159, 329], "1l": 159, "il": [159, 345, 346, 348], "ni": [159, 163], "usedefaultmetr": [159, 161], "multiclassmetr": 159, "averageaccuraci": 159, "errorr": 159, "microprecis": 159, "microrecal": 159, "microfscor": 159, "macroprecis": 159, "macrorecal": 159, "macrofscor": 159, "svm_multi_class_metrics_dense_batch": 159, "svmmulticlassmetricsdensebatch": 159, "e_i": [160, 370], "radio": 160, "explainedvariancemetr": 160, "meet": [160, 163, 192], "e_0": 160, "e_k": 160, "That": 160, "incorrect": 160, "explainedvari": 160, "explainedvariancesratio": 160, "noisevari": 160, "pca_metrics_dense_batch": 160, "pcametricsdensebatch": 160, "qualit": [161, 370], "resultid": 161, "regist": [162, 185], "inputalgorithm": 162, "inputdata": [162, 192], "analyz": [163, 177], "beta_1": 163, "beta_m": 163, "xi_i": 163, "beta_k": 163, "quantileord": 163, "quantiles_dense_batch": 163, "quantilesdensebatch": 163, "radix": 164, "sorteddata": 164, "31": 164, "quick": [164, 318, 319], "sorting_dense_batch": 164, "sortingdensebatch": 164, "decision_tre": 165, "computeclasslabel": [165, 172], "computeclassprob": [165, 195], "stump_cls_gini_dense_batch": 165, "stump_cls_infogain_dense_batch": 165, "stumpclsginidensebatch": 165, "stumpclsinfogaindensebatch": 165, "stump_reg_mse_dense_batch": 167, "stumpregmsedensebatch": 167, "leftsingularmatrix": [168, 169], "requiredinpackedform": [168, 169], "notrequir": [168, 169], "rightsingularmatrix": [168, 169], "singularvalu": [168, 169], "broad": 170, "svd_dense_batch": 170, "svd_dense_onlin": 170, "svd_dense_distr": 170, "svddensebatch": 170, "svddenseonlin": 170, "svddensedistr": 170, "conjunct": 171, "variant": 171, "q_": [171, 329, 352], "wss": [171, 352], "setsupportvector": 171, "setclassificationcoeffici": 171, "setsupportindic": 171, "setbia": 171, "svm_two_class_model_build": 171, "svmtwoclassmodelbuild": 171, "caches": 171, "8000000": 171, "doshrink": [171, 174], "kernelifac": 171, "svm_two_class_boser_dense_batch": 171, "svm_two_class_boser_csr_batch": 171, "svm_two_class_thunder_csr_batch": [171, 201, 202], "svmtwoclassboserdensebatch": 171, "svmtwoclassbosercsrbatch": 171, "svmtwoclassthunderdensebatch": 171, "svmtwoclassthundercsrbatch": 171, "greatli": 171, "fulli": [171, 366], "util": [171, 190, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "permit": [172, 192], "turn": 172, "settwoclassclassifiermodel": 172, "svm_multi_class_model_build": 172, "svmmulticlassmodelbuild": 172, "votebas": 172, "pmethod": 172, "tmethod": 172, "oneagainston": 172, "computedecisionfunct": 172, "decisionfunct": 172, "svm_multi_class_boser_csr_batch": 172, "svm_multi_class_boser_dense_batch": 172, "svm_multi_class_thunder_csr_batch": [172, 201, 202], "svmmulticlassbosercsrbatch": 172, "svmmulticlassboserdensebatch": 172, "svmmulticlassthundercsrbatch": 172, "svmmulticlassthunderdensebatch": 172, "sent": 175, "persist": [175, 179], "traffic": [175, 179], "footprint": [175, 179, 184, 191], "zlib": 175, "lzo": 175, "rle": 175, "bzip2": 175, "compressionstream": 175, "decompressionstream": 175, "compressor": [175, 179], "decompressor": [175, 179], "stream": [175, 177, 180, 183, 366, 373], "copycompressedarrai": 175, "getcompressedblockss": 175, "getcompressedblockscollect": 175, "unlik": [175, 191, 192], "copydecompressedarrai": 175, "getdecompressedblockss": 175, "getdecompressedblockscollect": 175, "setinputdatablock": 175, "isoutputdatablockful": 175, "getusedoutputdatablocks": 175, "overrid": [175, 180], "src": [175, 176, 179, 180, 182, 184, 186, 187, 188], "datasourcefeatur": 176, "datasourcedictionari": 176, "numerictabledictionari": 176, "manipul": 176, "getdictionari": [176, 180, 182], "setdictionari": [176, 180], "dodictionaryfromcontext": 176, "createdictionaryfromcontext": [176, 180], "constitu": 177, "acquisit": [177, 199, 366], "convers": [177, 181, 359, 366], "decompress": [177, 179, 366], "embed": 177, "serial": [177, 182], "deseri": [177, 182], "customiz": 177, "tabular": [177, 366, 372], "evolv": 177, "rare": 177, "blank": 177, "recoveri": [177, 179], "emul": 177, "ordinari": 177, "mechan": [177, 179, 200], "encod": [177, 180, 184, 367, 370], "mimic": [178, 370], "compact": 178, "unavail": 178, "categori": 178, "popul": 178, "soon": 178, "exchang": [179, 193], "inputdataarch": 179, "archiv": 179, "outputdataarch": 179, "footer": 179, "serializ": 179, "dictionari": [179, 180, 182], "allocatenumerict": 180, "getnumerict": 180, "getnumberofcolumn": [180, 182], "getnumberofavailablerow": 180, "readyforload": 180, "waitingfordata": 180, "later": [180, 182, 373, 375, 376], "endofdata": 180, "loaddatablock": 180, "recalcul": [180, 324], "possiblevalu": 180, "filedatasourc": 180, "csvfeaturemanag": 180, "odbc": 180, "odbcdatasourc": 180, "mysqlfeaturemanag": 180, "stringdatasourc": 180, "kdb": 180, "kdbdatasourc": 180, "kdbfeaturemanag": 180, "addmodifi": 180, "columnfilt": 180, "onehotencod": 180, "hot": 180, "binar": 180, "featureid": 180, "featuremodifi": 180, "featuremodifierifac": 180, "proper": 180, "code": [180, 188, 362, 370, 375], "bellow": 180, "crate": 180, "f1": 180, "f2": 180, "getfeaturemanag": 180, "allrevers": 180, "data_manag": 180, "sql": [180, 187], "f4": 180, "mix": 180, "stl": 180, "idfactori": 180, "fv": 180, "write": [180, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 375], "f_m": 180, "interest": 180, "c_m": 180, "pictur": [180, 366, 370], "f_3": 180, "f_2": 180, "f_5": 180, "inherit": 180, "featuremodifierbas": 180, "myfeaturemodifi": 180, "config": 180, "setnumberofoutputfeatur": 180, "carri": 180, "getoutputbuff": 180, "getdatalayout": 181, "csr_arrai": 181, "condens": [181, 184], "lowerpackedsymetricmatrix": [181, 184], "upperpackedsymetricmatrix": [181, 184], "unsupport": 181, "getblockofrow": [181, 182], "getblockofcolumnvalu": [181, 182], "highli": [181, 183, 318], "nativ": 181, "densenumerictableifac": 181, "csrnumerictableifac": 181, "packednumerictableifac": 181, "basicstatist": 181, "getarrai": [181, 182], "setarrai": [181, 182], "getpackedvalu": 181, "releasepackedvalu": 181, "rowindex": [181, 184], "getblockofcsrvalu": 181, "releaseblockofcsrvalu": 181, "addnumerict": 181, "life": 182, "cycl": 182, "transit": 182, "unpredict": 182, "donotalloc": 182, "doalloc": 182, "realloc": 182, "resiz": 182, "releaseblockofrow": 182, "rwflag": 182, "blockdescriptor": 182, "writeonli": 182, "readwrit": 182, "firstreadrow": 182, "nreadrow": 182, "readonli": 182, "getblockptr": 182, "col": [182, 204, 247], "releaseblockofcolumnvalu": 182, "getnumberofrow": 182, "resetdictionari": 182, "getfeaturetyp": 182, "getnumberofcategori": 182, "getdatamemorystatu": 182, "allocatedatamemori": 182, "addition": [182, 329], "complimentari": 182, "resourc": [182, 200], "implicitli": 182, "numpi": 182, "good": 183, "synchron": 183, "heterogen": [183, 366, 370], "guidanc": 183, "laid": 184, "suitabl": 184, "datalayout": 184, "offer": [184, 200], "providingonebas": 184, "csrindex": 184, "compris": 184, "join": [184, 370], "r_2": 184, "r_m": 184, "interrupt": 185, "abstract": [185, 193, 370], "sethostapp": 185, "hostappifaceptr": 185, "phost": 185, "hostapp": 185, "iscancel": 185, "cancel": 185, "errorusercancel": 185, "safe": 185, "instal": [186, 318, 356, 375], "libraryversioninfo": 186, "majorvers": 186, "minorvers": 186, "minor": 186, "updatevers": 186, "productstatu": 186, "recover": 187, "unrecover": 187, "unsuccess": 187, "routin": [187, 362], "extend": [187, 369], "getdescript": 187, "clear": 187, "setid": 187, "computenothrow": 187, "setresult": [187, 192], "setpartialresult": [187, 192], "singleton": 188, "getcpuid": 188, "enableinstructionsset": 188, "xeon": [188, 376], "phi": [188, 336], "extens": [188, 375, 376], "512": 188, "avx": 188, "avx512_4fmap": 188, "avx512_4vnniw": 188, "avx512_mic_e1": 188, "setcpuid": 188, "getnumberofthread": 188, "setnumberofthread": 188, "window": [188, 375, 376], "setdynamiclibrarythreadingtypeonwindow": 188, "pin": 188, "enablethreadpin": 188, "bind": [188, 344], "physic": [188, 366, 370], "improp": 188, "degrad": 188, "align": 189, "lead": 189, "freed": [189, 370], "subdivid": 190, "phase": 191, "stricter": 191, "hierarchi": 191, "elsewher": 191, "readi": 191, "algorithmifac": 192, "preset": 192, "getresult": 192, "getpartialresult": 192, "initializationprocedureifac": 192, "technologi": [193, 199, 320], "hadoop": 193, "spark": [193, 200], "protocol": 193, "computeclasslogprob": 195, "preprocess": [199, 318], "consum": 199, "agnost": 199, "page": 200, "ongo": 200, "packag": 200, "oap": 200, "comprehens": 200, "mllib": 200, "2024": 200, "favour": 200, "ipp": 200, "broken": 200, "enforc": 200, "relink": 200, "clean": 200, "newer": 200, "2023": [200, 208, 223, 232, 234, 236, 238, 240, 242, 252, 255], "x86": [200, 376], "column_accessor_homogen": [201, 202, 245], "cor_dense_batch": [201, 202, 245, 278, 327], "df_cls_hist_batch_random": [201, 245], "df_reg_hist_batch_random": [201, 245], "knn_reg_brute_force_dense_batch": [201, 245], "linear_regression_dense_batch": [201, 202, 245], "pca_precomputed_cor_dense_batch": [201, 245], "pca_precomputed_cov_dense_batch": [201, 245], "csr_accessor": [201, 202], "directed_graph": [201, 202], "graph_service_funct": [201, 202], "jaccard_batch": [201, 202], "jaccard_batch_app": [201, 202], "logloss_dense_batch": [201, 202, 305, 343], "louvain_batch": [201, 202], "pca_precomputed_dense_batch": [201, 202], "polynomial_kernel_dense_batch": [201, 202, 296, 336], "shortest_paths_batch": [201, 202], "sigmoid_kernel_dense_batch": [201, 202, 300, 336], "svm_nu_cls_thunder_csr_batch": [201, 202], "svm_nu_reg_thunder_csr_batch": [201, 202], "svm_reg_thunder_csr_batch": [201, 202], "svm_two_class_smo_csr_batch": [201, 202], "triangle_counting_batch": [201, 202], "corpor": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320], "licens": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320], "apach": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "complianc": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "unless": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "law": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "agre": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "AS": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "warranti": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 320], "OF": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "languag": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 370], "govern": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "example_util": [203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "argc": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "argv": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "data_file_nam": [203, 209, 221, 227, 228, 230, 246, 250, 262, 267], "get_data_path": [203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "covcormoments_dens": [203, 206, 207, 246, 248, 249], "2020": [204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225, 228, 231, 241, 243, 244, 247, 250, 251, 254, 257, 258, 259, 262, 264, 267, 268], "col_valu": [204, 247], "filenam": [205, 212, 213, 214, 215, 224, 229, 244], "graph_t": [205, 212, 213, 214, 215, 224, 229, 231, 244], "cc_desc": 205, "result_connected_compon": 205, "vertex_partit": [205, 224, 291, 332], "input_file_nam": [206, 207, 248, 249], "cov_desc": [206, 207, 248, 249], "element_count": 208, "subtable_data": 208, "subtable_column_indic": 208, "subtable_row_offset": 208, "dbscan_dens": [209, 250], "x_data": [209, 250], "result_comput": [209, 250], "train_data_file_nam": [210, 211, 216, 217, 218, 219, 220, 222, 225, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268], "df_classification_train_data": [210, 251, 252, 253], "train_response_file_nam": [210, 211, 218, 219, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 259, 260, 263, 268], "df_classification_train_label": [210, 251, 252, 253], "test_data_file_nam": [210, 211, 217, 218, 219, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 268], "df_classification_test_data": [210, 251, 252, 253], "test_response_file_nam": [210, 211, 217, 218, 219, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 268], "df_classification_test_label": [210, 251, 252, 253], "x_train": [210, 211, 216, 217, 218, 219, 220, 222, 225, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268], "y_train": [210, 211, 218, 219, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 259, 260, 263, 268], "x_test": [210, 211, 217, 218, 219, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 268], "y_test": [210, 211, 217, 222, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263], "df_desc": [210, 211, 251, 252, 253, 254, 255, 256], "variable_importance_mod": [210, 211, 251, 254, 255], "error_metric_mod": [210, 211, 251, 254, 255], "infer_mod": [210, 251, 252], "result_inf": [210, 211, 225, 226, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 252, 254, 255, 264, 265, 266], "ground": [210, 211, 217, 251, 252, 254, 255, 258], "truth": [210, 211, 217, 251, 252, 254, 255, 258], "df_regression_train_data": [211, 254, 255, 256], "df_regression_train_label": [211, 254, 255, 256], "df_regression_test_data": [211, 254, 255, 256], "df_regression_test_label": [211, 254, 255, 256], "weighted_edge_list": [212, 224, 229], "weight_typ": [212, 224, 229], "read_mod": [212, 224, 229], "vertex_id": [212, 213], "neigh": [212, 213], "output_helpers_graph": 214, "jaccard": [214, 215], "row_range_begin": [214, 215], "row_range_end": [214, 215], "column_range_begin": [214, 215], "column_range_end": [214, 215], "jaccard_desc": [214, 215], "set_block": [214, 215], "caching_build": [214, 215], "result_vertex_similar": 214, "vertex_similar": [214, 215], "jaccard_coeff": 214, "vertex_pair": 214, "get_vertex_pair": 214, "nonzero_coeff_count": 214, "get_nonzero_coeff_count": 214, "nonzero": 214, "print_vertex_similarity_result": 214, "tbb": [215, 356], "global_control": 215, "symmet": 215, "block_row_count": 215, "block_column_count": 215, "vertex_similarity_block_process": 215, "tbb_threads_numb": 215, "max_allowed_parallel": 215, "processing_block": 215, "this_task_arena": 215, "max_concurr": 215, "blocked_rang": 215, "column_begin": 215, "inner_r": 215, "current_thread_index": 215, "postprocess": 215, "simple_partition": 215, "iomanip": [216, 218, 219, 250, 257, 258, 264, 265, 266], "method_nam": [216, 225, 226, 257], "kmeans_init_desc": [216, 257], "result_init": [216, 257], "kmeans_dense_train_data": [217, 258], "initial_centroids_file_nam": [217, 258], "kmeans_dense_train_centroid": [217, 258], "kmeans_dense_test_data": [217, 258], "kmeans_dense_test_label": [217, 258], "result_test": [217, 232, 233, 258, 268], "k_nearest_neighbors_train_data": [218, 219, 220, 259, 261], "k_nearest_neighbors_train_label": [218, 219, 259], "k_nearest_neighbors_test_data": [218, 219, 220, 259, 261], "k_nearest_neighbors_test_label": [218, 219, 259], "y_true": [218, 219, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268], "test_result": [218, 219, 220, 222, 261, 263], "query_data_file_nam": [220, 261], "x_queri": [220, 261], "cosine_desc_t": 220, "cosine_desc": 220, "neighbors_count": [220, 261], "kernel_funct": [221, 227, 228, 230, 262, 267], "kernel_desc": [221, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 262, 267, 268], "linear_regression_train_data": [222, 263], "linear_regression_train_respons": [222, 263], "linear_regression_test_data": [222, 263], "linear_regression_test_respons": [222, 263], "lr_desc": [222, 263], "get_coeffici": [222, 263], "get_intercept": [222, 263], "lr_model": [222, 263], "data_filenam": 223, "df_binary_classification_train_data": 223, "labels_filenam": 223, "df_binary_classification_train_label": 223, "params_filenam": 223, "logreg_param": 223, "dense_batch_method": 223, "logloss_desc": 223, "louvain": 224, "louvain_desc": 224, "set_resolut": 224, "0001": 224, "col_count": 224, "initial_label": 224, "modular": 224, "get_modular": 224, "get_community_count": 224, "pca_norm": [225, 264], "2022": [226, 265, 266, 376], "cov_data_file_nam": 226, "precomputed_covari": [226, 266], "cor_data_file_nam": 226, "precomputed_correl": [226, 265], "cov_train": 226, "cor_train": 226, "shortest_path": 229, "shortest_paths_desc": 229, "delta_step": 229, "one_to_al": 229, "85": 229, "optional_result": 229, "predecessor": 229, "shortest": 229, "result_shortest_path": 229, "get_predecessor": 229, "target_filenam": 231, "si_target_graph": 231, "pattern_filenam": 231, "si_pattern_graph": 231, "subgraph_isomorphism_desc": 231, "graph_match": [231, 293, 334], "svm_multi_class_train_sparse_data": 232, "svm_multi_class_train_sparse_label": 232, "svm_multi_class_test_sparse_data": 232, "svm_multi_class_test_sparse_label": 232, "x_train_csr": [232, 234, 236, 238, 240, 242], "convert_to_csr": [232, 234, 236, 238, 240, 242], "svm_desc": [232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 268], "svm_multi_class_train_dense_data": 233, "svm_multi_class_train_dense_label": 233, "svm_multi_class_test_dense_data": 233, "svm_multi_class_test_dense_label": 233, "svm_two_class_train_sparse_data": [234, 240, 242], "svm_two_class_train_sparse_label": [234, 240, 242], "svm_two_class_test_sparse_data": [234, 240, 242], "svm_two_class_test_sparse_label": [234, 240, 242], "svm_two_class_train_dense_data": [235, 241, 243, 268], "svm_two_class_train_dense_label": [235, 241, 243, 268], "svm_two_class_test_dense_data": [235, 241, 243, 268], "svm_two_class_test_dense_label": [235, 241, 243, 268], "svm_reg_train_sparse_data": [236, 238], "svm_reg_train_sparse_label": [236, 238], "svm_reg_test_sparse_data": [236, 238], "svm_reg_test_sparse_label": [236, 238], "svm_reg_train_dense_data": [237, 239], "svm_reg_train_dense_label": [237, 239], "svm_reg_test_dense_data": [237, 239], "svm_reg_test_dense_label": [237, 239], "triangle_count": 244, "tc_desc": 244, "ordered_count": 244, "local_and_glob": 244, "triangl": 244, "result_vertex_rank": 244, "vertex_rank": 244, "get_global_rank": 244, "local_triangles_t": 244, "local_triangl": 244, "local_triangles_data": 244, "list_devic": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "get_platform": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "get_info": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "info": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "platform": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 356], "dpc_helper": 247, "data_host": 247, "make_default_delet": 247, "unimpl": [251, 252, 253, 254, 255, 256, 260], "splitter_mod": [252, 255], "print_node_visitor": [253, 256], "get_level": [253, 256], "get_impur": [253, 256], "get_sample_count": [253, 256], "index_class": 253, "get_feature_index": [253, 256], "get_feature_valu": [253, 256], "print_model": [253, 256], "15": [253, 344], "150": 254, "knn_desc_uniform": [259, 260], "knn_desc_dist": [259, 260], "train_result_uniform": [259, 260], "train_result_dist": [259, 260], "test_result_uniform": [259, 260], "test_result_dist": [259, 260], "knn_regression_train_data": 260, "knn_regression_train_respons": 260, "knn_regression_test_data": 260, "knn_regression_test_respons": 260, "descriptor_t": [260, 265, 266], "todo": 260, "get_devic": 262, "speed": 318, "activ": [318, 320, 352], "hardwar": [318, 320], "glossari": [318, 321, 371], "appendix": [318, 321], "bibliographi": 318, "abi": 318, "compat": 318, "download": [319, 366], "logo": 320, "trademark": 320, "subsidiari": 320, "brand": 320, "claim": 320, "estoppel": 320, "intellectu": 320, "grant": 320, "defect": 320, "errata": 320, "merchant": 320, "infring": 320, "aris": 320, "cours": 320, "trade": 320, "phi_": [324, 336], "min_": 324, "quad": [324, 329, 338, 340, 342, 345, 346, 348], "spec": 324, "disjoint": 324, "farthest": 324, "satisfi": [324, 362], "c_0": 325, "smpd": [326, 329, 330, 343, 344], "date": 329, "corel": 329, "upsilon_k": 329, "upsilon_": 329, "u_k": 329, "v_k": 329, "t_": 329, "n_f": 330, "n_b": 330, "compar": [330, 370], "decifion": 331, "quantiti": 332, "\u0441ompon": 332, "\u0441onnect": 332, "identif": 332, "shiloach": 332, "vishkin": 332, "fix": [332, 352], "probabilist": 332, "subseteq": [334, 342, 370], "endpoint": [334, 370], "biject": 334, "preserv": 334, "vf3": 334, "light": [334, 366], "stack": 334, "thu": [336, 366], "leftarrow": 336, "phi_1": 336, "phi_2": 336, "ye": [336, 342], "tanh": 340, "jl": [342, 345, 346, 348], "y_r": 342, "tild": 342, "w_0": [343, 344], "w_p": [343, 344], "grad": [343, 344], "h_": [343, 344], "prob_i": 344, "_0": 344, "prob_k": 344, "u_1": [345, 346, 348], "u_": [345, 346, 348], "u_n": [345, 346, 348], "v_1": [345, 346, 348, 370], "v_m": [345, 346, 348], "u_i": [345, 346, 348], "v_j": [345, 346, 348, 370], "max_l": 345, "manual": [345, 346, 348], "toler": 352, "dual": 352, "constrain": 352, "subproblem": 352, "axi": 355, "dir": 356, "setvar": 356, "sh": [356, 375], "icpx": 356, "icx": 356, "cl": 356, "folder": [356, 375], "latest": [356, 376], "link": [356, 375], "libonedal_cor": 356, "libonedal_dpc": 356, "libonedal_thread": 356, "libintel64": 356, "libonedal_sycl": 356, "visual": [356, 376], "studio": [356, 376], "toolset": 356, "directori": [356, 375], "onetbb": 356, "onedal_cor": 356, "lib": 356, "onedal_thread": 356, "onedal_core_dl": 356, "onedald": 356, "onedal_dpcd": 356, "onedal_sycld": 356, "onedal_threadd": 356, "onedal_cored_dl": 356, "onedald_dl": 356, "onedal_dpcd_dl": 356, "dll": 356, "fsycl": 356, "my_first_dal_program": 356, "wl": 356, "intel64": 356, "lonedal_cor": 356, "lonedal_dpc": 356, "lonedal_thread": 356, "lpthread": 356, "ldl": 356, "lopencl": 356, "gcc4": 356, "ltbb": 356, "ltbbmalloc": 356, "lightweight": [359, 370], "intens": 359, "organ": [360, 366], "read_args_t": 362, "read_result_t": 362, "verbos": 362, "property_nam": 362, "property_typ": 362, "property_type_1": 362, "property_name_1": 362, "property_type_2": 362, "property_name_2": 362, "set_": 362, "standart": 365, "pipelin": 366, "perspect": 366, "prepar": 366, "remot": 366, "recov": 366, "dm": 366, "chunk": 366, "unnecessari": 366, "safeti": 366, "expos": [366, 370], "flat": [366, 370], "acquir": 366, "highlight": 366, "color": [366, 370], "dark": 366, "blue": 366, "orang": 366, "tm": [366, 370], "shortcut": 366, "jth": [367, 370], "weaken": 369, "table1": 369, "data_ptr": 369, "table2": 369, "table3": 369, "domain": 370, "synonym": 370, "supervis": 370, "dog": 370, "cat": 370, "email": 370, "spam": 370, "unsupervis": 370, "bunch": 370, "star": 370, "imag": 370, "person": 370, "height": 370, "price": 370, "hous": 370, "comma": 370, "retain": [370, 375], "rectangl": 370, "subtract": 370, "frame": 370, "temperatur": 370, "celsiu": 370, "fahrenheit": 370, "gender": 370, "car": 370, "student": 370, "grade": 370, "significantli": 370, "tower": 370, "weather": 370, "alter": 370, "faster": 370, "thrown": 370, "patter": 370, "a_g": 370, "v_2": 370, "v_n": 370, "v_i": 370, "walk": 370, "e_1": 370, "e_2": 370, "e_m": 370, "finit": 370, "nonempti": 370, "unord": 370, "succe": 370, "encapsul": 370, "principl": 370, "float32": 370, "float64": 370, "set_row_count": 370, "workload": 370, "jit": 370, "spir": 370, "portabl": 370, "style": 370, "inter": [370, 374], "oneccl": [370, 374], "onempi": [370, 374], "emploi": 370, "autonom": 370, "distinguish": 372, "interpret": 372, "cardin": 372, "x_d": 372, "sync": 374, "bcast": 374, "broadcast": 374, "allreduc": 374, "allgatherv": 374, "sendrecv_replac": 374, "send": 374, "allgetherv": 374, "displac": 374, "gap": 374, "till": 374, "install_dir": 375, "prebuilt": 375, "redist": 375, "gnu": [375, 376], "nmake": [375, 376], "depict": 375, "cassert": 375, "selector": 375, "gpu_selector_v": 375, "breviti": 375, "train_r": 375, "assert": 375, "data_transform": 375, "dpcpp": 375, "comment": 375, "cpath": 375, "library_path": 375, "ld_library_path": 375, "var": 375, "script": 375, "modulefil": 375, "env": 375, "modul": 375, "moduleshom": 375, "bash": 375, "bat": 375, "writabl": 375, "temporari": 375, "cp": 375, "writable_dir": 375, "navig": 375, "cd": 375, "cmake": 375, "unix": 375, "makefil": 375, "dexamples_list": 375, "svm_two_class_thund": 375, "donedal_link": 375, "wouldgener": 375, "_result": 375, "tradit": 375, "6th": 376, "gen": 376, "iri": 376, "plu": 376, "xe": 376, "pro": 376, "atom": 376, "gcc": 376, "2019": 376, "ubuntu": 376, "18": 376, "server": 376}, "objects": {"": [[36, 0, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array::T"], [36, 2, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI1TE", "oneapi::dal::array::array"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE", "oneapi::dal::array::array"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE", "oneapi::dal::array::array"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI1TE", "oneapi::dal::array::array"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5arrayEv", "oneapi::dal::array::array"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::ConstDeleter"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::Deleter"], [36, 1, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::K"], [36, 1, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::Y"], [36, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::count"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE", "oneapi::dal::array::array::count"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE", "oneapi::dal::array::array::count"], [36, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::data"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::data"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::data"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE", "oneapi::dal::array::array::data"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE", "oneapi::dal::array::array::data"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::deleter"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::deleter"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI1TE", "oneapi::dal::array::array::other"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI1TE", "oneapi::dal::array::array::other"], [36, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::ref"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5emptyENSt7int64_tE", "oneapi::dal::array::empty"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5emptyENSt7int64_tE", "oneapi::dal::array::empty::count"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full::K"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full::element"], [36, 2, 1, "_CPPv4NK6oneapi3dal5array9get_countEv", "oneapi::dal::array::get_count"], [36, 2, 1, "_CPPv4NK6oneapi3dal5array8get_dataEv", "oneapi::dal::array::get_data"], [36, 2, 1, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv", "oneapi::dal::array::get_mutable_data"], [36, 2, 1, "_CPPv4NK6oneapi3dal5array8get_sizeEv", "oneapi::dal::array::get_size"], [36, 2, 1, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv", "oneapi::dal::array::has_mutable_data"], [36, 2, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataEv", "oneapi::dal::array::need_mutable_data"], [36, 2, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI1TE", "oneapi::dal::array::operator="], [36, 2, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI1TE", "oneapi::dal::array::operator="], [36, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI1TE", "oneapi::dal::array::operator=::other"], [36, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI1TE", "oneapi::dal::array::operator=::other"], [36, 2, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]"], [36, 3, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]::index"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5resetENSt7int64_tE", "oneapi::dal::array::reset"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5resetEv", "oneapi::dal::array::reset"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::ConstDeleter"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::Deleter"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::Y"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::Y"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::count"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5resetENSt7int64_tE", "oneapi::dal::array::reset::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::data"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::data"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::data"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::data"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::deleter"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::deleter"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::ref"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::ref"], [36, 2, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap"], [36, 1, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap::Y"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap::count"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap::data"], [36, 2, 1, "_CPPv4N6oneapi3dal5array5zerosENSt7int64_tE", "oneapi::dal::array::zeros"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5zerosENSt7int64_tE", "oneapi::dal::array::zeros::count"], [29, 2, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute"], [29, 1, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute::Descriptor"], [29, 3, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute::desc"], [29, 3, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute::input"], [29, 0, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute_input"], [29, 1, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute_input::Task"], [29, 2, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5table", "oneapi::dal::basic_statistics::compute_input::compute_input"], [29, 2, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::basic_statistics::compute_input::compute_input"], [29, 3, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5table", "oneapi::dal::basic_statistics::compute_input::compute_input::data"], [29, 3, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::basic_statistics::compute_input::compute_input::data"], [29, 3, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::basic_statistics::compute_input::compute_input::weights"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input4dataE", "oneapi::dal::basic_statistics::compute_input::data"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input7weightsE", "oneapi::dal::basic_statistics::compute_input::weights"], [29, 0, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics14compute_resultE", "oneapi::dal::basic_statistics::compute_result"], [29, 1, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics14compute_resultE", "oneapi::dal::basic_statistics::compute_result::Task"], [29, 2, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14compute_resultEv", "oneapi::dal::basic_statistics::compute_result::compute_result"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3maxE", "oneapi::dal::basic_statistics::compute_result::max"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result4meanE", "oneapi::dal::basic_statistics::compute_result::mean"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3minE", "oneapi::dal::basic_statistics::compute_result::min"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14result_optionsE", "oneapi::dal::basic_statistics::compute_result::result_options"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result23second_order_raw_momentE", "oneapi::dal::basic_statistics::compute_result::second_order_raw_moment"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result18standard_deviationE", "oneapi::dal::basic_statistics::compute_result::standard_deviation"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3sumE", "oneapi::dal::basic_statistics::compute_result::sum"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result11sum_squaresE", "oneapi::dal::basic_statistics::compute_result::sum_squares"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result20sum_squares_centeredE", "oneapi::dal::basic_statistics::compute_result::sum_squares_centered"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result8varianceE", "oneapi::dal::basic_statistics::compute_result::variance"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result9variationE", "oneapi::dal::basic_statistics::compute_result::variation"], [29, 0, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor"], [29, 1, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor::Float"], [29, 1, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor::Method"], [29, 1, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor::Task"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics10descriptor14result_optionsE", "oneapi::dal::basic_statistics::descriptor::result_options"], [29, 5, 1, "_CPPv4N6oneapi3dal16basic_statistics6method10by_defaultE", "oneapi::dal::basic_statistics::method::by_default"], [29, 0, 1, "_CPPv4N6oneapi3dal16basic_statistics6method5denseE", "oneapi::dal::basic_statistics::method::dense"], [29, 5, 1, "_CPPv4N6oneapi3dal16basic_statistics4task10by_defaultE", "oneapi::dal::basic_statistics::task::by_default"], [29, 0, 1, "_CPPv4N6oneapi3dal16basic_statistics4task7computeE", "oneapi::dal::basic_statistics::task::compute"], [25, 0, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor"], [25, 1, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor::Float"], [25, 1, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor::Method"], [25, 1, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor::Task"], [25, 2, 1, "_CPPv4N6oneapi3dal18chebyshev_distance10descriptor10descriptorEv", "oneapi::dal::chebyshev_distance::descriptor::descriptor"], [25, 5, 1, "_CPPv4N6oneapi3dal18chebyshev_distance6method10by_defaultE", "oneapi::dal::chebyshev_distance::method::by_default"], [25, 0, 1, "_CPPv4N6oneapi3dal18chebyshev_distance6method5denseE", "oneapi::dal::chebyshev_distance::method::dense"], [25, 5, 1, "_CPPv4N6oneapi3dal18chebyshev_distance4task10by_defaultE", "oneapi::dal::chebyshev_distance::task::by_default"], [25, 0, 1, "_CPPv4N6oneapi3dal18chebyshev_distance4task7computeE", "oneapi::dal::chebyshev_distance::task::compute"], [33, 0, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor"], [33, 1, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor::T"], [33, 2, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor"], [33, 2, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERKN6detail13table_builderE", "oneapi::dal::column_accessor::column_accessor"], [33, 1, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::U"], [33, 3, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERKN6detail13table_builderE", "oneapi::dal::column_accessor::column_accessor::builder"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::table"], [33, 2, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull"], [33, 2, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::block"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::column_index"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::column_index"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::row_range"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::row_range"], [33, 2, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push"], [33, 1, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::U"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::block"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::column_index"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::row_range"], [26, 0, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor"], [26, 1, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor::Float"], [26, 1, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor::Method"], [26, 1, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor::Task"], [26, 2, 1, "_CPPv4N6oneapi3dal15cosine_distance10descriptor10descriptorEv", "oneapi::dal::cosine_distance::descriptor::descriptor"], [26, 5, 1, "_CPPv4N6oneapi3dal15cosine_distance6method10by_defaultE", "oneapi::dal::cosine_distance::method::by_default"], [26, 0, 1, "_CPPv4N6oneapi3dal15cosine_distance6method5denseE", "oneapi::dal::cosine_distance::method::dense"], [26, 5, 1, "_CPPv4N6oneapi3dal15cosine_distance4task10by_defaultE", "oneapi::dal::cosine_distance::task::by_default"], [26, 0, 1, "_CPPv4N6oneapi3dal15cosine_distance4task7computeE", "oneapi::dal::cosine_distance::task::compute"], [5, 2, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute"], [5, 1, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute::Descriptor"], [5, 3, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute::desc"], [5, 3, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute::input"], [5, 0, 1, "_CPPv4I0EN6oneapi3dal10covariance13compute_inputE", "oneapi::dal::covariance::compute_input"], [5, 1, 1, "_CPPv4I0EN6oneapi3dal10covariance13compute_inputE", "oneapi::dal::covariance::compute_input::Task"], [5, 2, 1, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputERK5table", "oneapi::dal::covariance::compute_input::compute_input"], [5, 3, 1, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputERK5table", "oneapi::dal::covariance::compute_input::compute_input::data"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance13compute_input4dataE", "oneapi::dal::covariance::compute_input::data"], [5, 0, 1, "_CPPv4I0EN6oneapi3dal10covariance14compute_resultE", "oneapi::dal::covariance::compute_result"], [5, 1, 1, "_CPPv4I0EN6oneapi3dal10covariance14compute_resultE", "oneapi::dal::covariance::compute_result::Task"], [5, 2, 1, "_CPPv4N6oneapi3dal10covariance14compute_result14compute_resultEv", "oneapi::dal::covariance::compute_result::compute_result"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result10cor_matrixE", "oneapi::dal::covariance::compute_result::cor_matrix"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result10cov_matrixE", "oneapi::dal::covariance::compute_result::cov_matrix"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result5meansE", "oneapi::dal::covariance::compute_result::means"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result14result_optionsE", "oneapi::dal::covariance::compute_result::result_options"], [5, 0, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor"], [5, 1, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor::Float"], [5, 1, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor::Method"], [5, 1, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor::Task"], [5, 2, 1, "_CPPv4N6oneapi3dal10covariance10descriptor10descriptorEv", "oneapi::dal::covariance::descriptor::descriptor"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance10descriptor14result_optionsE", "oneapi::dal::covariance::descriptor::result_options"], [5, 5, 1, "_CPPv4N6oneapi3dal10covariance6method10by_defaultE", "oneapi::dal::covariance::method::by_default"], [5, 0, 1, "_CPPv4N6oneapi3dal10covariance6method5denseE", "oneapi::dal::covariance::method::dense"], [5, 5, 1, "_CPPv4N6oneapi3dal10covariance4task10by_defaultE", "oneapi::dal::covariance::task::by_default"], [5, 0, 1, "_CPPv4N6oneapi3dal10covariance4task7computeE", "oneapi::dal::covariance::task::compute"], [46, 0, 1, "_CPPv4N6oneapi3dal9csr_tableE", "oneapi::dal::csr_table"], [46, 2, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table"], [46, 2, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table"], [46, 2, 1, "_CPPv4N6oneapi3dal9csr_table9csr_tableERK5table", "oneapi::dal::csr_table::csr_table"], [46, 2, 1, "_CPPv4N6oneapi3dal9csr_table9csr_tableEv", "oneapi::dal::csr_table::csr_table"], [46, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::ConstColumnIndicesDeleter"], [46, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::ConstDataDeleter"], [46, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::ConstRowOffsetsDeleter"], [46, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::Data"], [46, 1, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::Data"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_count"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_count"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_indices"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_indices_deleter"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_indices_pointer"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::data"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::data_deleter"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::data_pointer"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::indexing"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::indexing"], [46, 3, 1, "_CPPv4N6oneapi3dal9csr_table9csr_tableERK5table", "oneapi::dal::csr_table::csr_table::other"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_count"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_offsets"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_offsets_deleter"], [46, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_offsets_pointer"], [46, 2, 1, "_CPPv4NK6oneapi3dal9csr_table18get_column_indicesEv", "oneapi::dal::csr_table::get_column_indices"], [46, 2, 1, "_CPPv4I0ENK6oneapi3dal9csr_table8get_dataEPK4Datav", "oneapi::dal::csr_table::get_data"], [46, 2, 1, "_CPPv4NK6oneapi3dal9csr_table8get_dataEv", "oneapi::dal::csr_table::get_data"], [46, 1, 1, "_CPPv4I0ENK6oneapi3dal9csr_table8get_dataEPK4Datav", "oneapi::dal::csr_table::get_data::Data"], [46, 2, 1, "_CPPv4NK6oneapi3dal9csr_table12get_indexingEv", "oneapi::dal::csr_table::get_indexing"], [46, 2, 1, "_CPPv4NK6oneapi3dal9csr_table8get_kindEv", "oneapi::dal::csr_table::get_kind"], [46, 2, 1, "_CPPv4NK6oneapi3dal9csr_table18get_non_zero_countEv", "oneapi::dal::csr_table::get_non_zero_count"], [46, 2, 1, "_CPPv4NK6oneapi3dal9csr_table15get_row_offsetsEv", "oneapi::dal::csr_table::get_row_offsets"], [46, 2, 1, "_CPPv4N6oneapi3dal9csr_table4kindEv", "oneapi::dal::csr_table::kind"], [46, 2, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap"], [46, 2, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap"], [46, 1, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::Data"], [46, 1, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::Data"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_count"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_count"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_indices"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_indices_pointer"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::data"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::data_pointer"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::indexing"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::indexing"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::row_count"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::row_offsets"], [46, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::row_offsets_pointer"], [37, 0, 1, "_CPPv4N6oneapi3dal3csv11data_sourceE", "oneapi::dal::csv::data_source"], [37, 2, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source"], [37, 2, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE", "oneapi::dal::csv::data_source::delimiter"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE", "oneapi::dal::csv::data_source::file_name"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source7optionsE", "oneapi::dal::csv::data_source::options"], [37, 0, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args::Object"], [37, 2, 1, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv", "oneapi::dal::csv::read_args::read_args"], [1, 2, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute"], [1, 1, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute::Descriptor"], [1, 3, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute::desc"], [1, 3, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute::input"], [1, 0, 1, "_CPPv4I0EN6oneapi3dal6dbscan13compute_inputE", "oneapi::dal::dbscan::compute_input"], [1, 1, 1, "_CPPv4I0EN6oneapi3dal6dbscan13compute_inputE", "oneapi::dal::dbscan::compute_input::Task"], [1, 2, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::dbscan::compute_input::compute_input"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::dbscan::compute_input::compute_input::data"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::dbscan::compute_input::compute_input::weights"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input4dataE", "oneapi::dal::dbscan::compute_input::data"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input7weightsE", "oneapi::dal::dbscan::compute_input::weights"], [1, 0, 1, "_CPPv4I0EN6oneapi3dal6dbscan14compute_resultE", "oneapi::dal::dbscan::compute_result"], [1, 1, 1, "_CPPv4I0EN6oneapi3dal6dbscan14compute_resultE", "oneapi::dal::dbscan::compute_result::Task"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result13cluster_countE", "oneapi::dal::dbscan::compute_result::cluster_count"], [1, 2, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result14compute_resultEv", "oneapi::dal::dbscan::compute_result::compute_result"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result10core_flagsE", "oneapi::dal::dbscan::compute_result::core_flags"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result24core_observation_indicesE", "oneapi::dal::dbscan::compute_result::core_observation_indices"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result17core_observationsE", "oneapi::dal::dbscan::compute_result::core_observations"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result9responsesE", "oneapi::dal::dbscan::compute_result::responses"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result14result_optionsE", "oneapi::dal::dbscan::compute_result::result_options"], [1, 0, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor"], [1, 1, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor::Float"], [1, 1, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor::Method"], [1, 1, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor::Task"], [1, 2, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE", "oneapi::dal::dbscan::descriptor::descriptor"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE", "oneapi::dal::dbscan::descriptor::descriptor::epsilon"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE", "oneapi::dal::dbscan::descriptor::descriptor::min_observations"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor7epsilonE", "oneapi::dal::dbscan::descriptor::epsilon"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor13mem_save_modeE", "oneapi::dal::dbscan::descriptor::mem_save_mode"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor16min_observationsE", "oneapi::dal::dbscan::descriptor::min_observations"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor14result_optionsE", "oneapi::dal::dbscan::descriptor::result_options"], [1, 0, 1, "_CPPv4N6oneapi3dal6dbscan6method11brute_forceE", "oneapi::dal::dbscan::method::brute_force"], [1, 5, 1, "_CPPv4N6oneapi3dal6dbscan6method10by_defaultE", "oneapi::dal::dbscan::method::by_default"], [1, 5, 1, "_CPPv4N6oneapi3dal6dbscan4task10by_defaultE", "oneapi::dal::dbscan::task::by_default"], [1, 0, 1, "_CPPv4N6oneapi3dal6dbscan4task10clusteringE", "oneapi::dal::dbscan::task::clustering"], [9, 0, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor"], [9, 1, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor::Float"], [9, 1, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor::Method"], [9, 1, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor9bootstrapE", "oneapi::dal::decision_forest::descriptor::bootstrap"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor11class_countE", "oneapi::dal::decision_forest::descriptor::class_count"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor10descriptorEv", "oneapi::dal::decision_forest::descriptor::descriptor"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor17error_metric_modeE", "oneapi::dal::decision_forest::descriptor::error_metric_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor17features_per_nodeE", "oneapi::dal::decision_forest::descriptor::features_per_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor18impurity_thresholdE", "oneapi::dal::decision_forest::descriptor::impurity_threshold"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor10infer_modeE", "oneapi::dal::decision_forest::descriptor::infer_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor8max_binsE", "oneapi::dal::decision_forest::descriptor::max_bins"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_leaf_nodesE", "oneapi::dal::decision_forest::descriptor::max_leaf_nodes"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_tree_depthE", "oneapi::dal::decision_forest::descriptor::max_tree_depth"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor18memory_saving_modeE", "oneapi::dal::decision_forest::descriptor::memory_saving_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor12min_bin_sizeE", "oneapi::dal::decision_forest::descriptor::min_bin_size"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor35min_impurity_decrease_in_split_nodeE", "oneapi::dal::decision_forest::descriptor::min_impurity_decrease_in_split_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor29min_observations_in_leaf_nodeE", "oneapi::dal::decision_forest::descriptor::min_observations_in_leaf_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor30min_observations_in_split_nodeE", "oneapi::dal::decision_forest::descriptor::min_observations_in_split_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor32min_weight_fraction_in_leaf_nodeE", "oneapi::dal::decision_forest::descriptor::min_weight_fraction_in_leaf_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor30observations_per_tree_fractionE", "oneapi::dal::decision_forest::descriptor::observations_per_tree_fraction"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor4seedE", "oneapi::dal::decision_forest::descriptor::seed"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor13splitter_modeE", "oneapi::dal::decision_forest::descriptor::splitter_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor10tree_countE", "oneapi::dal::decision_forest::descriptor::tree_count"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor24variable_importance_modeE", "oneapi::dal::decision_forest::descriptor::variable_importance_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor11voting_modeE", "oneapi::dal::decision_forest::descriptor::voting_mode"], [9, 2, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer::Descriptor"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer::desc"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer::input"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer_input"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer_input::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input4dataE", "oneapi::dal::decision_forest::infer_input::data"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::decision_forest::infer_input::infer_input"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::decision_forest::infer_input::infer_input::data"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::decision_forest::infer_input::infer_input::trained_model"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input5modelE", "oneapi::dal::decision_forest::infer_input::model"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12infer_resultE", "oneapi::dal::decision_forest::infer_result"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12infer_resultE", "oneapi::dal::decision_forest::infer_result::Task"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result12infer_resultEv", "oneapi::dal::decision_forest::infer_result::infer_result"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result6labelsE", "oneapi::dal::decision_forest::infer_result::labels"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result13probabilitiesE", "oneapi::dal::decision_forest::infer_result::probabilities"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result9responsesE", "oneapi::dal::decision_forest::infer_result::responses"], [9, 5, 1, "_CPPv4N6oneapi3dal15decision_forest6method10by_defaultE", "oneapi::dal::decision_forest::method::by_default"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest6method5denseE", "oneapi::dal::decision_forest::method::dense"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest6method4histE", "oneapi::dal::decision_forest::method::hist"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5modelE", "oneapi::dal::decision_forest::model"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5modelE", "oneapi::dal::decision_forest::model::Task"], [9, 2, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv", "oneapi::dal::decision_forest::model::get_class_count"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv", "oneapi::dal::decision_forest::model::get_class_count::None"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv", "oneapi::dal::decision_forest::model::get_class_count::T"], [9, 2, 1, "_CPPv4NK6oneapi3dal15decision_forest5model14get_tree_countEv", "oneapi::dal::decision_forest::model::get_tree_count"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest5model5modelEv", "oneapi::dal::decision_forest::model::model"], [9, 2, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first"], [9, 1, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first::Visitor"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first::tree_idx"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first::visitor"], [9, 2, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first"], [9, 1, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first::Visitor"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first::tree_idx"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first::visitor"], [9, 5, 1, "_CPPv4N6oneapi3dal15decision_forest4task10by_defaultE", "oneapi::dal::decision_forest::task::by_default"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest4task14classificationE", "oneapi::dal::decision_forest::task::classification"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest4task10regressionE", "oneapi::dal::decision_forest::task::regression"], [9, 2, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train::Descriptor"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train::desc"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train::input"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11train_inputE", "oneapi::dal::decision_forest::train_input"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11train_inputE", "oneapi::dal::decision_forest::train_input::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input4dataE", "oneapi::dal::decision_forest::train_input::data"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input6labelsE", "oneapi::dal::decision_forest::train_input::labels"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input9responsesE", "oneapi::dal::decision_forest::train_input::responses"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input::data"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input::responses"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input::weights"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input7weightsE", "oneapi::dal::decision_forest::train_input::weights"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12train_resultE", "oneapi::dal::decision_forest::train_result"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12train_resultE", "oneapi::dal::decision_forest::train_result::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result5modelE", "oneapi::dal::decision_forest::train_result::model"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result7oob_errE", "oneapi::dal::decision_forest::train_result::oob_err"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result16oob_err_accuracyE", "oneapi::dal::decision_forest::train_result::oob_err_accuracy"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result25oob_err_decision_functionE", "oneapi::dal::decision_forest::train_result::oob_err_decision_function"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result23oob_err_per_observationE", "oneapi::dal::decision_forest::train_result::oob_err_per_observation"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result18oob_err_predictionE", "oneapi::dal::decision_forest::train_result::oob_err_prediction"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result10oob_err_r2E", "oneapi::dal::decision_forest::train_result::oob_err_r2"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result12train_resultEv", "oneapi::dal::decision_forest::train_result::train_result"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result14var_importanceE", "oneapi::dal::decision_forest::train_result::var_importance"], [47, 0, 1, "_CPPv4N6oneapi3dal13homogen_tableE", "oneapi::dal::homogen_table"], [47, 2, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data"], [47, 2, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv", "oneapi::dal::homogen_table::get_data"], [47, 1, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data::Data"], [47, 2, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv", "oneapi::dal::homogen_table::get_kind"], [47, 2, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table"], [47, 2, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableERK5table", "oneapi::dal::homogen_table::homogen_table"], [47, 2, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv", "oneapi::dal::homogen_table::homogen_table"], [47, 1, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::ConstDeleter"], [47, 1, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::Data"], [47, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::column_count"], [47, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::data_deleter"], [47, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::data_pointer"], [47, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::layout"], [47, 3, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableERK5table", "oneapi::dal::homogen_table::homogen_table::other"], [47, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::row_count"], [47, 2, 1, "_CPPv4N6oneapi3dal13homogen_table4kindEv", "oneapi::dal::homogen_table::kind"], [47, 2, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap"], [47, 2, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap"], [47, 1, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [47, 1, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::data"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::data_pointer"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [3, 0, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor"], [3, 1, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Float"], [3, 1, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Method"], [3, 1, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE", "oneapi::dal::kmeans::descriptor::accuracy_threshold"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE", "oneapi::dal::kmeans::descriptor::cluster_count"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor::cluster_count"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE", "oneapi::dal::kmeans::descriptor::max_iteration_count"], [3, 2, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer::Descriptor"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer::desc"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer::input"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE", "oneapi::dal::kmeans::infer_input::data"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::data"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::trained_model"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE", "oneapi::dal::kmeans::infer_input::model"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result::Task"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv", "oneapi::dal::kmeans::infer_result::infer_result"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result6labelsE", "oneapi::dal::kmeans::infer_result::labels"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result24objective_function_valueE", "oneapi::dal::kmeans::infer_result::objective_function_value"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result9responsesE", "oneapi::dal::kmeans::infer_result::responses"], [3, 5, 1, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE", "oneapi::dal::kmeans::method::by_default"], [3, 0, 1, "_CPPv4N6oneapi3dal6kmeans6method11lloyd_denseE", "oneapi::dal::kmeans::method::lloyd_dense"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans5model9centroidsE", "oneapi::dal::kmeans::model::centroids"], [3, 2, 1, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv", "oneapi::dal::kmeans::model::get_cluster_count"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans5model5modelEv", "oneapi::dal::kmeans::model::model"], [3, 5, 1, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE", "oneapi::dal::kmeans::task::by_default"], [3, 0, 1, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE", "oneapi::dal::kmeans::task::clustering"], [3, 2, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train::Descriptor"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train::desc"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train::input"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE", "oneapi::dal::kmeans::train_input::data"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE", "oneapi::dal::kmeans::train_input::initial_centroids"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5table", "oneapi::dal::kmeans::train_input::train_input"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::initial_centroids"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result15iteration_countE", "oneapi::dal::kmeans::train_result::iteration_count"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result6labelsE", "oneapi::dal::kmeans::train_result::labels"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result5modelE", "oneapi::dal::kmeans::train_result::model"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result24objective_function_valueE", "oneapi::dal::kmeans::train_result::objective_function_value"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result9responsesE", "oneapi::dal::kmeans::train_result::responses"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv", "oneapi::dal::kmeans::train_result::train_result"], [4, 2, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute"], [4, 1, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute::Descriptor"], [4, 3, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute::desc"], [4, 3, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute::input"], [4, 0, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input"], [4, 1, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input::Task"], [4, 2, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input"], [4, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input::data"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE", "oneapi::dal::kmeans_init::compute_input::data"], [4, 0, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result"], [4, 1, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result::Task"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result9centroidsE", "oneapi::dal::kmeans_init::compute_result::centroids"], [4, 2, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv", "oneapi::dal::kmeans_init::compute_result::compute_result"], [4, 0, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor"], [4, 1, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Float"], [4, 1, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Method"], [4, 1, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Task"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE", "oneapi::dal::kmeans_init::descriptor::cluster_count"], [4, 2, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor"], [4, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor::cluster_count"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor18local_trials_countE", "oneapi::dal::kmeans_init::descriptor::local_trials_count"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor4seedE", "oneapi::dal::kmeans_init::descriptor::seed"], [4, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE", "oneapi::dal::kmeans_init::method::by_default"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE", "oneapi::dal::kmeans_init::method::dense"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method19parallel_plus_denseE", "oneapi::dal::kmeans_init::method::parallel_plus_dense"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method15plus_plus_denseE", "oneapi::dal::kmeans_init::method::plus_plus_dense"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method12random_denseE", "oneapi::dal::kmeans_init::method::random_dense"], [4, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE", "oneapi::dal::kmeans_init::task::by_default"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init4task4initE", "oneapi::dal::kmeans_init::task::init"], [21, 0, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Distance"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Float"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Method"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE", "oneapi::dal::knn::descriptor::class_count"], [21, 2, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [21, 2, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor"], [21, 2, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::M"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::None"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::None"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::None"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::T"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::T"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::class_count"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::class_count"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::distance"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::distance"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor8distanceE", "oneapi::dal::knn::descriptor::distance"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE", "oneapi::dal::knn::descriptor::neighbor_count"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor14result_optionsE", "oneapi::dal::knn::descriptor::result_options"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor11voting_modeE", "oneapi::dal::knn::descriptor::voting_mode"], [21, 2, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer::Descriptor"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer::desc"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer::input"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input4dataE", "oneapi::dal::knn::infer_input::data"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE", "oneapi::dal::knn::infer_input::infer_input"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE", "oneapi::dal::knn::infer_input::infer_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE", "oneapi::dal::knn::infer_input::infer_input::model"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input5modelE", "oneapi::dal::knn::infer_input::model"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result9distancesE", "oneapi::dal::knn::infer_result::distances"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result7indicesE", "oneapi::dal::knn::infer_result::indices"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv", "oneapi::dal::knn::infer_result::infer_result"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result6labelsE", "oneapi::dal::knn::infer_result::labels"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result9responsesE", "oneapi::dal::knn::infer_result::responses"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result14result_optionsE", "oneapi::dal::knn::infer_result::result_options"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn6method11brute_forceE", "oneapi::dal::knn::method::brute_force"], [21, 5, 1, "_CPPv4N6oneapi3dal3knn6method10by_defaultE", "oneapi::dal::knn::method::by_default"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn6method7kd_treeE", "oneapi::dal::knn::method::kd_tree"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model::Task"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn5model5modelEv", "oneapi::dal::knn::model::model"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn16result_option_idE", "oneapi::dal::knn::result_option_id"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::knn::result_option_id::result_option_id"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idEv", "oneapi::dal::knn::result_option_id::result_option_id"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::knn::result_option_id::result_option_id::base"], [21, 5, 1, "_CPPv4N6oneapi3dal3knn4task10by_defaultE", "oneapi::dal::knn::task::by_default"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn4task14classificationE", "oneapi::dal::knn::task::classification"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn4task10regressionE", "oneapi::dal::knn::task::regression"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn4task6searchE", "oneapi::dal::knn::task::search"], [21, 2, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train::Descriptor"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train::desc"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train::input"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input4dataE", "oneapi::dal::knn::train_input::data"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input6labelsE", "oneapi::dal::knn::train_input::labels"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input9responsesE", "oneapi::dal::knn::train_input::responses"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5table", "oneapi::dal::knn::train_input::train_input"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5table", "oneapi::dal::knn::train_input::train_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::responses"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12train_result5modelE", "oneapi::dal::knn::train_result::model"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv", "oneapi::dal::knn::train_result::train_result"], [21, 6, 1, "_CPPv4N6oneapi3dal3knn11voting_modeE", "oneapi::dal::knn::voting_mode"], [16, 2, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute"], [16, 1, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute::Descriptor"], [16, 3, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute::desc"], [16, 3, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute::input"], [16, 0, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute_input"], [16, 1, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute_input::Task"], [16, 2, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::linear_kernel::compute_input::compute_input"], [16, 3, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::linear_kernel::compute_input::compute_input::x"], [16, 3, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::linear_kernel::compute_input::compute_input::y"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1xE", "oneapi::dal::linear_kernel::compute_input::x"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1yE", "oneapi::dal::linear_kernel::compute_input::y"], [16, 0, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel14compute_resultE", "oneapi::dal::linear_kernel::compute_result"], [16, 1, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel14compute_resultE", "oneapi::dal::linear_kernel::compute_result::Task"], [16, 2, 1, "_CPPv4N6oneapi3dal13linear_kernel14compute_result14compute_resultEv", "oneapi::dal::linear_kernel::compute_result::compute_result"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel14compute_result6valuesE", "oneapi::dal::linear_kernel::compute_result::values"], [16, 0, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor"], [16, 1, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor::Float"], [16, 1, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor::Method"], [16, 1, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor::Task"], [16, 2, 1, "_CPPv4N6oneapi3dal13linear_kernel10descriptor10descriptorEv", "oneapi::dal::linear_kernel::descriptor::descriptor"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5scaleE", "oneapi::dal::linear_kernel::descriptor::scale"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5shiftE", "oneapi::dal::linear_kernel::descriptor::shift"], [16, 5, 1, "_CPPv4N6oneapi3dal13linear_kernel6method10by_defaultE", "oneapi::dal::linear_kernel::method::by_default"], [16, 0, 1, "_CPPv4N6oneapi3dal13linear_kernel6method5denseE", "oneapi::dal::linear_kernel::method::dense"], [16, 5, 1, "_CPPv4N6oneapi3dal13linear_kernel4task10by_defaultE", "oneapi::dal::linear_kernel::task::by_default"], [16, 0, 1, "_CPPv4N6oneapi3dal13linear_kernel4task7computeE", "oneapi::dal::linear_kernel::task::compute"], [23, 0, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor"], [23, 1, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor::Float"], [23, 1, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor::Method"], [23, 1, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor::Task"], [23, 2, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor"], [23, 3, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor::fit_intercept"], [23, 3, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor::l1_regularization_coefficient"], [23, 3, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor::l2_regularization_coefficient"], [23, 4, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor14intercept_flagE", "oneapi::dal::logloss_objective::descriptor::intercept_flag"], [23, 4, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l1_regularization_coefficientE", "oneapi::dal::logloss_objective::descriptor::l1_regularization_coefficient"], [23, 4, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l2_regularization_coefficientE", "oneapi::dal::logloss_objective::descriptor::l2_regularization_coefficient"], [23, 5, 1, "_CPPv4N6oneapi3dal17logloss_objective6method10by_defaultE", "oneapi::dal::logloss_objective::method::by_default"], [23, 0, 1, "_CPPv4N6oneapi3dal17logloss_objective6method11dense_batchE", "oneapi::dal::logloss_objective::method::dense_batch"], [23, 5, 1, "_CPPv4N6oneapi3dal17logloss_objective4task10by_defaultE", "oneapi::dal::logloss_objective::task::by_default"], [23, 0, 1, "_CPPv4N6oneapi3dal17logloss_objective4task7computeE", "oneapi::dal::logloss_objective::task::compute"], [28, 0, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor"], [28, 1, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor::Float"], [28, 1, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor::Method"], [28, 1, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor::Task"], [28, 4, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor6degreeE", "oneapi::dal::minkowski_distance::descriptor::degree"], [28, 2, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEd", "oneapi::dal::minkowski_distance::descriptor::descriptor"], [28, 2, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEv", "oneapi::dal::minkowski_distance::descriptor::descriptor"], [28, 3, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEd", "oneapi::dal::minkowski_distance::descriptor::descriptor::degree"], [28, 5, 1, "_CPPv4N6oneapi3dal18minkowski_distance6method10by_defaultE", "oneapi::dal::minkowski_distance::method::by_default"], [28, 0, 1, "_CPPv4N6oneapi3dal18minkowski_distance6method5denseE", "oneapi::dal::minkowski_distance::method::dense"], [28, 5, 1, "_CPPv4N6oneapi3dal18minkowski_distance4task10by_defaultE", "oneapi::dal::minkowski_distance::task::by_default"], [28, 0, 1, "_CPPv4N6oneapi3dal18minkowski_distance4task7computeE", "oneapi::dal::minkowski_distance::task::compute"], [24, 2, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute"], [24, 1, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute::Descriptor"], [24, 3, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute::desc"], [24, 3, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute::input"], [24, 0, 1, "_CPPv4I0EN6oneapi3dal18objective_function13compute_inputE", "oneapi::dal::objective_function::compute_input"], [24, 1, 1, "_CPPv4I0EN6oneapi3dal18objective_function13compute_inputE", "oneapi::dal::objective_function::compute_input::Task"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input::data"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input::parameters"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input::responses"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input4dataE", "oneapi::dal::objective_function::compute_input::data"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input10parametersE", "oneapi::dal::objective_function::compute_input::parameters"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input9responsesE", "oneapi::dal::objective_function::compute_input::responses"], [24, 0, 1, "_CPPv4I0EN6oneapi3dal18objective_function14compute_resultE", "oneapi::dal::objective_function::compute_result"], [24, 1, 1, "_CPPv4I0EN6oneapi3dal18objective_function14compute_resultE", "oneapi::dal::objective_function::compute_result::Task"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result14compute_resultEv", "oneapi::dal::objective_function::compute_result::compute_result"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result8gradientE", "oneapi::dal::objective_function::compute_result::gradient"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result7hessianE", "oneapi::dal::objective_function::compute_result::hessian"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result14result_optionsE", "oneapi::dal::objective_function::compute_result::result_options"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result5valueE", "oneapi::dal::objective_function::compute_result::value"], [24, 0, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Float"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Method"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Objective"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Task"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorERK11objective_t", "oneapi::dal::objective_function::descriptor::descriptor"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorEv", "oneapi::dal::objective_function::descriptor::descriptor"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorERK11objective_t", "oneapi::dal::objective_function::descriptor::descriptor::obj"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor9objectiveE", "oneapi::dal::objective_function::descriptor::objective"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor14result_optionsE", "oneapi::dal::objective_function::descriptor::result_options"], [24, 5, 1, "_CPPv4N6oneapi3dal18objective_function6method10by_defaultE", "oneapi::dal::objective_function::method::by_default"], [24, 0, 1, "_CPPv4N6oneapi3dal18objective_function6method11dense_batchE", "oneapi::dal::objective_function::method::dense_batch"], [24, 0, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_idE", "oneapi::dal::objective_function::result_option_id"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::objective_function::result_option_id::result_option_id"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idEv", "oneapi::dal::objective_function::result_option_id::result_option_id"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::objective_function::result_option_id::result_option_id::base"], [24, 5, 1, "_CPPv4N6oneapi3dal18objective_function4task10by_defaultE", "oneapi::dal::objective_function::task::by_default"], [24, 0, 1, "_CPPv4N6oneapi3dal18objective_function4task7computeE", "oneapi::dal::objective_function::task::compute"], [8, 0, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor"], [8, 1, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Float"], [8, 1, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Method"], [8, 1, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE", "oneapi::dal::pca::descriptor::component_count"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor::component_count"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE", "oneapi::dal::pca::descriptor::deterministic"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor14result_optionsE", "oneapi::dal::pca::descriptor::result_options"], [8, 2, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer::Descriptor"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer::desc"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer::input"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input4dataE", "oneapi::dal::pca::infer_input::data"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::data"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::trained_model"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input5modelE", "oneapi::dal::pca::infer_input::model"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result::Task"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv", "oneapi::dal::pca::infer_result::infer_result"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12infer_result16transformed_dataE", "oneapi::dal::pca::infer_result::transformed_data"], [8, 5, 1, "_CPPv4N6oneapi3dal3pca6method10by_defaultE", "oneapi::dal::pca::method::by_default"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca6method3covE", "oneapi::dal::pca::method::cov"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca6method11precomputedE", "oneapi::dal::pca::method::precomputed"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca6method3svdE", "oneapi::dal::pca::method::svd"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca5model12eigenvectorsE", "oneapi::dal::pca::model::eigenvectors"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca5model5modelEv", "oneapi::dal::pca::model::model"], [8, 5, 1, "_CPPv4N6oneapi3dal3pca4task10by_defaultE", "oneapi::dal::pca::task::by_default"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE", "oneapi::dal::pca::task::dim_reduction"], [8, 2, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train::Descriptor"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train::desc"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train::input"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca11train_input4dataE", "oneapi::dal::pca::train_input::data"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input::data"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result11eigenvaluesE", "oneapi::dal::pca::train_result::eigenvalues"], [8, 2, 1, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv", "oneapi::dal::pca::train_result::get_eigenvectors"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result5meansE", "oneapi::dal::pca::train_result::means"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result5modelE", "oneapi::dal::pca::train_result::model"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result14result_optionsE", "oneapi::dal::pca::train_result::result_options"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv", "oneapi::dal::pca::train_result::train_result"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result9variancesE", "oneapi::dal::pca::train_result::variances"], [17, 2, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute"], [17, 1, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute::Descriptor"], [17, 3, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute::desc"], [17, 3, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute::input"], [17, 0, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute_input"], [17, 1, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute_input::Task"], [17, 2, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::polynomial_kernel::compute_input::compute_input"], [17, 3, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::polynomial_kernel::compute_input::compute_input::x"], [17, 3, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::polynomial_kernel::compute_input::compute_input::y"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1xE", "oneapi::dal::polynomial_kernel::compute_input::x"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1yE", "oneapi::dal::polynomial_kernel::compute_input::y"], [17, 0, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel14compute_resultE", "oneapi::dal::polynomial_kernel::compute_result"], [17, 1, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel14compute_resultE", "oneapi::dal::polynomial_kernel::compute_result::Task"], [17, 2, 1, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result14compute_resultEv", "oneapi::dal::polynomial_kernel::compute_result::compute_result"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result6valuesE", "oneapi::dal::polynomial_kernel::compute_result::values"], [17, 0, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor"], [17, 1, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor::Float"], [17, 1, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor::Method"], [17, 1, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor::Task"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor6degreeE", "oneapi::dal::polynomial_kernel::descriptor::degree"], [17, 2, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor10descriptorEv", "oneapi::dal::polynomial_kernel::descriptor::descriptor"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5scaleE", "oneapi::dal::polynomial_kernel::descriptor::scale"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5shiftE", "oneapi::dal::polynomial_kernel::descriptor::shift"], [17, 5, 1, "_CPPv4N6oneapi3dal17polynomial_kernel6method10by_defaultE", "oneapi::dal::polynomial_kernel::method::by_default"], [17, 0, 1, "_CPPv4N6oneapi3dal17polynomial_kernel6method5denseE", "oneapi::dal::polynomial_kernel::method::dense"], [17, 5, 1, "_CPPv4N6oneapi3dal17polynomial_kernel4task10by_defaultE", "oneapi::dal::polynomial_kernel::task::by_default"], [17, 0, 1, "_CPPv4N6oneapi3dal17polynomial_kernel4task7computeE", "oneapi::dal::polynomial_kernel::task::compute"], [11, 0, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Allocator"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Float"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Method"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Task"], [11, 2, 1, "_CPPv4N6oneapi3dal7preview20connected_components10descriptor10descriptorERK9Allocator", "oneapi::dal::preview::connected_components::descriptor::descriptor"], [11, 3, 1, "_CPPv4N6oneapi3dal7preview20connected_components10descriptor10descriptorERK9Allocator", "oneapi::dal::preview::connected_components::descriptor::descriptor::allocator"], [11, 2, 1, "_CPPv4NK6oneapi3dal7preview20connected_components10descriptor13get_allocatorEv", "oneapi::dal::preview::connected_components::descriptor::get_allocator"], [11, 0, 1, "_CPPv4N6oneapi3dal7preview20connected_components6method8afforestE", "oneapi::dal::preview::connected_components::method::afforest"], [11, 5, 1, "_CPPv4N6oneapi3dal7preview20connected_components6method10by_defaultE", "oneapi::dal::preview::connected_components::method::by_default"], [11, 2, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::Descriptor"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::Graph"], [11, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::desc"], [11, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::g"], [11, 5, 1, "_CPPv4N6oneapi3dal7preview20connected_components4task10by_defaultE", "oneapi::dal::preview::connected_components::task::by_default"], [11, 0, 1, "_CPPv4N6oneapi3dal7preview20connected_components4task19vertex_partitioningE", "oneapi::dal::preview::connected_components::task::vertex_partitioning"], [11, 0, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE", "oneapi::dal::preview::connected_components::vertex_partitioning_input"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE", "oneapi::dal::preview::connected_components::vertex_partitioning_input::Graph"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE", "oneapi::dal::preview::connected_components::vertex_partitioning_input::Task"], [11, 4, 1, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input5graphE", "oneapi::dal::preview::connected_components::vertex_partitioning_input::graph"], [11, 2, 1, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input25vertex_partitioning_inputERK5Graph", "oneapi::dal::preview::connected_components::vertex_partitioning_input::vertex_partitioning_input"], [11, 3, 1, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input25vertex_partitioning_inputERK5Graph", "oneapi::dal::preview::connected_components::vertex_partitioning_input::vertex_partitioning_input::g"], [11, 0, 1, "_CPPv4I0EN6oneapi3dal7preview20connected_components26vertex_partitioning_resultE", "oneapi::dal::preview::connected_components::vertex_partitioning_result"], [11, 1, 1, "_CPPv4I0EN6oneapi3dal7preview20connected_components26vertex_partitioning_resultE", "oneapi::dal::preview::connected_components::vertex_partitioning_result::Task"], [11, 4, 1, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result15component_countE", "oneapi::dal::preview::connected_components::vertex_partitioning_result::component_count"], [11, 4, 1, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result6labelsE", "oneapi::dal::preview::connected_components::vertex_partitioning_result::labels"], [11, 2, 1, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result26vertex_partitioning_resultEv", "oneapi::dal::preview::connected_components::vertex_partitioning_result::vertex_partitioning_result"], [42, 0, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph"], [42, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::Allocator"], [42, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::EdgeValue"], [42, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::GraphValue"], [42, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::IndexType"], [42, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::VertexValue"], [42, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph"], [42, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphEv", "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph"], [42, 3, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph::other"], [42, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphaSERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::operator="], [42, 3, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphaSERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::operator=::other"], [42, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphD0Ev", "oneapi::dal::preview::directed_adjacency_vector_graph::~directed_adjacency_vector_graph"], [44, 0, 1, "_CPPv4N6oneapi3dal7preview11empty_valueE", "oneapi::dal::preview::empty_value"], [39, 2, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_edge_count"], [39, 1, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_edge_count::Graph"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_edge_count::g"], [39, 2, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value"], [39, 1, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::Graph"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::g"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::u"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::v"], [39, 2, 1, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_vertex_count"], [39, 1, 1, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_vertex_count::Graph"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_vertex_count::g"], [39, 2, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree"], [39, 1, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree::Graph"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree::g"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree::u"], [39, 2, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors"], [39, 1, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors::Graph"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors::g"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors::u"], [39, 2, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree"], [39, 1, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree::Graph"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree::g"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree::u"], [39, 2, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors"], [39, 1, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors::Graph"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors::g"], [39, 3, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors::u"], [13, 0, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Allocator"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Float"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Method"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Task"], [13, 2, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor10descriptorE9Allocator", "oneapi::dal::preview::subgraph_isomorphism::descriptor::descriptor"], [13, 3, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor10descriptorE9Allocator", "oneapi::dal::preview::subgraph_isomorphism::descriptor::descriptor::allocator"], [13, 2, 1, "_CPPv4NK6oneapi3dal7preview20subgraph_isomorphism10descriptor13get_allocatorEv", "oneapi::dal::preview::subgraph_isomorphism::descriptor::get_allocator"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor4kindE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::kind"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor15max_match_countE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::max_match_count"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor14semantic_matchE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::semantic_match"], [13, 0, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::Graph"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::Task"], [13, 2, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input"], [13, 3, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input::pattern_graph"], [13, 3, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input::target_graph"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input13pattern_graphE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::pattern_graph"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input12target_graphE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::target_graph"], [13, 0, 1, "_CPPv4I0EN6oneapi3dal7preview20subgraph_isomorphism21graph_matching_resultE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result"], [13, 1, 1, "_CPPv4I0EN6oneapi3dal7preview20subgraph_isomorphism21graph_matching_resultE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::Task"], [13, 2, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result21graph_matching_resultEv", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::graph_matching_result"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result11match_countE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::match_count"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result12vertex_matchE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::vertex_match"], [13, 6, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4kindE", "oneapi::dal::preview::subgraph_isomorphism::kind"], [13, 5, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method10by_defaultE", "oneapi::dal::preview::subgraph_isomorphism::method::by_default"], [13, 0, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method4fastE", "oneapi::dal::preview::subgraph_isomorphism::method::fast"], [13, 2, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::Descriptor"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::Graph"], [13, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::desc"], [13, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::pattern"], [13, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::target"], [13, 5, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task10by_defaultE", "oneapi::dal::preview::subgraph_isomorphism::task::by_default"], [13, 0, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task7computeE", "oneapi::dal::preview::subgraph_isomorphism::task::compute"], [43, 0, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::Allocator"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::EdgeValue"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::GraphValue"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::IndexType"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::VertexValue"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphaSERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::operator="], [43, 3, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphaSERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::operator=::other"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphEv", "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph"], [43, 3, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph::other"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphD0Ev", "oneapi::dal::preview::undirected_adjacency_vector_graph::~undirected_adjacency_vector_graph"], [18, 2, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute"], [18, 1, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute::Descriptor"], [18, 3, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute::desc"], [18, 3, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute::input"], [18, 0, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute_input"], [18, 1, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute_input::Task"], [18, 2, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::rbf_kernel::compute_input::compute_input"], [18, 3, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::rbf_kernel::compute_input::compute_input::x"], [18, 3, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::rbf_kernel::compute_input::compute_input::y"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1xE", "oneapi::dal::rbf_kernel::compute_input::x"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1yE", "oneapi::dal::rbf_kernel::compute_input::y"], [18, 0, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel14compute_resultE", "oneapi::dal::rbf_kernel::compute_result"], [18, 1, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel14compute_resultE", "oneapi::dal::rbf_kernel::compute_result::Task"], [18, 2, 1, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result14compute_resultEv", "oneapi::dal::rbf_kernel::compute_result::compute_result"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result6valuesE", "oneapi::dal::rbf_kernel::compute_result::values"], [18, 0, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor"], [18, 1, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor::Float"], [18, 1, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor::Method"], [18, 1, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor::Task"], [18, 2, 1, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor10descriptorEv", "oneapi::dal::rbf_kernel::descriptor::descriptor"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor5sigmaE", "oneapi::dal::rbf_kernel::descriptor::sigma"], [18, 5, 1, "_CPPv4N6oneapi3dal10rbf_kernel6method10by_defaultE", "oneapi::dal::rbf_kernel::method::by_default"], [18, 0, 1, "_CPPv4N6oneapi3dal10rbf_kernel6method5denseE", "oneapi::dal::rbf_kernel::method::dense"], [18, 5, 1, "_CPPv4N6oneapi3dal10rbf_kernel4task10by_defaultE", "oneapi::dal::rbf_kernel::task::by_default"], [18, 0, 1, "_CPPv4N6oneapi3dal10rbf_kernel4task7computeE", "oneapi::dal::rbf_kernel::task::compute"], [37, 2, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read"], [37, 1, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::DataSource"], [37, 1, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::Object"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::ds"], [34, 0, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor"], [34, 1, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor::T"], [34, 2, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERK5range", "oneapi::dal::row_accessor::pull"], [34, 2, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::pull"], [34, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::pull::block"], [34, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERK5range", "oneapi::dal::row_accessor::pull::row_range"], [34, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::pull::row_range"], [34, 2, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push"], [34, 1, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push::U"], [34, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push::block"], [34, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push::row_range"], [34, 2, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor"], [34, 2, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERKN6detail13table_builderE", "oneapi::dal::row_accessor::row_accessor"], [34, 1, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::U"], [34, 3, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERKN6detail13table_builderE", "oneapi::dal::row_accessor::row_accessor::builder"], [34, 3, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::table"], [19, 2, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute"], [19, 1, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute::Descriptor"], [19, 3, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute::desc"], [19, 3, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute::input"], [19, 0, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute_input"], [19, 1, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute_input::Task"], [19, 2, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::sigmoid_kernel::compute_input::compute_input"], [19, 3, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::sigmoid_kernel::compute_input::compute_input::x"], [19, 3, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::sigmoid_kernel::compute_input::compute_input::y"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1xE", "oneapi::dal::sigmoid_kernel::compute_input::x"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1yE", "oneapi::dal::sigmoid_kernel::compute_input::y"], [19, 0, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel14compute_resultE", "oneapi::dal::sigmoid_kernel::compute_result"], [19, 1, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel14compute_resultE", "oneapi::dal::sigmoid_kernel::compute_result::Task"], [19, 2, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result14compute_resultEv", "oneapi::dal::sigmoid_kernel::compute_result::compute_result"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result6valuesE", "oneapi::dal::sigmoid_kernel::compute_result::values"], [19, 0, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor"], [19, 1, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor::Float"], [19, 1, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor::Method"], [19, 1, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor::Task"], [19, 2, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor10descriptorEv", "oneapi::dal::sigmoid_kernel::descriptor::descriptor"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5scaleE", "oneapi::dal::sigmoid_kernel::descriptor::scale"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5shiftE", "oneapi::dal::sigmoid_kernel::descriptor::shift"], [19, 5, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel6method10by_defaultE", "oneapi::dal::sigmoid_kernel::method::by_default"], [19, 0, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel6method5denseE", "oneapi::dal::sigmoid_kernel::method::dense"], [19, 5, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel4task10by_defaultE", "oneapi::dal::sigmoid_kernel::task::by_default"], [19, 0, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel4task7computeE", "oneapi::dal::sigmoid_kernel::task::compute"], [32, 0, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Float"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Kernel"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Method"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor18accuracy_thresholdE", "oneapi::dal::svm::descriptor::accuracy_threshold"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor1cE", "oneapi::dal::svm::descriptor::c"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor10cache_sizeE", "oneapi::dal::svm::descriptor::cache_size"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor11class_countE", "oneapi::dal::svm::descriptor::class_count"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm10descriptor10descriptorERK6Kernel", "oneapi::dal::svm::descriptor::descriptor"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm10descriptor10descriptorERK6Kernel", "oneapi::dal::svm::descriptor::descriptor::kernel"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor7epsilonE", "oneapi::dal::svm::descriptor::epsilon"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor6kernelE", "oneapi::dal::svm::descriptor::kernel"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor19max_iteration_countE", "oneapi::dal::svm::descriptor::max_iteration_count"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor2nuE", "oneapi::dal::svm::descriptor::nu"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor9shrinkingE", "oneapi::dal::svm::descriptor::shrinking"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor3tauE", "oneapi::dal::svm::descriptor::tau"], [32, 2, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer::Descriptor"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer::desc"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer::input"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm11infer_inputE", "oneapi::dal::svm::infer_input"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm11infer_inputE", "oneapi::dal::svm::infer_input::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11infer_input4dataE", "oneapi::dal::svm::infer_input::data"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::svm::infer_input::infer_input"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::svm::infer_input::infer_input::data"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::svm::infer_input::infer_input::trained_model"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11infer_input5modelE", "oneapi::dal::svm::infer_input::model"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm12infer_resultE", "oneapi::dal::svm::infer_result"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm12infer_resultE", "oneapi::dal::svm::infer_result::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12infer_result17decision_functionE", "oneapi::dal::svm::infer_result::decision_function"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm12infer_result12infer_resultEv", "oneapi::dal::svm::infer_result::infer_result"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12infer_result6labelsE", "oneapi::dal::svm::infer_result::labels"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12infer_result9responsesE", "oneapi::dal::svm::infer_result::responses"], [32, 5, 1, "_CPPv4N6oneapi3dal3svm6method10by_defaultE", "oneapi::dal::svm::method::by_default"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm6method3smoE", "oneapi::dal::svm::method::smo"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm6method7thunderE", "oneapi::dal::svm::method::thunder"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm5modelE", "oneapi::dal::svm::model"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm5modelE", "oneapi::dal::svm::model::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model4biasE", "oneapi::dal::svm::model::bias"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model6biasesE", "oneapi::dal::svm::model::biases"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model6coeffsE", "oneapi::dal::svm::model::coeffs"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model17first_class_labelE", "oneapi::dal::svm::model::first_class_label"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model20first_class_responseE", "oneapi::dal::svm::model::first_class_response"], [32, 2, 1, "_CPPv4NK6oneapi3dal3svm5model24get_support_vector_countEv", "oneapi::dal::svm::model::get_support_vector_count"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm5model5modelEv", "oneapi::dal::svm::model::model"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model18second_class_labelE", "oneapi::dal::svm::model::second_class_label"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model21second_class_responseE", "oneapi::dal::svm::model::second_class_response"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model15support_vectorsE", "oneapi::dal::svm::model::support_vectors"], [32, 5, 1, "_CPPv4N6oneapi3dal3svm4task10by_defaultE", "oneapi::dal::svm::task::by_default"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task14classificationE", "oneapi::dal::svm::task::classification"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task17nu_classificationE", "oneapi::dal::svm::task::nu_classification"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task13nu_regressionE", "oneapi::dal::svm::task::nu_regression"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task10regressionE", "oneapi::dal::svm::task::regression"], [32, 2, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train::Descriptor"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train::desc"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train::input"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm11train_inputE", "oneapi::dal::svm::train_input"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm11train_inputE", "oneapi::dal::svm::train_input::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input4dataE", "oneapi::dal::svm::train_input::data"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input6labelsE", "oneapi::dal::svm::train_input::labels"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input9responsesE", "oneapi::dal::svm::train_input::responses"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input::data"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input::responses"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input::weights"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input7weightsE", "oneapi::dal::svm::train_input::weights"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm12train_resultE", "oneapi::dal::svm::train_result"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm12train_resultE", "oneapi::dal::svm::train_result::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result4biasE", "oneapi::dal::svm::train_result::bias"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result6biasesE", "oneapi::dal::svm::train_result::biases"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result6coeffsE", "oneapi::dal::svm::train_result::coeffs"], [32, 2, 1, "_CPPv4NK6oneapi3dal3svm12train_result24get_support_vector_countEv", "oneapi::dal::svm::train_result::get_support_vector_count"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result5modelE", "oneapi::dal::svm::train_result::model"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result15support_indicesE", "oneapi::dal::svm::train_result::support_indices"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result15support_vectorsE", "oneapi::dal::svm::train_result::support_vectors"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm12train_result12train_resultEv", "oneapi::dal::svm::train_result::train_result"], [48, 0, 1, "_CPPv4N6oneapi3dal5tableE", "oneapi::dal::table"], [48, 2, 1, "_CPPv4NK6oneapi3dal5table16get_column_countEv", "oneapi::dal::table::get_column_count"], [48, 2, 1, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv", "oneapi::dal::table::get_data_layout"], [48, 2, 1, "_CPPv4NK6oneapi3dal5table8get_kindEv", "oneapi::dal::table::get_kind"], [48, 2, 1, "_CPPv4NK6oneapi3dal5table12get_metadataEv", "oneapi::dal::table::get_metadata"], [48, 2, 1, "_CPPv4NK6oneapi3dal5table13get_row_countEv", "oneapi::dal::table::get_row_count"], [48, 2, 1, "_CPPv4NK6oneapi3dal5table8has_dataEv", "oneapi::dal::table::has_data"], [48, 2, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator="], [48, 2, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator="], [48, 2, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table"], [48, 2, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table"], [48, 2, 1, "_CPPv4N6oneapi3dal5table5tableEv", "oneapi::dal::table::table"], [48, 0, 1, "_CPPv4N6oneapi3dal14table_metadataE", "oneapi::dal::table_metadata"], [48, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type"], [48, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type::feature_index"], [48, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv", "oneapi::dal::table_metadata::get_feature_count"], [48, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type"], [48, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type::feature_index"], [48, 2, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE", "oneapi::dal::table_metadata::table_metadata"], [48, 2, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv", "oneapi::dal::table_metadata::table_metadata"], [48, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE", "oneapi::dal::table_metadata::table_metadata::dtypes"], [48, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE", "oneapi::dal::table_metadata::table_metadata::ftypes"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:templateParam", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "templateParam", "C++ template parameter"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"]}, "titleterms": {"dbscan": [1, 67, 68, 322], "mathemat": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 372], "formul": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352], "program": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 54, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 357, 358, 360, 361, 363, 364, 367, 368, 369, 374], "interfac": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 42, 43, 44, 46, 47, 48, 50, 52, 55, 175, 181, 182, 200, 318, 321, 322, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352, 357, 358, 360, 361, 363, 364, 367, 368, 369], "descriptor": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32], "method": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 54, 70, 105, 136, 140, 141, 147, 148, 174, 185, 324, 325, 326, 329, 330, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 352], "tag": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32], "task": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32], "comput": [1, 4, 5, 11, 13, 16, 17, 18, 19, 24, 29, 54, 66, 69, 70, 85, 94, 95, 96, 97, 102, 103, 106, 110, 113, 119, 123, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 149, 153, 170, 174, 188, 193, 271, 275, 315, 322, 325, 326, 332, 334, 337, 338, 339, 340, 343, 344, 345, 346, 348, 349, 370, 373, 374], "input": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 56, 62, 63, 64, 65, 67, 68, 75, 78, 79, 82, 85, 86, 95, 96, 98, 99, 101, 102, 103, 104, 105, 110, 113, 116, 117, 118, 121, 122, 125, 126, 129, 130, 131, 132, 133, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 192, 195, 197, 198], "result": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 65, 68, 103, 118, 148, 155, 169, 362], "oper": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 37, 50, 54, 109, 182, 362, 374], "usag": [1, 3, 4, 8, 21, 29, 33, 34, 36, 37, 39, 50, 52, 54, 71, 91, 92, 112, 115, 171, 172, 194, 195, 196, 197, 198, 322, 324, 325, 329, 342, 349, 357, 358, 360, 361], "exampl": [1, 3, 4, 8, 11, 13, 21, 29, 32, 33, 34, 36, 37, 39, 52, 54, 55, 56, 57, 58, 59, 61, 62, 66, 69, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 91, 92, 97, 100, 101, 106, 110, 112, 113, 115, 119, 123, 125, 126, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 157, 158, 159, 160, 163, 164, 165, 167, 170, 171, 172, 175, 176, 179, 180, 182, 184, 186, 187, 188, 201, 202, 245, 322, 324, 325, 329, 332, 334, 342, 349, 352, 356, 357, 358, 360, 361, 366, 375], "cluster": [2, 69, 106, 323], "k": [3, 4, 21, 100, 102, 103, 104, 105, 106, 324, 325, 342, 355], "mean": [3, 4, 102, 103, 104, 105, 106, 132, 324, 325], "model": [3, 8, 9, 21, 32, 51, 52, 54, 85, 178, 195, 196, 197, 198, 374], "train": [3, 5, 8, 9, 16, 17, 18, 19, 21, 29, 32, 57, 58, 59, 61, 70, 71, 72, 74, 75, 76, 90, 91, 92, 94, 96, 97, 100, 107, 109, 110, 112, 113, 114, 115, 120, 121, 122, 123, 165, 167, 171, 172, 191, 195, 196, 197, 198, 277, 286, 304, 324, 329, 330, 342, 352], "infer": [3, 8, 9, 21, 32, 277, 286, 304, 324, 329, 330, 342, 352], "initi": [4, 54, 85, 97, 98, 99, 104, 105, 106, 182, 325], "covari": [5, 6, 63, 64, 65, 66, 326, 327, 329], "decomposit": [7, 62, 151, 152, 153, 154, 155, 168, 169, 170, 328], "princip": [8, 146, 147, 148, 149, 150, 160, 329], "compon": [8, 11, 146, 147, 148, 149, 150, 160, 329, 332], "analysi": [8, 146, 147, 148, 149, 150, 160, 173, 329], "pca": [8, 329], "decis": [9, 70, 71, 72, 73, 74, 75, 76, 77, 330, 353], "forest": [9, 70, 71, 72, 73, 76, 330], "classif": [9, 21, 71, 75, 91, 157, 159, 165, 195, 330, 342], "regress": [9, 72, 76, 92, 108, 111, 112, 113, 114, 115, 158, 167, 198, 330, 342, 352], "df": [9, 330], "enum": [9, 13, 21, 54], "class": [9, 13, 21, 54, 159, 172, 185], "error_metric_mod": 9, "variable_importance_mod": 9, "infer_mod": 9, "voting_mod": 9, "splitter_mod": 9, "ensembl": [10, 331], "connect": [11, 332], "preview": [11, 13], "vertex_partit": 11, "graph": [12, 39, 40, 41, 42, 43, 44, 333, 363, 364, 365, 366, 370], "subgraph": [13, 334], "isomorph": [13, 334], "graph_match": 13, "algorithm": [14, 56, 62, 63, 64, 65, 67, 68, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 101, 102, 103, 104, 105, 113, 116, 117, 118, 121, 125, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 174, 181, 185, 192, 195, 197, 198, 335], "kernel": [15, 16, 17, 18, 19, 101, 336, 337, 338, 339, 340], "function": [15, 18, 22, 24, 39, 54, 101, 128, 129, 133, 134, 200, 336, 339, 343], "linear": [16, 101, 111, 112, 113, 158, 337], "polynomi": [17, 338], "radial": [18, 101, 339], "basi": [18, 101, 339], "rbf": [18, 339], "sigmoid": [19, 340], "nearest": [20, 21, 100, 341, 342], "neighbor": [20, 21, 100, 341, 342], "knn": [20, 100, 341], "nn": [21, 342], "option": [21, 24, 132], "object": [22, 24, 37, 54, 128, 129, 134, 343, 366], "logist": [23, 115, 131, 344], "loss": [23, 130, 131, 344], "chebyshev": [25, 345], "distanc": [25, 26, 27, 28, 78, 79, 80, 345, 346, 347, 348], "cosin": [26, 79, 346], "pairwis": [27, 347], "minkowski": [28, 348], "basic": [29, 349], "statist": [29, 30, 349, 350], "support": [31, 32, 39, 171, 174, 200, 343, 351, 352, 374], "vector": [31, 32, 40, 41, 42, 43, 171, 351, 352, 363, 364], "machin": [31, 32, 171, 351, 352, 370], "classifi": [32, 57, 58, 59, 61, 100, 120, 121, 122, 123, 171, 172, 352], "svm": [32, 352], "column": [33, 357], "accessor": [33, 34, 35, 357, 358, 359, 366], "row": [34, 46, 358, 367], "arrai": [36, 360], "csv": [37, 361], "data": [37, 38, 45, 48, 51, 54, 175, 176, 177, 178, 179, 180, 199, 318, 360, 361, 362, 366, 369, 374], "sourc": [37, 38, 180, 361, 362, 366], "read": [37, 362], "oneapi": [37, 201, 202, 245, 318, 321, 370], "dal": 37, "arg": [37, 362], "servic": [39, 40, 41, 190], "relat": [39, 355], "type": [39, 48, 54, 74, 184, 359, 362, 365, 369], "direct": [40, 42, 363], "adjac": [40, 41, 42, 43, 363, 364], "undirect": [41, 43, 364], "trait": 44, "manag": [45, 177, 188, 189, 366], "compress": [46, 175, 200, 367], "spars": [46, 48, 367], "csr": [46, 184, 367], "tabl": [46, 47, 48, 183, 184, 366, 367, 368, 369], "homogen": [47, 184, 368], "metadata": [48, 366], "layout": 48, "featur": 48, "index": 48, "c": [49, 54, 202], "api": [49, 54, 175], "commun": 50, "usm": 50, "non": [50, 54], "memori": [50, 54, 139, 189], "request": 50, "reducion": 50, "distribut": [51, 52, 54, 64, 68, 81, 82, 83, 84, 95, 96, 99, 103, 105, 113, 117, 121, 147, 149, 151, 155, 169, 170, 193, 322, 324, 326, 329, 330, 342, 343, 344, 349, 370, 373, 374], "singl": [51, 158, 374], "process": [51, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 193], "multipl": [51, 374], "spmd": [52, 374], "bibliographi": 53, "code": 54, "guidelin": 54, "style": 54, "gener": [54, 70, 85, 175, 182], "rule": [54, 56], "whitespac": 54, "file": 54, "header": 54, "name": 54, "convent": 54, "Not": 54, "recommend": [54, 197], "good": 54, "variabl": [54, 70, 71, 330], "member": 54, "constant": 54, "stream": 54, "scheme": 54, "declar": 54, "order": [54, 116, 117, 118, 119], "typedef": 54, "defin": [54, 162], "common": [54, 370], "definit": [54, 157, 159, 334, 362], "statement": [54, 101, 125], "comment": 54, "templat": 54, "deprec": [54, 200], "note": 54, "local": [54, 64, 68, 95, 96, 99, 103, 105, 113, 117, 121, 147, 155, 169], "static": 54, "global": 54, "undetermin": 54, "construct": 54, "destruct": 54, "within": 54, "scope": 54, "const": 54, "mutabl": 54, "ownership": [54, 360], "raii": 54, "resourc": 54, "acquisit": 54, "i": 54, "smart": 54, "pointer": 54, "pass": 54, "paramet": [54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 174, 192, 195, 197, 198], "primit": 54, "refer": [54, 318], "preprocessor": 54, "macro": 54, "namespac": 54, "write": 54, "short": 54, "": [54, 324], "argument": 54, "infix": 54, "postfix": 54, "increment": 54, "assert": 54, "constructor": 54, "trivial": 54, "clone": 54, "all": 54, "part": 54, "an": 54, "assign": 54, "new": 54, "delet": 54, "access": 54, "control": 54, "metaprogram": 54, "hide": 54, "implement": 54, "sdl": 54, "requir": [54, 359, 360, 365, 369, 376], "handl": [54, 187], "perform": [54, 56, 62, 66, 70, 78, 79, 81, 85, 97, 106, 110, 123, 143, 149, 151, 170, 171], "orient": 54, "convers": 54, "safe": 54, "verif": 54, "from": 54, "int": 54, "size_t": 54, "work": [54, 156, 162], "alloc": 54, "error": [54, 70, 71, 72, 132, 187, 330], "do": 54, "freed": 54, "avoid": 54, "null": 54, "de": 54, "free": 54, "same": 54, "buffer": 54, "more": 54, "than": 54, "onc": 54, "take": 54, "size": 54, "determin": 54, "point": 54, "set": [54, 156], "up": 54, "zero": 54, "after": 54, "us": [54, 100, 147, 148, 374], "special": 54, "copi": 54, "byte": 54, "between": [54, 366], "fill": 54, "check": 54, "except": 54, "inject": 54, "daal": [55, 200, 318], "associ": 56, "detail": [56, 57, 58, 59, 61, 62, 66, 69, 70, 71, 72, 74, 75, 76, 81, 83, 84, 85, 90, 91, 92, 97, 100, 106, 107, 109, 112, 114, 115, 119, 123, 126, 130, 131, 132, 138, 140, 143, 144, 145, 149, 150, 157, 158, 159, 160, 163, 170, 171, 172, 359, 362, 366], "batch": [56, 57, 58, 59, 61, 62, 63, 67, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 98, 100, 101, 102, 104, 110, 113, 115, 116, 120, 125, 126, 141, 143, 144, 145, 146, 149, 150, 152, 154, 157, 158, 159, 160, 163, 164, 165, 167, 168, 171, 172, 193, 373], "output": [56, 58, 62, 63, 64, 65, 67, 68, 70, 71, 72, 78, 79, 82, 85, 86, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 115, 116, 117, 118, 121, 125, 126, 129, 130, 131, 132, 133, 136, 137, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 163, 164, 168, 169, 172, 192, 195, 197, 198], "consider": [56, 62, 66, 70, 78, 79, 81, 85, 97, 106, 110, 123, 143, 149, 151, 170, 171], "adaboost": [57, 58], "stage": [57, 58, 59, 61, 70, 71, 72, 74, 75, 76, 90, 91, 92, 97, 100, 107, 109, 112, 114, 115, 123, 171, 172, 195, 197, 198], "predict": [57, 58, 59, 61, 70, 71, 72, 74, 75, 76, 90, 91, 92, 94, 95, 97, 100, 107, 109, 110, 112, 113, 114, 115, 120, 123, 165, 167, 171, 172, 191, 195, 196, 197, 198], "multiclass": 58, "brownboost": 59, "boost": [60, 90, 91, 92, 93], "logitboost": 61, "choleski": 62, "correl": [63, 64, 65, 66, 78, 147, 148], "varianc": [63, 64, 65, 66], "matric": [63, 64, 65, 66], "step": [64, 68, 95, 96, 99, 103, 105, 113, 117, 121, 147, 155, 169], "1": [64, 68, 95, 96, 99, 103, 105, 113, 117, 121, 147, 155, 169], "node": [64, 68, 95, 96, 99, 103, 105, 113, 117, 121, 147, 155, 169], "2": [64, 68, 96, 99, 103, 105, 113, 117, 121, 147, 155, 169], "master": [64, 68, 96, 103, 105, 113, 117, 121, 147, 155, 169], "onlin": [65, 113, 118, 122, 148, 149, 151, 154, 168, 170, 193, 373], "partial": [65, 68, 103, 117, 118, 148, 155, 169], "3": [68, 96, 99, 105, 155, 169], "4": [68, 96, 105], "5": [68, 105], "6": 68, "7": 68, "8": 68, "9": 68, "10": 68, "11": 68, "12": 68, "13": 68, "densiti": 69, "base": 69, "spatial": 69, "applic": [69, 185, 356], "nois": 69, "inexact": 70, "histogram": 70, "split": [70, 74, 75, 76, 90, 330], "criteria": [70, 74, 75, 330], "termin": [70, 330], "tree": [70, 74, 75, 76, 77, 90, 91, 92, 93, 100, 330, 342, 353, 355], "build": [70, 330, 356, 375], "strategi": [70, 330], "depth": [70, 330], "first": [70, 330], "best": [70, 330], "random": [70, 105], "number": 70, "addit": [70, 330], "characterist": [70, 117, 118, 134, 330], "calcul": [70, 71, 72, 90, 330], "out": [70, 71, 72, 330], "bag": [70, 71, 72, 330], "import": [70, 71, 330], "impur": [71, 72, 330], "altern": [71, 91, 92, 94, 95, 96, 97, 98, 99, 112, 115, 171, 172, 191], "test": [74, 158], "post": 74, "prune": 74, "criterion": 76, "matrix": [78, 79, 80, 157, 159], "bernoulli": 81, "normal": [83, 124], "uniform": 84, "expect": 85, "maxim": 85, "em": 85, "form": 85, "gaussian": 85, "mixtur": 85, "engin": [86, 87, 88, 89], "mcg59": 87, "mcg58": 87, "mt19937": 88, "mt2203": 89, "gradient": [90, 91, 92, 93, 140, 141, 343, 344], "mode": [90, 174, 193, 322, 324, 326, 329, 330, 342, 343, 344, 349, 370, 373], "implicit": [94, 95, 96, 97, 98, 99], "least": [94, 95, 96, 97, 98, 99, 109], "squar": [94, 95, 96, 97, 98, 99, 132], "rate": 95, "d": [100, 342, 355], "brute": [100, 342], "forc": [100, 342], "problem": [101, 125], "determinist": 105, "plusplu": 105, "parallelplu": 105, "centroid": 106, "elast": [107, 108, 110], "net": [107, 108, 110], "lasso": [108, 109, 110], "absolut": 109, "shrinkag": 109, "select": 109, "ridg": [111, 113, 114], "low": [116, 117, 118, 119], "moment": [116, 117, 118, 119], "na\u00efv": [120, 121, 122, 123], "bay": [120, 121, 122, 123], "min": 125, "max": 125, "z": 126, "score": 126, "iter": [127, 137], "solver": [127, 135, 137, 173], "cross": 130, "entropi": 130, "logit": 131, "mse": [132, 330], "sum": 133, "precomput": 134, "optim": [135, 173], "adapt": 136, "subgradi": 136, "coordin": 138, "descent": [138, 141], "limit": 139, "broyden": 139, "fletcher": 139, "goldfarb": 139, "shanno": 139, "transform": [139, 150], "intrins": 139, "hessian": [139, 343, 344], "updat": 139, "stochast": [140, 141], "averag": 140, "acceler": 140, "mini": 141, "default": [141, 143, 145, 156], "momentum": 141, "outlier": [142, 143, 144, 145], "detect": [142, 143, 144, 145], "multivari": [143, 144], "valu": [143, 145, 168, 169, 170, 343, 344], "bacon": 144, "univari": 145, "svd": [147, 148, 329], "qr": [151, 152, 153, 154, 155], "pivot": [152, 153, 154, 155], "without": [153, 154, 155], "metric": [156, 157, 158, 159, 160, 161, 162, 330], "qualiti": [157, 158, 159, 160, 161, 162], "binari": 157, "notat": [157, 159, 372], "confus": [157, 159], "insignific": 158, "beta": 158, "group": 158, "multi": [159, 172], "user": 162, "quantil": 163, "sort": 164, "stump": [165, 166, 167], "singular": [168, 169, 170], "cpu": [174, 325], "gpu": 174, "decompress": 175, "dictionari": 176, "serial": 179, "deseri": 179, "sampl": 180, "essenti": 181, "deiniti": 182, "numer": [183, 184], "heterogen": 184, "ao": 184, "soa": 184, "merg": 184, "provid": 185, "callback": 185, "host": 185, "hostappifac": 185, "extract": 186, "version": 186, "inform": 186, "environ": 188, "librari": [194, 318, 356], "specif": [195, 197, 198, 369, 374], "system": [197, 376], "introduct": [199, 371], "analyt": [199, 318, 370], "pipelin": 199, "notic": [200, 320], "java": 200, "cpp": [200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "sycl": 200, "abi": 200, "compat": 200, "maco": 200, "basic_statistics_dense_batch": [203, 246], "column_accessor_homogen": [204, 247], "connected_components_batch": 205, "cor_dense_batch": [206, 248], "cov_dense_batch": [207, 249], "csr_accessor": 208, "dbscan_brute_force_batch": [209, 250], "df_cls_dense_batch": 210, "df_reg_dense_batch": 211, "directed_graph": 212, "graph_service_funct": 213, "jaccard_batch": 214, "jaccard_batch_app": 215, "kmeans_init_dens": [216, 257], "kmeans_lloyd_dense_batch": [217, 258], "knn_cls_brute_force_dense_batch": [218, 259], "knn_cls_kd_tree_dense_batch": 219, "knn_search_brute_force_dense_batch": [220, 261], "linear_kernel_dense_batch": [221, 262], "linear_regression_dense_batch": [222, 263], "logloss_dense_batch": 223, "louvain_batch": 224, "pca_dense_batch": 225, "pca_precomputed_dense_batch": 226, "polynomial_kernel_dense_batch": 227, "rbf_kernel_dense_batch": [228, 267], "shortest_paths_batch": 229, "sigmoid_kernel_dense_batch": 230, "subgraph_isomorphism_batch": 231, "svm_multi_class_thunder_csr_batch": 232, "svm_multi_class_thunder_dense_batch": 233, "svm_nu_cls_thunder_csr_batch": 234, "svm_nu_cls_thunder_dense_batch": 235, "svm_nu_reg_thunder_csr_batch": 236, "svm_nu_reg_thunder_dense_batch": 237, "svm_reg_thunder_csr_batch": 238, "svm_reg_thunder_dense_batch": 239, "svm_two_class_smo_csr_batch": 240, "svm_two_class_smo_dense_batch": 241, "svm_two_class_thunder_csr_batch": 242, "svm_two_class_thunder_dense_batch": [243, 268], "triangle_counting_batch": 244, "dpc": 245, "df_cls_hist_batch": 251, "df_cls_hist_batch_random": 252, "df_cls_traverse_model": 253, "df_reg_hist_batch": 254, "df_reg_hist_batch_random": 255, "df_reg_traverse_model": 256, "knn_reg_brute_force_dense_batch": 260, "pca_cor_dense_batch": 264, "pca_precomputed_cor_dense_batch": 265, "pca_precomputed_cov_dense_batch": 266, "oned": [318, 356, 370], "v": 318, "get": 318, "start": [318, 375], "develop": 318, "guid": 318, "instal": 319, "disclaim": 320, "lloyd": 324, "dens": [325, 326, 330, 337, 338, 339, 340, 345, 346, 348, 349], "random_dens": 325, "plus_plus_dens": 325, "onli": 325, "parallel_plus_dens": 325, "sign": 329, "flip": 329, "techniqu": 329, "hist": 330, "afforest": 332, "fast": 334, "search": 342, "dense_batch": [343, 344], "smo": 352, "thunder": 352, "appendix": 354, "term": [355, 370], "linux": 356, "o": 356, "window": 356, "debug": 356, "shortcut": 362, "kei": 366, "concept": 366, "dataset": 366, "interact": 366, "format": 369, "glossari": 370, "learn": 370, "collect": 374, "backend": 374, "restrict": 374, "quick": 375, "befor": 375, "you": 375, "begin": 375, "end": 375, "run": 375, "hardwar": 376, "softwar": 376}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"DBSCAN": [[1, "dbscan"], [322, "dbscan"]], "Mathematical formulation": [[1, "mathematical-formulation"], [3, "mathematical-formulation"], [4, "mathematical-formulation"], [5, "mathematical-formulation"], [8, "mathematical-formulation"], [9, "mathematical-formulation"], [11, "mathematical-formulation"], [13, "mathematical-formulation"], [16, "mathematical-formulation"], [17, "mathematical-formulation"], [18, "mathematical-formulation"], [19, "mathematical-formulation"], [21, "mathematical-formulation"], [23, "mathematical-formulation"], [24, "mathematical-formulation"], [25, "mathematical-formulation"], [26, "mathematical-formulation"], [28, "mathematical-formulation"], [29, "mathematical-formulation"], [32, "mathematical-formulation"], [322, "mathematical-formulation"], [324, "mathematical-formulation"], [325, "mathematical-formulation"], [326, "mathematical-formulation"], [329, "mathematical-formulation"], [330, "mathematical-formulation"], [332, "mathematical-formulation"], [334, "mathematical-formulation"], [337, "mathematical-formulation"], [338, "mathematical-formulation"], [339, "mathematical-formulation"], [340, "mathematical-formulation"], [342, "mathematical-formulation"], [343, "mathematical-formulation"], [344, "mathematical-formulation"], [345, "mathematical-formulation"], [346, "mathematical-formulation"], [348, "mathematical-formulation"], [349, "mathematical-formulation"], [352, "mathematical-formulation"]], "Programming Interface": [[1, "programming-interface"], [3, "programming-interface"], [4, "programming-interface"], [5, "programming-interface"], [8, "programming-interface"], [9, "programming-interface"], [11, "programming-interface"], [13, "programming-interface"], [16, "programming-interface"], [17, "programming-interface"], [18, "programming-interface"], [19, "programming-interface"], [21, "programming-interface"], [23, "programming-interface"], [24, "programming-interface"], [25, "programming-interface"], [26, "programming-interface"], [28, "programming-interface"], [29, "programming-interface"], [32, "programming-interface"], [37, "programming-interface"], [46, "programming-interface"], [322, "programming-interface"], [324, "programming-interface"], [325, "programming-interface"], [326, "programming-interface"], [329, "programming-interface"], [330, "programming-interface"], [332, "programming-interface"], [334, "programming-interface"], [337, "programming-interface"], [338, "programming-interface"], [339, "programming-interface"], [340, "programming-interface"], [342, "programming-interface"], [343, "programming-interface"], [344, "programming-interface"], [345, "programming-interface"], [346, "programming-interface"], [348, "programming-interface"], [349, "programming-interface"], [352, "programming-interface"], [361, "programming-interface"], [367, "programming-interface"]], "Descriptor": [[1, "descriptor"], [3, "descriptor"], [4, "descriptor"], [5, "descriptor"], [8, "descriptor"], [9, "descriptor"], [11, "descriptor"], [13, "descriptor"], [16, "descriptor"], [17, "descriptor"], [18, "descriptor"], [19, "descriptor"], [21, "descriptor"], [23, "descriptor"], [24, "descriptor"], [25, "descriptor"], [26, "descriptor"], [28, "descriptor"], [29, "descriptor"], [32, "descriptor"]], "Method tags": [[1, "method-tags"], [3, "method-tags"], [4, "method-tags"], [5, "method-tags"], [8, "method-tags"], [9, "method-tags"], [11, "method-tags"], [13, "method-tags"], [16, "method-tags"], [17, "method-tags"], [18, "method-tags"], [19, "method-tags"], [21, "method-tags"], [23, "method-tags"], [24, "method-tags"], [25, "method-tags"], [26, "method-tags"], [28, "method-tags"], [29, "method-tags"], [32, "method-tags"]], "Task tags": [[1, "task-tags"], [3, "task-tags"], [4, "task-tags"], [5, "task-tags"], [8, "task-tags"], [9, "task-tags"], [11, "task-tags"], [13, "task-tags"], [16, "task-tags"], [17, "task-tags"], [18, "task-tags"], [19, "task-tags"], [21, "task-tags"], [23, "task-tags"], [24, "task-tags"], [25, "task-tags"], [26, "task-tags"], [28, "task-tags"], [29, "task-tags"], [32, "task-tags"]], "Computation compute(...)": [[1, "computation-compute"]], "Input": [[1, "input"], [3, "input"], [3, "kmeans-i-api-input"], [4, "input"], [5, "input"], [8, "input"], [8, "pca-i-api-input"], [9, "input"], [9, "df-i-api-input"], [11, "input"], [13, "input"], [16, "input"], [17, "input"], [18, "input"], [19, "input"], [21, "input"], [21, "knn-i-api-input"], [24, "input"], [29, "input"], [32, "input"], [32, "svm-i-api-input"], [98, "input"], [99, "input"], [99, "id1"], [104, "input"], [129, "input"]], "Result": [[1, "result"], [3, "result"], [3, "kmeans-i-api-result"], [4, "result"], [5, "result"], [8, "result"], [8, "pca-i-api-result"], [9, "result"], [9, "df-i-api-result"], [11, "result"], [13, "result"], [16, "result"], [17, "result"], [18, "result"], [19, "result"], [21, "result"], [21, "knn-i-api-result"], [24, "result"], [29, "result"], [32, "result"], [32, "svm-i-api-result"], [362, "result"]], "Operation": [[1, "operation"], [3, "operation"], [3, "id3"], [4, "operation"], [5, "operation"], [8, "operation"], [8, "id3"], [9, "operation"], [9, "id5"], [11, "operation"], [13, "operation"], [16, "operation"], [17, "operation"], [18, "operation"], [19, "operation"], [21, "operation"], [21, "id3"], [24, "operation"], [29, "operation"], [32, "operation"], [32, "id3"], [37, "operation"]], "Usage example": [[1, "usage-example"], [3, "usage-example"], [4, "usage-example"], [8, "usage-example"], [21, "usage-example"], [29, "usage-example"], [33, "usage-example"], [34, "usage-example"], [36, "usage-example"], [37, "usage-example"], [39, "usage-example"], [52, "usage-example"], [322, "usage-example"], [324, "usage-example"], [325, "usage-example"], [329, "usage-example"], [342, "usage-example"], [349, "usage-example"], [357, "usage-example"], [358, "usage-example"], [360, "usage-example"], [361, "usage-example"]], "Compute": [[1, "compute"], [271, "compute"], [322, "compute"]], "Examples": [[1, "examples"], [3, "examples"], [4, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [21, "examples"], [29, "examples"], [32, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [66, "examples"], [69, "examples"], [71, "examples"], [71, "id2"], [72, "examples"], [75, "examples"], [76, "examples"], [78, "examples"], [79, "examples"], [81, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [91, "examples"], [91, "id1"], [92, "examples"], [92, "id1"], [97, "examples"], [100, "examples"], [101, "examples"], [101, "id6"], [106, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [115, "examples"], [115, "id5"], [119, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [136, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [149, "examples"], [150, "examples"], [152, "examples"], [153, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [167, "examples"], [170, "examples"], [171, "examples"], [171, "id10"], [172, "examples"], [172, "id4"], [175, "examples"], [176, "examples"], [179, "examples"], [180, "examples"], [182, "examples"], [184, "examples"], [184, "id1"], [184, "id2"], [184, "id3"], [186, "examples"], [187, "examples"], [188, "examples"], [322, "examples"], [324, "examples"], [325, "examples"], [329, "examples"], [332, "examples"], [334, "examples"], [342, "examples"], [349, "examples"], [352, "examples"], [356, "examples"]], "Clustering": [[2, "clustering"], [323, "clustering"]], "K-Means": [[3, "k-means"], [324, "k-means"]], "Model": [[3, "model"], [8, "model"], [9, "model"], [21, "model"], [32, "model"]], "Training train(...)": [[3, "training-train"], [8, "training-train"], [9, "training-train"], [21, "training-train"], [32, "training-train"]], "Inference infer(...)": [[3, "inference-infer"], [8, "inference-infer"], [9, "inference-infer"], [21, "inference-infer"], [32, "inference-infer"]], "Training": [[3, "training"], [8, "training"], [21, "training"], [57, "training"], [58, "training"], [59, "training"], [61, "training"], [70, "training"], [71, "training"], [72, "training"], [75, "training"], [76, "training"], [91, "training"], [92, "training"], [94, "training"], [100, "training"], [110, "training"], [113, "training"], [113, "id1"], [113, "id2"], [115, "training"], [120, "training"], [121, "training"], [122, "training"], [165, "training"], [167, "training"], [171, "training"], [172, "training"], [277, "training"], [286, "training"], [304, "training"], [324, "training"], [324, "id2"], [329, "training"], [329, "id6"], [330, "training"], [342, "training"], [342, "id1"], [352, "training"]], "Inference": [[3, "inference"], [8, "inference"], [21, "inference"], [277, "inference"], [286, "inference"], [304, "inference"], [324, "inference"], [324, "id3"], [329, "inference"], [329, "id7"], [330, "inference"], [342, "inference"], [342, "id2"]], "K-Means initialization": [[4, "k-means-initialization"], [325, "k-means-initialization"]], "Computing compute(...)": [[4, "computing-compute"]], "Computing": [[4, "computing"], [29, "computing"], [275, "computing"], [315, "computing"], [325, "computing"], [325, "id1"], [326, "computing"], [332, "computing"], [334, "computing"], [337, "computing"], [338, "computing"], [339, "computing"], [340, "computing"], [343, "computing"], [344, "computing"], [345, "computing"], [346, "computing"], [348, "computing"], [349, "computing"], [349, "id1"]], "Covariance": [[5, "covariance"], [6, "covariance"], [326, "covariance"], [327, "covariance"]], "Training compute(...)": [[5, "training-compute"], [16, "training-compute"], [17, "training-compute"], [18, "training-compute"], [19, "training-compute"], [29, "training-compute"]], "Decomposition": [[7, "decomposition"], [328, "decomposition"]], "Principal Components Analysis (PCA)": [[8, "principal-components-analysis-pca"], [329, "principal-components-analysis-pca"]], "Decision Forest Classification and Regression (DF)": [[9, "decision-forest-classification-and-regression-df"], [330, "decision-forest-classification-and-regression-df"]], "Enum classes": [[9, "enum-classes"], [13, "enum-classes"], [21, "enum-classes"]], "error_metric_mode": [[9, "error-metric-mode"]], "variable_importance_mode": [[9, "variable-importance-mode"]], "infer_mode": [[9, "infer-mode"]], "voting_mode": [[9, "voting-mode"]], "splitter_mode": [[9, "splitter-mode"]], "Ensembles": [[10, "ensembles"], [331, "ensembles"]], "Connected Components": [[11, "connected-components"], [332, "connected-components"]], "Computing preview::vertex_partitioning(...)": [[11, "computing-preview-vertex-partitioning"]], "Graph": [[12, "graph"], [44, "graph"], [333, "graph"], [366, "graph"]], "Subgraph Isomorphism": [[13, "subgraph-isomorphism"], [334, "subgraph-isomorphism"]], "Computing preview::graph_matching(...)": [[13, "computing-preview-graph-matching"]], "Algorithms": [[14, "algorithms"], [192, "algorithms"], [335, "algorithms"]], "Kernel Functions": [[15, "kernel-functions"], [101, "kernel-functions"], [336, "kernel-functions"]], "Linear kernel": [[16, "linear-kernel"], [337, "linear-kernel"]], "Polynomial kernel": [[17, "polynomial-kernel"], [338, "polynomial-kernel"]], "Radial Basis Function (RBF) kernel": [[18, "radial-basis-function-rbf-kernel"], [339, "radial-basis-function-rbf-kernel"]], "Sigmoid kernel": [[19, "sigmoid-kernel"], [340, "sigmoid-kernel"]], "Nearest Neighbors (kNN)": [[20, "nearest-neighbors-knn"], [341, "nearest-neighbors-knn"]], "k-Nearest Neighbors Classification (k-NN)": [[21, "k-nearest-neighbors-classification-k-nn"]], "Result options": [[21, "result-options"], [24, "result-options"]], "Objective function": [[22, "objective-function"], [24, "objective-function"], [343, "objective-function"]], "Descriptors of objective functions": [[22, "descriptors-of-objective-functions"]], "Logistic Loss": [[23, "logistic-loss"], [131, "logistic-loss"], [344, "logistic-loss"]], "Compute compute(...)": [[24, "compute-compute"]], "Chebyshev distance": [[25, "chebyshev-distance"], [345, "chebyshev-distance"]], "Cosine distance": [[26, "cosine-distance"], [346, "cosine-distance"]], "Pairwise Distances": [[27, "pairwise-distances"], [347, "pairwise-distances"]], "Minkowski distance": [[28, "minkowski-distance"], [348, "minkowski-distance"]], "Basic Statistics": [[29, "basic-statistics"], [349, "basic-statistics"]], "Statistics": [[30, "statistics"], [350, "statistics"]], "Support Vector Machines": [[31, "support-vector-machines"], [351, "support-vector-machines"]], "Support Vector Machine Classifier (SVM)": [[32, "support-vector-machine-classifier-svm"]], "Column accessor": [[33, "column-accessor"], [357, "column-accessor"]], "Programming interface": [[33, "programming-interface"], [34, "programming-interface"], [36, "programming-interface"], [39, "programming-interface"], [42, "programming-interface"], [43, "programming-interface"], [44, "programming-interface"], [47, "programming-interface"], [48, "programming-interface"], [50, "programming-interface"], [52, "programming-interface"], [357, "programming-interface"], [358, "programming-interface"], [360, "programming-interface"], [363, "programming-interface"], [364, "programming-interface"], [368, "programming-interface"], [369, "programming-interface"]], "Row accessor": [[34, "row-accessor"], [358, "row-accessor"]], "Accessors": [[35, "accessors"], [359, "accessors"]], "Array": [[36, "array"], [360, "array"]], "CSV data source": [[37, "csv-data-source"], [361, "csv-data-source"]], "Reading oneapi::dal::read<Object>(...)": [[37, "reading-oneapi-dal-read-object"]], "Args": [[37, "args"], [362, "args"]], "Data Sources": [[38, "data-sources"], [180, "data-sources"], [362, "data-sources"]], "Graph Service": [[39, "graph-service"]], "Related types": [[39, "related-types"]], "Graph service functions": [[39, "graph-service-functions"]], "Service functions for supported graphs": [[39, "service-functions-for-supported-graphs"]], "Directed adjacency vector graph service": [[40, "directed-adjacency-vector-graph-service"]], "Undirected adjacency vector graph service": [[41, "undirected-adjacency-vector-graph-service"]], "Directed adjacency vector graph": [[42, "directed-adjacency-vector-graph"], [363, "directed-adjacency-vector-graph"]], "Undirected adjacency vector graph": [[43, "undirected-adjacency-vector-graph"], [364, "undirected-adjacency-vector-graph"]], "Graphs": [[44, "graphs"], [365, "graphs"]], "Graph traits": [[44, "graph-traits"]], "Data Management": [[45, "data-management"], [177, "data-management"], [366, "data-management"]], "Compressed Sparse Rows (CSR) Table": [[46, "compressed-sparse-rows-csr-table"], [367, "compressed-sparse-rows-csr-table"]], "Homogeneous table": [[47, "homogeneous-table"], [368, "homogeneous-table"]], "Tables": [[48, "tables"], [369, "tables"]], "Table": [[48, "table"], [366, "table"]], "Table metadata": [[48, "table-metadata"], [366, "table-metadata"]], "Data layout": [[48, "data-layout"]], "Feature type": [[48, "feature-type"]], "Sparse Indexing": [[48, "sparse-indexing"]], "C++ API": [[49, "c-api"]], "Communicators": [[50, "communicators"]], "Communicator": [[50, "communicator"]], "USM and non-USM memory usage": [[50, "usm-and-non-usm-memory-usage"]], "Request": [[50, "request"]], "Reducion operations": [[50, "reducion-operations"]], "Distributed Model: Single Process Multiple Data": [[51, "distributed-model-single-process-multiple-data"]], "Distributed SPMD model": [[52, "distributed-spmd-model"]], "Bibliography": [[53, "bibliography"]], "Coding Guidelines": [[54, "coding-guidelines"]], "Coding Style": [[54, "coding-style"]], "General Rules": [[54, "general-rules"]], "Whitespaces": [[54, "whitespaces"]], "Functions": [[54, "functions"], [54, "id1"]], "C++ Files": [[54, "c-files"]], "Header Files": [[54, "header-files"]], "Naming Conventions": [[54, "naming-conventions"]], "Not recommended": [[54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null]], "Good": [[54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null]], "File Names": [[54, "file-names"]], "Type Names": [[54, "type-names"]], "Function Names": [[54, "function-names"]], "Variable Names": [[54, "variable-names"]], "Class Member Names and Method Names": [[54, "class-member-names-and-method-names"]], "Constant Names": [[54, "constant-names"]], "Distributed and streaming computational schemes": [[54, "distributed-and-streaming-computational-schemes"]], "Enum Names": [[54, "enum-names"]], "Class Names": [[54, "class-names"]], "Declaration Order": [[54, "declaration-order"]], "Typedefs": [[54, "typedefs"]], "Defines": [[54, "defines"]], "Common definitions": [[54, "common-definitions"]], "Statements": [[54, "statements"]], "Comments": [[54, "comments"]], "Function Comments": [[54, "function-comments"]], "Variable Comments": [[54, "variable-comments"]], "Class Data Members Comments": [[54, "class-data-members-comments"]], "Function Declarations Comments": [[54, "function-declarations-comments"]], "Templates declaration": [[54, "templates-declaration"]], "Deprecated API": [[54, "deprecated-api"]], "Notes": [[54, "notes"]], "Programming guidelines": [[54, "programming-guidelines"]], "Local Variables": [[54, "local-variables"]], "Constants": [[54, "constants"]], "Static and Global Variables": [[54, "static-and-global-variables"]], "Undetermined order of construction and destruction": [[54, "undetermined-order-of-construction-and-destruction"]], "Static variables within a function scope": [[54, "static-variables-within-a-function-scope"]], "Usage of const": [[54, "usage-of-const"]], "Usage of const in Functions": [[54, "usage-of-const-in-functions"]], "Usage of const Methods": [[54, "usage-of-const-methods"]], "Usage of const and mutable Data Members": [[54, "usage-of-const-and-mutable-data-members"]], "Ownership (RAII \u2013 Resource Acquisition Is Initialization)": [[54, "ownership-raii-resource-acquisition-is-initialization"]], "Smart Pointers": [[54, "smart-pointers"]], "Passing parameters of non-primitive types by reference": [[54, "passing-parameters-of-non-primitive-types-by-reference"]], "Preprocessor Macros": [[54, "preprocessor-macros"]], "Namespaces": [[54, "namespaces"]], "Write short functions": [[54, "write-short-functions"]], "Function\u2019s arguments": [[54, "function-s-arguments"]], "Infix and postfix increment operators": [[54, "infix-and-postfix-increment-operators"]], "Assertions": [[54, "assertions"]], "Classes": [[54, "classes"]], "Initialization": [[54, "initialization"], [85, "initialization"], [85, "id3"], [97, "initialization"], [106, "initialization"]], "Initializers": [[54, "initializers"]], "Constructors": [[54, "constructors"]], "Constructors for non-trivial types": [[54, "constructors-for-non-trivial-types"]], "Clone all parts of an object": [[54, "clone-all-parts-of-an-object"]], "Assignment": [[54, "assignment"]], "New and delete": [[54, "new-and-delete"]], "Access Control": [[54, "access-control"]], "Template metaprogramming": [[54, "template-metaprogramming"]], "Hiding the implementation in Model classes": [[54, "hiding-the-implementation-in-model-classes"]], "SDL Requirements": [[54, "sdl-requirements"]], "Handling Primitive Data Types": [[54, "handling-primitive-data-types"]], "Code is performance-oriented": [[54, "code-is-performance-oriented"]], "Code is not performance-oriented": [[54, "code-is-not-performance-oriented"]], "Conversion is safe": [[54, "conversion-is-safe"]], "Conversion is not safe": [[54, "conversion-is-not-safe"]], "Examples of type conversion verification": [[54, "examples-of-type-conversion-verification"]], "Conversion from int to size_t": [[54, "conversion-from-int-to-size-t"]], "Conversion from size_t to int": [[54, "conversion-from-size-t-to-int"]], "Examples of safe conversions": [[54, "examples-of-safe-conversions"]], "Working with Pointers": [[54, "working-with-pointers"]], "Handle allocation errors": [[54, "handle-allocation-errors"]], "Handle errors": [[54, "handle-errors"]], "Do not access freed memory": [[54, "do-not-access-freed-memory"]], "Avoid null pointer de-reference errors": [[54, "avoid-null-pointer-de-reference-errors"]], "Avoid freeing the same buffer more than once": [[54, "avoid-freeing-the-same-buffer-more-than-once"]], "Do not take the size of a pointer to determine the size of the object it points to": [[54, "do-not-take-the-size-of-a-pointer-to-determine-the-size-of-the-object-it-points-to"]], "Set up a pointer to zero after freeing memory buffer": [[54, "set-up-a-pointer-to-zero-after-freeing-memory-buffer"]], "Working with Buffers": [[54, "working-with-buffers"]], "Use a special function for copying bytes between buffers": [[54, "use-a-special-function-for-copying-bytes-between-buffers"]], "Use a special function for memory allocation and zero-fill buffers": [[54, "use-a-special-function-for-memory-allocation-and-zero-fill-buffers"]], "Check buffer size": [[54, "check-buffer-size"]], "Handling exceptions": [[54, "handling-exceptions"]], "Handling null byte injection": [[54, "handling-null-byte-injection"]], "DAAL Interfaces": [[55, "daal-interfaces"]], "Association Rules": [[56, "association-rules"]], "Details": [[56, "details"], [57, "details"], [58, "details"], [59, "details"], [61, "details"], [62, "details"], [66, "details"], [69, "details"], [70, "details"], [71, "details"], [72, "details"], [74, "details"], [75, "details"], [76, "details"], [81, "details"], [83, "details"], [84, "details"], [85, "details"], [90, "details"], [91, "details"], [92, "details"], [97, "details"], [100, "details"], [106, "details"], [107, "details"], [109, "details"], [112, "details"], [114, "details"], [115, "details"], [119, "details"], [123, "details"], [126, "details"], [130, "details"], [131, "details"], [132, "details"], [138, "details"], [140, "details"], [143, "details"], [144, "details"], [145, "details"], [149, "details"], [150, "details"], [157, "details"], [158, "details"], [159, "details"], [160, "details"], [163, "details"], [170, "details"], [171, "details"], [172, "details"], [359, "details"], [362, "details"], [366, "details"]], "Batch Processing": [[56, "batch-processing"], [57, "batch-processing"], [58, "batch-processing"], [59, "batch-processing"], [61, "batch-processing"], [62, "batch-processing"], [63, "batch-processing"], [67, "batch-processing"], [70, "batch-processing"], [71, "batch-processing"], [72, "batch-processing"], [75, "batch-processing"], [76, "batch-processing"], [78, "batch-processing"], [79, "batch-processing"], [81, "batch-processing"], [83, "batch-processing"], [84, "batch-processing"], [85, "batch-processing"], [85, "id5"], [87, "batch-processing"], [88, "batch-processing"], [89, "batch-processing"], [90, "batch-processing"], [91, "batch-processing"], [92, "batch-processing"], [94, "batch-processing"], [98, "batch-processing"], [100, "batch-processing"], [101, "batch-processing"], [101, "id2"], [102, "batch-processing"], [104, "batch-processing"], [110, "batch-processing"], [113, "batch-processing"], [115, "batch-processing"], [116, "batch-processing"], [120, "batch-processing"], [125, "batch-processing"], [126, "batch-processing"], [143, "batch-processing"], [144, "batch-processing"], [145, "batch-processing"], [146, "batch-processing"], [149, "batch-processing"], [150, "batch-processing"], [152, "batch-processing"], [157, "batch-processing"], [158, "batch-processing"], [159, "batch-processing"], [160, "batch-processing"], [163, "batch-processing"], [164, "batch-processing"], [165, "batch-processing"], [167, "batch-processing"], [171, "batch-processing"], [172, "batch-processing"]], "Algorithm Input": [[56, "algorithm-input"], [62, "algorithm-input"], [63, "algorithm-input"], [65, "algorithm-input"], [67, "algorithm-input"], [78, "algorithm-input"], [79, "algorithm-input"], [85, "algorithm-input"], [85, "id6"], [101, "algorithm-input"], [101, "id3"], [102, "algorithm-input"], [116, "algorithm-input"], [118, "algorithm-input"], [125, "algorithm-input"], [126, "algorithm-input"], [130, "algorithm-input"], [131, "algorithm-input"], [132, "algorithm-input"], [133, "algorithm-input"], [136, "algorithm-input"], [137, "algorithm-input"], [139, "algorithm-input"], [140, "algorithm-input"], [143, "algorithm-input"], [144, "algorithm-input"], [145, "algorithm-input"], [146, "algorithm-input"], [148, "algorithm-input"], [150, "algorithm-input"], [152, "algorithm-input"], [154, "algorithm-input"], [157, "algorithm-input"], [159, "algorithm-input"], [160, "algorithm-input"], [163, "algorithm-input"], [164, "algorithm-input"], [168, "algorithm-input"], [192, "algorithm-input"], [192, "id2"]], "Algorithm Input for Association Rules (Batch Processing)": [[56, "id2"]], "Algorithm Parameters": [[56, "algorithm-parameters"], [62, "algorithm-parameters"], [63, "algorithm-parameters"], [64, "algorithm-parameters"], [65, "algorithm-parameters"], [67, "algorithm-parameters"], [78, "algorithm-parameters"], [79, "algorithm-parameters"], [85, "algorithm-parameters"], [85, "id7"], [95, "algorithm-parameters"], [96, "algorithm-parameters"], [101, "algorithm-parameters"], [101, "id4"], [102, "algorithm-parameters"], [103, "algorithm-parameters"], [116, "algorithm-parameters"], [117, "algorithm-parameters"], [118, "algorithm-parameters"], [121, "algorithm-parameters"], [125, "algorithm-parameters"], [126, "algorithm-parameters"], [130, "algorithm-parameters"], [131, "algorithm-parameters"], [132, "algorithm-parameters"], [133, "algorithm-parameters"], [136, "algorithm-parameters"], [137, "algorithm-parameters"], [138, "algorithm-parameters"], [139, "algorithm-parameters"], [140, "algorithm-parameters"], [141, "algorithm-parameters"], [143, "algorithm-parameters"], [144, "algorithm-parameters"], [145, "algorithm-parameters"], [146, "algorithm-parameters"], [147, "algorithm-parameters"], [148, "algorithm-parameters"], [150, "algorithm-parameters"], [152, "algorithm-parameters"], [154, "algorithm-parameters"], [155, "algorithm-parameters"], [157, "algorithm-parameters"], [159, "algorithm-parameters"], [160, "algorithm-parameters"], [163, "algorithm-parameters"], [164, "algorithm-parameters"], [168, "algorithm-parameters"], [169, "algorithm-parameters"], [192, "algorithm-parameters"]], "Algorithm Parameters for Association Rules (Batch Processing)": [[56, "id3"]], "Algorithm Output": [[56, "algorithm-output"], [62, "algorithm-output"], [63, "algorithm-output"], [65, "algorithm-output"], [67, "algorithm-output"], [68, "algorithm-output"], [68, "id1"], [68, "id2"], [68, "id3"], [68, "id4"], [68, "id5"], [68, "id6"], [68, "id7"], [68, "id8"], [68, "id9"], [68, "id10"], [68, "id11"], [68, "id12"], [78, "algorithm-output"], [79, "algorithm-output"], [85, "algorithm-output"], [85, "id8"], [101, "algorithm-output"], [101, "id5"], [102, "algorithm-output"], [116, "algorithm-output"], [118, "algorithm-output"], [125, "algorithm-output"], [126, "algorithm-output"], [130, "algorithm-output"], [131, "algorithm-output"], [132, "algorithm-output"], [133, "algorithm-output"], [136, "algorithm-output"], [137, "algorithm-output"], [139, "algorithm-output"], [140, "algorithm-output"], [143, "algorithm-output"], [144, "algorithm-output"], [145, "algorithm-output"], [146, "algorithm-output"], [148, "algorithm-output"], [150, "algorithm-output"], [152, "algorithm-output"], [154, "algorithm-output"], [157, "algorithm-output"], [159, "algorithm-output"], [160, "algorithm-output"], [163, "algorithm-output"], [164, "algorithm-output"], [168, "algorithm-output"], [192, "algorithm-output"]], "Algorithm Output for Association Rules (Batch Processing)": [[56, "id4"]], "Performance Considerations": [[56, "performance-considerations"], [62, "performance-considerations"], [66, "performance-considerations"], [70, "performance-considerations"], [78, "performance-considerations"], [79, "performance-considerations"], [81, "performance-considerations"], [85, "performance-considerations"], [97, "performance-considerations"], [106, "performance-considerations"], [110, "performance-considerations"], [123, "performance-considerations"], [143, "performance-considerations"], [149, "performance-considerations"], [151, "performance-considerations"], [170, "performance-considerations"], [171, "performance-considerations"]], "AdaBoost Classifier": [[57, "adaboost-classifier"]], "Training Stage": [[57, "training-stage"], [58, "training-stage"], [59, "training-stage"], [61, "training-stage"], [70, "training-stage"], [71, "training-stage"], [72, "training-stage"], [74, "training-stage"], [75, "training-stage"], [76, "training-stage"], [90, "training-stage"], [91, "training-stage"], [92, "training-stage"], [97, "training-stage"], [100, "training-stage"], [107, "training-stage"], [109, "training-stage"], [112, "training-stage"], [114, "training-stage"], [115, "training-stage"], [123, "training-stage"], [123, "id2"], [171, "training-stage"], [172, "training-stage"], [195, "training-stage"], [197, "training-stage"], [198, "training-stage"]], "Prediction Stage": [[57, "prediction-stage"], [58, "prediction-stage"], [59, "prediction-stage"], [61, "prediction-stage"], [70, "prediction-stage"], [71, "prediction-stage"], [72, "prediction-stage"], [74, "prediction-stage"], [75, "prediction-stage"], [76, "prediction-stage"], [90, "prediction-stage"], [91, "prediction-stage"], [92, "prediction-stage"], [97, "prediction-stage"], [100, "prediction-stage"], [107, "prediction-stage"], [109, "prediction-stage"], [112, "prediction-stage"], [114, "prediction-stage"], [115, "prediction-stage"], [123, "prediction-stage"], [123, "id3"], [171, "prediction-stage"], [172, "prediction-stage"], [195, "prediction-stage"], [197, "prediction-stage"], [198, "prediction-stage"]], "Training Parameters for AdaBoost Classifier (Batch Processing)": [[57, "id2"]], "Prediction": [[57, "prediction"], [58, "prediction"], [59, "prediction"], [61, "prediction"], [71, "prediction"], [72, "prediction"], [75, "prediction"], [76, "prediction"], [91, "prediction"], [92, "prediction"], [94, "prediction"], [100, "prediction"], [110, "prediction"], [113, "prediction"], [115, "prediction"], [120, "prediction"], [165, "prediction"], [167, "prediction"], [171, "prediction"], [172, "prediction"]], "Prediction Parameters for AdaBoost Classifier (Batch Processing)": [[57, "id3"]], "AdaBoost Multiclass Classifier": [[58, "adaboost-multiclass-classifier"]], "Training Parameters for AdaBoost Multiclass Classifier (Batch Processing)": [[58, "id5"]], "Output": [[58, "output"], [70, "output"], [71, "output"], [72, "output"], [98, "output"], [99, "output"], [99, "id2"], [100, "output"], [104, "output"], [115, "output"], [129, "output"], [172, "output"]], "Training Output for AdaBoost Multiclass Classifier (Batch Processing)": [[58, "id6"]], "Prediction Parameters for AdaBoost Multiclass Classifier (Batch Processing)": [[58, "id7"]], "BrownBoost Classifier": [[59, "brownboost-classifier"]], "Training Parameters for BrownBoost Classifier (Batch Processing)": [[59, "id3"]], "Prediction Parameters for BrownBoost Classifier (Batch Processing)": [[59, "id4"]], "Boosting": [[60, "boosting"]], "LogitBoost Classifier": [[61, "logitboost-classifier"]], "Training Parameters for LogitBoost Classifier (Batch Processing)": [[61, "id2"]], "Prediction Parameters for LogitBoost Classifier (Batch Processing)": [[61, "id3"]], "Cholesky Decomposition": [[62, "cholesky-decomposition"]], "Algorithm Input for Cholesky Decomposition (Batch Processing)": [[62, "id1"]], "Algorithm Parameters for Cholesky Decomposition (Batch Processing)": [[62, "id2"]], "Algorithm Output for Cholesky Decomposition (Batch Processing)": [[62, "id3"]], "Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Batch Processing)": [[63, "id1"]], "Algorithm Parameters for Correlation and Variance-Covariance Matrices Algorithm (Batch Processing)": [[63, "id2"]], "Algorithm Output for Correlation and Variance-Covariance Matrices Algorithm (Batch Processing)": [[63, "id3"]], "Distributed Processing": [[64, "distributed-processing"], [68, "distributed-processing"], [99, "distributed-processing"], [103, "distributed-processing"], [105, "distributed-processing"], [113, "distributed-processing"], [117, "distributed-processing"], [121, "distributed-processing"], [147, "distributed-processing"], [149, "distributed-processing"], [151, "distributed-processing"], [155, "distributed-processing"], [169, "distributed-processing"], [170, "distributed-processing"]], "Algorithm Parameters for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[64, "id1"]], "Step 1 - on Local Nodes": [[64, "step-1-on-local-nodes"], [68, "step-1-on-local-nodes"], [95, "step-1-on-local-nodes"], [96, "step-1-on-local-nodes"], [99, "step-1-on-local-nodes"], [103, "step-1-on-local-nodes"], [113, "step-1-on-local-nodes"], [117, "step-1-on-local-nodes"], [121, "step-1-on-local-nodes"], [147, "step-1-on-local-nodes"], [155, "step-1-on-local-nodes"], [169, "step-1-on-local-nodes"]], "Step 1: Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[64, "id2"]], "Step 1: Algorithm Output for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[64, "id3"]], "Step 2 - on Master Node": [[64, "step-2-on-master-node"], [96, "step-2-on-master-node"], [103, "step-2-on-master-node"], [113, "step-2-on-master-node"], [117, "step-2-on-master-node"], [121, "step-2-on-master-node"], [147, "step-2-on-master-node"], [155, "step-2-on-master-node"], [169, "step-2-on-master-node"]], "Step 2: Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[64, "id4"]], "Step 2: Algorithm Output for for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[64, "id5"]], "Online Processing": [[65, "online-processing"], [113, "online-processing"], [118, "online-processing"], [122, "online-processing"], [148, "online-processing"], [149, "online-processing"], [151, "online-processing"], [170, "online-processing"]], "Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[65, "id1"]], "Algorithm Parameters for for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[65, "id2"]], "Partial Results": [[65, "partial-results"], [118, "partial-results"], [148, "partial-results"]], "Partial Results for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[65, "id3"]], "Algorithm Output for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[65, "id4"]], "Correlation and Variance-Covariance Matrices": [[66, "correlation-and-variance-covariance-matrices"], [66, "id1"]], "Computation": [[66, "computation"], [69, "computation"], [85, "computation"], [85, "id4"], [97, "computation"], [106, "computation"], [106, "id6"], [119, "computation"], [123, "computation"], [129, "computation"], [130, "computation"], [131, "computation"], [132, "computation"], [133, "computation"], [136, "computation"], [137, "computation"], [138, "computation"], [139, "computation"], [140, "computation"], [141, "computation"], [149, "computation"], [153, "computation"], [170, "computation"], [322, "computation"]], "Algorithm Parameters for DBSCAN (Batch Processing)": [[67, "id1"]], "Algorithm Input for DBSCAN (Batch Processing)": [[67, "id2"]], "Algorithm Output for DBSCAN (Batch Processing)": [[67, "id3"]], "Algorithm Parameters for DBSCAN (Distributed Processing)": [[68, "id13"], [68, "id16"], [68, "id19"], [68, "id22"], [68, "id34"], [68, "id41"], [68, "id44"], [68, "id47"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 1)": [[68, "id14"]], "Partial Results for DBSCAN (Distributed Processing, Step 1)": [[68, "id15"]], "Step 2 - on Local Nodes": [[68, "step-2-on-local-nodes"], [99, "step-2-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 2)": [[68, "id17"]], "Partial Results for DBSCAN (Distributed Processing, Step 2)": [[68, "id18"]], "Step 3 - on Local Nodes": [[68, "step-3-on-local-nodes"], [96, "step-3-on-local-nodes"], [155, "step-3-on-local-nodes"], [169, "step-3-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 3)": [[68, "id20"]], "Partial Results for DBSCAN (Distributed Processing, Step 3)": [[68, "id21"]], "Step 4 - on Local Nodes": [[68, "step-4-on-local-nodes"], [96, "step-4-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 4)": [[68, "id23"]], "Partial Results for DBSCAN (Distributed Processing, Step 4)": [[68, "id24"]], "Step 5 - on Local Nodes": [[68, "step-5-on-local-nodes"]], "Algorithm Parameters for DBSCAN (Distributed Processing, Step 5)": [[68, "id25"], [68, "id31"], [68, "id37"], [68, "id50"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 5)": [[68, "id26"]], "Partial Results for DBSCAN (Distributed Processing, Step 5)": [[68, "id27"]], "Step 6 - on Local Nodes": [[68, "step-6-on-local-nodes"]], "Algorithm Parameters for DBSCAN (Distributed Processing, Step 6)": [[68, "id28"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 6)": [[68, "id29"]], "Partial Results for DBSCAN (Distributed Processing, Step 6)": [[68, "id30"]], "Step 7 - on Master Node": [[68, "step-7-on-master-node"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 7)": [[68, "id32"]], "Partial Results for DBSCAN (Distributed Processing, Step 7)": [[68, "id33"]], "Step 8 - on Local Nodes": [[68, "step-8-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 8)": [[68, "id35"]], "Partial Results for DBSCAN (Distributed Processing, Step 8)": [[68, "id36"]], "Step 9 - on Master Node": [[68, "step-9-on-master-node"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 9)": [[68, "id38"]], "Algorithm Output for DBSCAN (Distributed Processing, Step 9)": [[68, "id39"]], "Partial Results for DBSCAN (Distributed Processing, Step 9)": [[68, "id40"]], "Step 10 - on Local Nodes": [[68, "step-10-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 10)": [[68, "id42"]], "Partial Results for DBSCAN (Distributed Processing, Step 10)": [[68, "id43"]], "Step 11 - on Local Nodes": [[68, "step-11-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 11)": [[68, "id45"]], "Partial Results for DBSCAN (Distributed Processing, Step 11)": [[68, "id46"]], "Step 12 - on Local Nodes": [[68, "step-12-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 12)": [[68, "id48"]], "Partial Results for DBSCAN (Distributed Processing, Step 12)": [[68, "id49"]], "Step 13 - on Local Nodes": [[68, "step-13-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 13)": [[68, "id51"]], "Algorithm Output for DBSCAN (Distributed Processing, Step 13)": [[68, "id52"]], "Partial Results for DBSCAN (Distributed Processing, Step 13)": [[68, "id53"]], "Density-Based Spatial Clustering of Applications with Noise": [[69, "density-based-spatial-clustering-of-applications-with-noise"]], "Decision Forest": [[70, "decision-forest"], [73, "decision-forest"]], "Inexact Histogram Computation Method": [[70, "inexact-histogram-computation-method"]], "Split Criteria": [[70, "split-criteria"], [74, "split-criteria"], [75, "split-criteria"], [330, "split-criteria"]], "Termination Criteria": [[70, "termination-criteria"], [330, "termination-criteria"]], "Tree Building Strategies": [[70, "tree-building-strategies"], [330, "tree-building-strategies"]], "Depth-first Strategy": [[70, "depth-first-strategy"], [330, "depth-first-strategy"]], "Best-first Strategy": [[70, "best-first-strategy"], [330, "best-first-strategy"]], "Random Numbers Generation": [[70, "random-numbers-generation"]], "Additional Characteristics Calculated by the Decision Forest": [[70, "additional-characteristics-calculated-by-the-decision-forest"], [330, "additional-characteristics-calculated-by-the-decision-forest"]], "Out-of-bag Error": [[70, "out-of-bag-error"], [71, "out-of-bag-error"], [72, "out-of-bag-error"], [330, "out-of-bag-error"]], "Variable Importance": [[70, "variable-importance"], [71, "variable-importance"], [330, "variable-importance"]], "Training Parameters for Decision Forest (Batch Processing)": [[70, "id4"]], "Training Output for Decision Forest (Batch Processing)": [[70, "id5"]], "Classification Decision Forest": [[71, "classification-decision-forest"]], "Decision Forest Classification: impurity calculations": [[71, "id3"]], "Usage of Training Alternative": [[71, "usage-of-training-alternative"], [91, "usage-of-training-alternative"], [92, "usage-of-training-alternative"], [112, "usage-of-training-alternative"], [115, "usage-of-training-alternative"], [171, "usage-of-training-alternative"], [172, "usage-of-training-alternative"]], "Training Parameters for Decision Forest Classification (Batch Processing)": [[71, "id4"]], "Prediction Parameters for Decision Forest Classification (Batch Processing)": [[71, "id5"]], "Regression Decision Forest": [[72, "regression-decision-forest"]], "Decision Forest Regression: impurity calculations": [[72, "id2"]], "Prediction Parameters for Decision Forest Regression (Batch Processing)": [[72, "id3"], [76, "id3"]], "Decision Tree": [[74, "decision-tree"], [353, "decision-tree"]], "Types of Tests": [[74, "types-of-tests"]], "Post-pruning": [[74, "post-pruning"]], "Classification Decision Tree": [[75, "classification-decision-tree"]], "Training Input for Decision Tree Classification (Batch Processing)": [[75, "id4"]], "Training Parameters for Decision Tree Classification (Batch Processing)": [[75, "id5"]], "Prediction Parameters for Decision Tree Classification (Batch Processing)": [[75, "id6"]], "Regression Decision Tree": [[76, "regression-decision-tree"]], "Split Criterion": [[76, "split-criterion"]], "Training Parameters for Decision Forest Regression (Batch Processing)": [[76, "id2"]], "Decision Trees": [[77, "decision-trees"]], "Correlation Distance Matrix": [[78, "correlation-distance-matrix"]], "Algorithm Input for Correlation Distance Matrix (Batch Processing)": [[78, "id1"]], "Algorithm Parameters for Correlation Distance Matrix (Batch Processing)": [[78, "id2"]], "Algorithm Output for Correlation Distance Matrix (Batch Processing)": [[78, "id3"]], "Cosine Distance Matrix": [[79, "cosine-distance-matrix"]], "Algorithm Input for Cosine Distance Matrix (Batch Processing)": [[79, "id1"]], "Algorithm Parameters for Cosine Distance Matrix (Batch Processing)": [[79, "id2"]], "Algorithm Output for Cosine Distance Matrix (Batch Processing)": [[79, "id3"]], "Distance Matrix": [[80, "distance-matrix"]], "Bernoulli Distribution": [[81, "bernoulli-distribution"]], "Algorithm Parameters for Bernoulli Distribution (Batch Processing)": [[81, "id1"]], "Distributions": [[82, "distributions"]], "Algorithm Input for Distributions": [[82, "id2"]], "Algorithm Parameters for Distributions": [[82, "id3"]], "Algorithm Output for Distributions": [[82, "id4"]], "Normal Distribution": [[83, "normal-distribution"]], "Algorithm Parameters for Normal Distribution (Batch Processing)": [[83, "id1"]], "Uniform Distribution": [[84, "uniform-distribution"]], "Algorithm Parameters for Uniform Distribution (Batch Processing)": [[84, "id1"]], "Expectation-Maximization": [[85, "expectation-maximization"]], "Expectation-Maximization (EM) Algorithm in the General Form": [[85, "expectation-maximization-em-algorithm-in-the-general-form"]], "EM algorithm for the Gaussian Mixture Model": [[85, "em-algorithm-for-the-gaussian-mixture-model"]], "Algorithm Input for Expectation-Maximization Initialization (Batch Processing)": [[85, "id9"]], "Algorithm Parameters for Expectation-Maximization Initialization (Batch Processing)": [[85, "id10"]], "Algorithm Output for Expectation-Maximization Initialization (Batch Processing)": [[85, "id11"]], "Algorithm Input for Expectation-Maximization Computation (Batch Processing)": [[85, "id12"]], "Algorithm Parameters for Expectation-Maximization Computation (Batch Processing)": [[85, "id13"]], "Algorithm Output for Expectation-Maximization Computation (Batch Processing)": [[85, "id14"]], "Engines": [[86, "engines"]], "Algorithm Input for Engines": [[86, "id1"]], "Algorithm Output for Engines": [[86, "id2"]], "mcg59": [[87, "mcg59"]], "Algorithm Parameters for mcg58 engine (Batch Processing)": [[87, "id1"]], "mt19937": [[88, "mt19937"]], "Algorithm Parameters for mt19937 engine (Batch Processing)": [[88, "id2"]], "mt2203": [[89, "mt2203"]], "Algorithm Parameters for mt2203 engine (Batch Processing)": [[89, "id2"]], "Gradient Boosted Trees": [[90, "gradient-boosted-trees"], [93, "gradient-boosted-trees"]], "Split Calculation Mode": [[90, "split-calculation-mode"]], "Training Parameters for Gradient Boosted Trees (Batch Processing)": [[90, "id2"]], "Classification Gradient Boosted Trees": [[91, "classification-gradient-boosted-trees"]], "Training Parameters for Gradient Boosted Trees Classification (Batch Processing)": [[91, "id2"]], "Prediction Parameters for Gradient Boosted Trees Classification (Batch Processing)": [[91, "id3"]], "Regression Gradient Boosted Trees": [[92, "regression-gradient-boosted-trees"]], "Training Parameters for Gradient Boosted Trees Regression (Batch Processing)": [[92, "id2"]], "Prediction Parameters for Gradient Boosted Trees Regression (Batch Processing)": [[92, "id3"]], "Training Parameters for Implicit Alternating Least Squares Computation (Batch Processing)": [[94, "id1"]], "Prediction Parameters for Implicit Alternating Least Squares Computation (Batch Processing)": [[94, "id2"]], "Distributed Processing: Prediction of Ratings": [[95, "distributed-processing-prediction-of-ratings"]], "Prediction Parameters for Implicit Alternating Least Squares Computation (Distributed Processing)": [[95, "id1"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 1)": [[95, "id3"], [96, "id5"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 1)": [[95, "id4"], [96, "id6"]], "Distributed Processing: Training": [[96, "distributed-processing-training"]], "Training Parameters for Implicit Alternating Least Squares Computation (Distributed Processing)": [[96, "id1"]], "Computation Process": [[96, "computation-process"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 2)": [[96, "id8"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 2)": [[96, "id9"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 3)": [[96, "id11"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 3)": [[96, "id12"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 4)": [[96, "id14"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 4)": [[96, "id15"]], "Implicit Alternating Least Squares": [[97, "implicit-alternating-least-squares"]], "Initialization Stage": [[97, "initialization-stage"]], "Input for Implicit Alternating Least Squares Initialization (Batch Processing)": [[98, "id1"]], "Parameters": [[98, "parameters"], [99, "parameters"], [104, "parameters"], [105, "parameters"], [129, "parameters"], [174, "parameters"]], "Parameters for Implicit Alternating Least Squares Initialization (Batch Processing)": [[98, "id2"]], "Output for Implicit Alternating Least Squares Initialization (Batch Processing)": [[98, "id3"]], "Parameters for Implicit Alternating Least Squares Initialization (Distributed Processing)": [[99, "id3"]], "Input for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 1)": [[99, "id6"]], "Output for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 1)": [[99, "id7"]], "Input for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 3)": [[99, "id9"]], "Output for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 2)": [[99, "id10"]], "k-Nearest Neighbors (kNN) Classifier": [[100, "k-nearest-neighbors-knn-classifier"]], "K-D tree": [[100, "k-d-tree"]], "Brute Force": [[100, "brute-force"]], "Training using K-D Tree": [[100, "training-using-k-d-tree"]], "Training using Brute Force": [[100, "training-using-brute-force"]], "Prediction using K-D Tree": [[100, "prediction-using-k-d-tree"]], "Prediction using Brute Force": [[100, "prediction-using-brute-force"]], "Training Parameters for k-Nearest Neighbors Classifier (Batch Processing)": [[100, "id7"]], "Prediction Parameters for k-Nearest Neighbors Classifier (Batch Processing)": [[100, "id8"]], "Output for k-Nearest Neighbors Classifier (Batch Processing)": [[100, "id9"]], "Linear Kernel": [[101, "linear-kernel"]], "Problem Statement": [[101, "problem-statement"], [101, "id1"], [125, "problem-statement"]], "Algorithm Input for Linear Kernel (Batch Processing)": [[101, "id7"]], "Algorithm Parameters for Linear Kernel (Batch Processing)": [[101, "id8"]], "Algorithm Output for Linear Kernel (Batch Processing)": [[101, "id9"]], "Radial Basis Function Kernel": [[101, "radial-basis-function-kernel"]], "Algorithm Input for Radial Basis Function Kernel (Batch Processing)": [[101, "id10"]], "Algorithm Parameters for Radial Basis Function Kernel (Batch Processing)": [[101, "id11"]], "Algorithm Output for Radial Basis Function Kernel (Batch Processing)": [[101, "id12"]], "Algorithm Input for K-Means Computation (Batch Processing)": [[102, "id1"]], "Algorithm Parameters for K-Means Computation (Batch Processing)": [[102, "id2"]], "Algorithm Output for K-Means Computation (Batch Processing)": [[102, "id3"]], "Algorithm Parameters for K-Means Computation (Distributed Processing)": [[103, "id1"]], "Input for K-Means Computation (Distributed Processing, Step 1)": [[103, "id3"]], "Partial Results for K-Means Computation (Distributed Processing, Step 1)": [[103, "id4"]], "Output for K-Means Computation (Distributed Processing, Step 1)": [[103, "id5"]], "Input for K-Means Computation (Distributed Processing, Step 2)": [[103, "id7"]], "Output for K-Means Computation (Distributed Processing, Step 2)": [[103, "id8"]], "Algorithm Input for K-Means Initialization (Batch Processing)": [[104, "id6"]], "Algorithm Parameters for K-Means Initialization (Batch Processing)": [[104, "id7"]], "Algorithm Output for K-Means Initialization (Batch Processing)": [[104, "id8"]], "Algorithm Parameters for K-Means Initialization (Distributed Processing)": [[105, "id5"]], "Step 1 - on Local Nodes (deterministic, random, plusPlus, and parallelPlus methods)": [[105, "step-1-on-local-nodes-deterministic-random-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 1)": [[105, "id10"]], "Output for K-Means Initialization (Distributed Processing, Step 1)": [[105, "id11"]], "Step 2 - on Master Node (deterministic and random methods)": [[105, "step-2-on-master-node-deterministic-and-random-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 2 on Master Node)": [[105, "id12"]], "Output for K-Means Initialization (Distributed Processing, Step 2 on Master Node)": [[105, "id13"]], "Step 2 - on Local Nodes (plusPlus and parallelPlus methods)": [[105, "step-2-on-local-nodes-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 1 on Local Nodes)": [[105, "id16"]], "Output for K-Means Initialization (Distributed Processing, Step 2 on Local Nodes)": [[105, "id17"]], "Step 3 - on Master Node (plusPlus and parallelPlus methods)": [[105, "step-3-on-master-node-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 3)": [[105, "id20"]], "Output for K-Means Initialization (Distributed Processing, Step 3)": [[105, "id21"]], "Step 4 - on Local Nodes (plusPlus and parallelPlus methods)": [[105, "step-4-on-local-nodes-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 4)": [[105, "id24"]], "Output for K-Means Initialization (Distributed Processing, Step 4)": [[105, "id25"]], "Step 5 - on Master Node (parallelPlus methods)": [[105, "step-5-on-master-node-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 5)": [[105, "id27"]], "Output for K-Means Initialization (Distributed Processing, Step 5)": [[105, "id28"]], "K-Means Clustering": [[106, "k-means-clustering"]], "Centroid Initialization": [[106, "centroid-initialization"]], "Elastic Net": [[107, "elastic-net"]], "LASSO and Elastic Net Regressions": [[108, "lasso-and-elastic-net-regressions"]], "Least Absolute Shrinkage and Selection Operator (LASSO)": [[109, "least-absolute-shrinkage-and-selection-operator-lasso"]], "LASSO and Elastic Net Computation": [[110, "lasso-and-elastic-net-computation"]], "Training Input for LASSO and Elastic Net (Batch Processing)": [[110, "id3"]], "Training Parameters for LASSO (Batch Processing)": [[110, "id4"]], "Training Parameters for Elastic Net (Batch Processing)": [[110, "id5"]], "Training Output for LASSO and Elastic Net (Batch Processing)": [[110, "id6"]], "Prediction Parameters for LASSO and Elastic Net (Batch Processing)": [[110, "id7"]], "Linear and Ridge Regressions": [[111, "linear-and-ridge-regressions"]], "Linear Regression": [[112, "linear-regression"]], "Linear and Ridge Regressions Computation": [[113, "linear-and-ridge-regressions-computation"]], "Training Parameters for Linear Regression (Batch Processing)": [[113, "id3"]], "Training Parameters for Ridge Regression (Batch Processing)": [[113, "id4"]], "Prediction Parameters for Linear and Ridge Regression (Batch Processing)": [[113, "id5"]], "Training Input for Linear and Ridge Regression (Online Processing)": [[113, "id6"]], "Training Parameters for Linear Regression (Online Processing)": [[113, "id7"]], "Training Parameters for Ridge Regression (Online Processing)": [[113, "id8"]], "Algorithm parameters": [[113, "algorithm-parameters"]], "Training Parameters for Linear Regression (Distributed Processing)": [[113, "id9"]], "Training Parameters for Ridge Regression (Distributed Processing)": [[113, "id10"]], "Training Input for Linear and Ridge Regression (Distributed Processing, Step 1)": [[113, "id12"]], "Training Output for Linear and Ridge Regression (Distributed Processing, Step 1)": [[113, "id13"]], "Training Input for Linear and Ridge Regression (Distributed Processing, Step 2)": [[113, "id15"]], "Training Output for Linear and Ridge Regression (Distributed Processing, Step 2)": [[113, "id16"]], "Ridge Regression": [[114, "ridge-regression"]], "Logistic Regression": [[115, "logistic-regression"]], "Training Parameters for Logistic Regression (Batch Processing)": [[115, "id6"]], "Prediction Parameters for Logistic Regression (Batch Processing)": [[115, "id7"]], "Prediction Output for Logistic Regression (Batch Processing)": [[115, "id8"]], "Algorithm Input for Low Order Moments (Batch Processing)": [[116, "id1"]], "Algorithm Parameters for Low Order Moments (Batch Processing)": [[116, "id2"]], "Algorithm Output for Low Order Moments (Batch Processing)": [[116, "id3"]], "Algorithm Parameters for Low Order Moments (Distributed Processing)": [[117, "id1"]], "Algorithm Input for Low Order Moments (Distributed Processing, Step 1)": [[117, "id2"]], "Algorithm Output for Low Order Moments (Distributed Processing, Step 1)": [[117, "id3"]], "Partial Characteristics for Low Order Moments (Distributed Processing, Step 1)": [[117, "id4"]], "Algorithm Input for Low Order Moments (Distributed Processing, Step 2)": [[117, "id5"]], "Algorithm Output for Low Order Moments (Distributed Processing, Step 2)": [[117, "id6"]], "Algorithm Input for Low Order Moments (Online Processing)": [[118, "id1"]], "Algorithm Parameters for Low Order Moments (Online Processing)": [[118, "id2"]], "Partial Results for Low Order Moments (Online Processing)": [[118, "id3"]], "Partial Characteristics for Low Order Moments (Online Processing)": [[118, "id4"]], "Algorithm Output for Low Order Moments (Online Processing)": [[118, "id5"]], "Moments of Low Order": [[119, "moments-of-low-order"], [119, "id1"]], "Training Parameters for Na\u00efve Bayes Classifier (Batch Processing)": [[120, "id1"]], "Prediction Parameters for Na\u00efve Bayes Classifier (Batch Processing)": [[120, "id2"]], "Training Parameters for Na\u00efve Bayes Classifier (Distributed Processing)": [[121, "id1"]], "Training Input for Na\u00efve Bayes Classifier (Distributed Processing, Step 1)": [[121, "id3"]], "Training Output for Na\u00efve Bayes Classifier (Distributed Processing, Step 1)": [[121, "id4"]], "Training Input for Na\u00efve Bayes Classifier (Distributed Processing, Step 2)": [[121, "id6"]], "Training Output for Na\u00efve Bayes Classifier (Distributed Processing, Step 2)": [[121, "id7"]], "Training Input for Na\u00efve Bayes Classifier (Online Processing)": [[122, "id1"]], "Training Parameters for Na\u00efve Bayes Classifier (Online Processing)": [[122, "id2"]], "Na\u00efve Bayes Classifier": [[123, "naive-bayes-classifier"]], "Normalization": [[124, "normalization"]], "Min-max": [[125, "min-max"]], "Algorithm Input for Min-max (Batch Processing)": [[125, "id1"]], "Algorithm Parameters for Min-max (Batch Processing)": [[125, "id2"]], "Algorithm Output for Min-max (Batch Processing)": [[125, "id3"]], "Z-score": [[126, "z-score"]], "Algorithm Input for Z-score (Batch Processing)": [[126, "id1"]], "Algorithm Parameters for Z-score (Batch Processing)": [[126, "id2"]], "Algorithm Output for Z-score (Batch Processing)": [[126, "id3"]], "Iterative Solver": [[127, "iterative-solver"]], "Iterative solvers": [[127, null]], "Objective Function": [[128, "objective-function"]], "Objective functions": [[128, null]], "Input for Objective Function Computation": [[129, "id1"]], "Parameters for Objective Function Computation": [[129, "id2"]], "Output for Objective Function Computation": [[129, "id3"]], "Cross-entropy Loss": [[130, "cross-entropy-loss"]], "Algorithm Input for Cross-entropy Loss Computation": [[130, "id3"]], "Algorithm Parameters for Cross-entropy Loss Computation": [[130, "id4"]], "Algorithm Input for Logitic Loss Computation": [[131, "id3"]], "Algorithm Parameters for Logitic Loss Computation": [[131, "id4"]], "Mean Squared Error Algorithm": [[132, "mean-squared-error-algorithm"]], "Algorithm Input for MSE Computation": [[132, "id1"]], "Optional Algorithm Input": [[132, "optional-algorithm-input"]], "Optional Algorithm Input for MSE Computation": [[132, "id2"]], "Algorithm Parameters for MSE Computation": [[132, "id3"]], "Sum of Functions": [[133, "sum-of-functions"]], "Algorithm Input for Sum of Functions Computation": [[133, "id1"]], "Algorithm Parameters for Sum of Functions Computation": [[133, "id2"]], "Objective Function with Precomputed Characteristics Algorithm": [[134, "objective-function-with-precomputed-characteristics-algorithm"]], "Optimization Solvers": [[135, "optimization-solvers"], [173, null]], "Adaptive Subgradient Method": [[136, "adaptive-subgradient-method"]], "Algorithm Input for Adaptive Subgradient Method Computation": [[136, "id2"]], "Algorithm Parameters for Adaptive Subgradient Method Computation": [[136, "id3"]], "Algorithm Output for Adaptive Subgradient Method Computation": [[136, "id4"]], "Algorithm Input for Iterative Solver Computation": [[137, "id1"]], "Algorithm Parameters for Iterative Solver Computation": [[137, "id2"]], "Algorithm Output for Iterative Solver Computation": [[137, "id3"]], "Coordinate Descent Algorithm": [[138, "coordinate-descent-algorithm"]], "Algorithm Parameters for Coordinate Descent Computation": [[138, "id2"]], "Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Algorithm": [[139, "limited-memory-broyden-fletcher-goldfarb-shanno-algorithm"]], "Transformation": [[139, "transformation"]], "Intrinsic Parameters": [[139, "intrinsic-parameters"]], "Hessian Update Algorithm": [[139, "hessian-update-algorithm"]], "Algorithm Input for Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Computation": [[139, "id3"]], "Algorithm Parameters for Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Computation": [[139, "id4"]], "Algorithm Output for Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Computation": [[139, "id5"]], "Stochastic Average Gradient Accelerated Method": [[140, "stochastic-average-gradient-accelerated-method"]], "Algorithm Input for Stochastic Average Gradient Accelerated Method Computation": [[140, "id2"]], "Algorithm Parameters for Stochastic Average Gradient Accelerated Method Computation": [[140, "id3"]], "Algorithm Output for Stochastic Average Gradient Accelerated Method Computation": [[140, "id4"]], "Stochastic Gradient Descent Algorithm": [[141, "stochastic-gradient-descent-algorithm"]], "Computation methods": [[141, "computation-methods"]], "Mini-batch method": [[141, "mini-batch-method"]], "Default method": [[141, "default-method"]], "Momentum method": [[141, "momentum-method"]], "Algorithm Parameters for Stochastic Gradient Descent Algorithm Computation": [[141, "id3"]], "Outlier Detection": [[142, "outlier-detection"]], "Multivariate Outlier Detection": [[143, "multivariate-outlier-detection"]], "Algorithm Input for Multivariate Outlier Detection (Batch Processing)": [[143, "id2"]], "Default Values for Algorithm Input of Multivariate Outlier Detection (Batch Processing)": [[143, "id3"]], "Algorithm Parameters for Multivariate Outlier Detection (Batch Processing)": [[143, "id4"]], "Algorithm Output for Multivariate Outlier Detection (Batch Processing)": [[143, "id5"]], "Multivariate BACON Outlier Detection": [[144, "multivariate-bacon-outlier-detection"]], "Algorithm Input for Multivariate BACON Outlier Detection (Batch Processing)": [[144, "id2"]], "Algorithm Parameters for Multivariate BACON Outlier Detection (Batch Processing)": [[144, "id3"]], "Algorithm Output for Multivariate BACON Outlier Detection (Batch Processing)": [[144, "id4"]], "Univariate Outlier Detection": [[145, "univariate-outlier-detection"]], "Algorithm Input for Univariate Outlier Detection (Batch Processing)": [[145, "id2"]], "Default Values for Algorithm Input of Univariate Outlier Detection (Batch Processing)": [[145, "id3"]], "Algorithm Parameters for Univariate Outlier Detection (Batch Processing)": [[145, "id4"]], "Algorithm Output for Univariate Outlier Detection (Batch Processing)": [[145, "id5"]], "Algorithm Input for Principal Component Analysis (Batch Processing)": [[146, "id1"]], "Algorithm Parameters for Principal Component Analysis (Batch Processing)": [[146, "id2"]], "Algorithm Output for Principal Component Analysis (Batch Processing)": [[146, "id3"]], "Algorithm Parameters for Principal Component Analysis (Distributed Processing)": [[147, "id1"]], "Input for Principal Component Analysis using Correlation method (Distributed Processing, Step 1)": [[147, "id2"]], "Output for Principal Component Analysis using Correlation method (Distributed Processing, Step 1)": [[147, "id3"]], "Input for Principal Component Analysis using SVD method (Distributed Processing, Step 1)": [[147, "id4"]], "Output for Principal Component Analysis using SVD method (Distributed Processing, Step 1)": [[147, "id5"]], "Input for Principal Component Analysis using Correlation method (Distributed Processing, Step 2)": [[147, "id6"]], "Output for Principal Component Analysis using Correlation method (Distributed Processing, Step 2)": [[147, "id7"]], "Input for Principal Component Analysis using SVD method (Distributed Processing, Step 2)": [[147, "id8"]], "Output for Principal Component Analysis using SVD method (Distributed Processing, Step 2)": [[147, "id9"]], "Algorithm Input for Principal Component Analysis (Online Processing)": [[148, "id1"]], "Algorithm Parameters for Principal Component Analysis (Online Processing)": [[148, "id2"]], "Partial Results for Principal Component Analysis using Correlation method (Online Processing)": [[148, "id3"]], "Partial Results for Principal Component Analysis using SVD method (Online Processing)": [[148, "id4"]], "Algorithm Output for Principal Component Analysis (Online Processing)": [[148, "id5"]], "Principal Component Analysis": [[149, "principal-component-analysis"]], "Principal Components Analysis Transform": [[150, "principal-components-analysis-transform"]], "Algorithm Input for Principal Components Analysis Transform (Batch Processing)": [[150, "id1"]], "Algorithm Parameters for Principal Components Analysis Transform (Batch Processing)": [[150, "id2"]], "Algorithm Output for Principal Components Analysis Transform (Batch Processing)": [[150, "id3"]], "QR Decomposition": [[151, "qr-decomposition"]], "Pivoted QR Decomposition": [[152, "pivoted-qr-decomposition"]], "Algorithm Input for Pivoted QR Decomposition (Batch Processing)": [[152, "id1"]], "Algorithm Parameters for Pivoted QR Decomposition (Batch Processing)": [[152, "id2"]], "Algorithm Output for Pivoted QR Decomposition (Batch Processing)": [[152, "id3"]], "QR Decomposition without Pivoting": [[153, "qr-decomposition-without-pivoting"]], "Batch and Online Processing": [[154, "batch-and-online-processing"], [168, "batch-and-online-processing"]], "Algorithm Input for QR Decomposition without Pivoting (Batch and Online Processing)": [[154, "id1"]], "Algorithm Parameters for QR Decomposition without Pivoting (Batch and Online Processing)": [[154, "id2"]], "Algorithm Output for QR Decomposition without Pivoting (Batch and Online Processing)": [[154, "id3"]], "Algorithm Parameters for QR Decomposition without Pivoting (Distributed Processing)": [[155, "id1"]], "Input for QR Decomposition without Pivoting (Distributed Processing, Step 1)": [[155, "id3"]], "Partial Results for QR Decomposition without Pivoting (Distributed Processing, Step 1)": [[155, "id4"]], "Input for QR Decomposition without Pivoting (Distributed Processing, Step 2)": [[155, "id6"]], "Partial Results for QR Decomposition without Pivoting (Distributed Processing, Step 2)": [[155, "id7"]], "Output for QR Decomposition without Pivoting (Distributed Processing, Step 2)": [[155, "id8"]], "Input for QR Decomposition without Pivoting (Distributed Processing, Step 3)": [[155, "id10"]], "Output for QR Decomposition without Pivoting (Distributed Processing, Step 3)": [[155, "id11"]], "Working with the Default Metric Set": [[156, "working-with-the-default-metric-set"]], "Quality Metrics for Binary Classification Algorithms": [[157, "quality-metrics-for-binary-classification-algorithms"]], "Notations for Quality Metrics for Binary Classification Algorithms": [[157, "id2"]], "Definitions of Quality Metrics for Binary Classification Algorithms": [[157, "id3"]], "Confusion Matrix for Binary Classification Algorithms": [[157, "id4"]], "Algorithm Input for Quality Metrics for Binary Classification (Batch Processing)": [[157, "id5"]], "Algorithm Parameters for Quality Metrics for Binary Classification (Batch Processing)": [[157, "id6"]], "Algorithm Output for Quality Metrics for Binary Classification (Batch Processing)": [[157, "id7"]], "Quality Metrics for Linear Regression": [[158, "quality-metrics-for-linear-regression"]], "Testing Insignificance of a Single Beta": [[158, "testing-insignificance-of-a-single-beta"], [158, "qm-lin-reg-single-beta-batch"]], "Quality Metrics for Testing Insignificance of a Single Beta": [[158, "id4"]], "Testing Insignificance of a Group of Betas": [[158, "testing-insignificance-of-a-group-of-betas"], [158, "qm-lin-reg-group-of-betas-batch"]], "Quality Metrics for Testing Insignificance of a Group of Betas": [[158, "id5"]], "Algorithm Input for Testing Insignificance of a Single Beta in Linear Regression (Batch Processing)": [[158, "id6"]], "Algorithm Parameters for Testing Insignificance of a Single Beta in Linear Regression (Batch Processing)": [[158, "id7"]], "Algorithm Output for Testing Insignificance of a Single Beta in Linear Regression (Batch Processing)": [[158, "id8"]], "Algorithm Input for Testing Insignificance of a Group of Betas in Linear Regression (Batch Processing)": [[158, "id9"]], "Algorithm Parameters for Testing Insignificance of a Group of Betas in Linear Regression (Batch Processing)": [[158, "id10"]], "Algorithm Output for Testing Insignificance of a Group of Betas in Linear Regression (Batch Processing)": [[158, "id11"]], "Quality Metrics for Multi-class Classification Algorithms": [[159, "quality-metrics-for-multi-class-classification-algorithms"]], "Notations for Quality Metrics for Multi-class Classification Algorithms": [[159, "id2"]], "Definitions of Quality Metrics for Multi-class Classification Algorithms": [[159, "id3"]], "Confusion Matrix for Multi-class Classification Algorithms": [[159, "id4"]], "Algorithm Input for Quality Metrics for Multi-class Classification Algorithms (Batch Processing)": [[159, "id5"]], "Algorithm Parameters for Quality Metrics for Multi-class Classification Algorithms (Batch Processing)": [[159, "id6"]], "Algorithm Output for Quality Metrics for Multi-class Classification Algorithms (Batch Processing)": [[159, "id7"]], "Quality Metrics for Principal Components Analysis": [[160, "quality-metrics-for-principal-components-analysis"], [160, "id1"]], "Algorithm Input for Quality Metrics for Principal Components Analysis (Batch Processing)": [[160, "id2"]], "Algorithm Parameters for Quality Metrics for Principal Components Analysis (Batch Processing)": [[160, "id3"]], "Algorithm Output for Quality Metrics for Principal Components Analysis (Batch Processing)": [[160, "id4"]], "Quality Metrics": [[161, "quality-metrics"]], "Working with User-defined Quality Metrics": [[162, "working-with-user-defined-quality-metrics"]], "Quantile": [[163, "quantile"]], "Algorithm Input for Quantile (Batch Processing)": [[163, "id1"]], "Algorithm Parameters for Quantile (Batch Processing)": [[163, "id2"]], "Algorithm Output for Quantile (Batch Processing)": [[163, "id3"]], "Sorting": [[164, "sorting"]], "Algorithm Input for Sorting (Batch Processing)": [[164, "id1"]], "Algorithm Parameters for Sorting (Batch Processing)": [[164, "id2"]], "Algorithm Output for Sorting (Batch Processing)": [[164, "id3"]], "Classification Stump": [[165, "classification-stump"]], "Training Parameters for Classification Stump (Batch Processing)": [[165, "id2"], [165, "id3"]], "Stump": [[166, "stump"]], "Regression Stump": [[167, "regression-stump"]], "Training Parameters for Regression Stump (Batch Processing)": [[167, "id2"]], "Prediction Parameters for Regression Stump (Batch Processing)": [[167, "id3"]], "Algorithm Input for Singular Value Decomposition (Batch and Online Processing)": [[168, "id1"]], "Algorithm Parameters for Singular Value Decomposition (Batch and Online Processing)": [[168, "id2"]], "Algorithm Output for Singular Value Decomposition (Batch and Online Processing)": [[168, "id3"]], "Algorithm Parameters for Singular Value Decomposition (Distributed Processing)": [[169, "id1"]], "Input for Singular Value Decomposition (Distributed Processing, Step 1)": [[169, "id3"]], "Partial Results for Singular Value Decomposition (Distributed Processing, Step 1)": [[169, "id4"]], "Input for Singular Value Decomposition (Distributed Processing, Step 2)": [[169, "id6"]], "Partial Results for Singular Value Decomposition (Distributed Processing, Step 2)": [[169, "id7"]], "Output for Singular Value Decomposition (Distributed Processing, Step 2)": [[169, "id8"]], "Input for Singular Value Decomposition (Distributed Processing, Step 3)": [[169, "id10"]], "Output for Singular Value Decomposition (Distributed Processing, Step 3)": [[169, "id11"]], "Singular Value Decomposition": [[170, "singular-value-decomposition"]], "Support Vector Machine Classifier": [[171, "support-vector-machine-classifier"]], "Training Parameters for Support Vector Machine Classifier (Batch Processing)": [[171, "id11"]], "Prediction Parameters for Support Vector Machine Classifier (Batch Processing)": [[171, "id12"]], "Multi-class Classifier": [[172, "multi-class-classifier"]], "Training Parameters for  Multi-class Classifier (Batch Processing)": [[172, "id5"]], "Prediction Parameters for  Multi-class Classifier (Batch Processing)": [[172, "id6"]], "Output for  Multi-class Classifier (Batch Processing)": [[172, "id7"]], "Analysis": [[173, "analysis"]], "CPU and GPU Support": [[174, "cpu-and-gpu-support"]], "Computation modes": [[174, "computation-modes"]], "GPU Support: Computation Modes": [[174, "id1"]], "Methods": [[174, "methods"]], "GPU Support: Methods": [[174, "id2"]], "GPU Support: Algorithm Parameters": [[174, "id3"]], "Data Compression": [[175, "data-compression"]], "General API for Data Compression and Decompression": [[175, "general-api-for-data-compression-and-decompression"]], "Compression and Decompression Interfaces": [[175, "compression-and-decompression-interfaces"]], "Data Dictionaries": [[176, "data-dictionaries"]], "Data Model": [[178, "data-model"]], "Data Serialization and Deserialization": [[179, "data-serialization-and-deserialization"]], "Samples": [[180, "samples"]], "Essential Interfaces for Algorithms": [[181, "essential-interfaces-for-algorithms"]], "Generic Interfaces": [[182, "generic-interfaces"]], "Initialize": [[182, "initialize"]], "Operate": [[182, "operate"]], "Deinitialize": [[182, "deinitialize"]], "Numeric Tables": [[183, "numeric-tables"]], "Types of Numeric Tables": [[184, "types-of-numeric-tables"]], "Heterogeneous Numeric Tables": [[184, "heterogeneous-numeric-tables"]], "AOS Numeric Table": [[184, "aos-numeric-table"]], "SOA Numeric Table": [[184, "soa-numeric-table"]], "Homogeneous Numeric Tables": [[184, "homogeneous-numeric-tables"]], "CSR Numeric Table": [[184, "csr-numeric-table"]], "Merged Numeric Table": [[184, "merged-numeric-table"]], "Providing a Callback for the Host Application": [[185, "providing-a-callback-for-the-host-application"]], "Algorithm class methods": [[185, "id1"]], "HostAppIface class Methods": [[185, "id2"]], "Extracting Version Information": [[186, "extracting-version-information"]], "Handling Errors": [[187, "handling-errors"]], "Managing the Computational Environment": [[188, "managing-the-computational-environment"]], "Managing Memory": [[189, "managing-memory"]], "Services": [[190, "services"]], "Training and Prediction": [[191, "training-and-prediction"]], "Training Alternative": [[191, "training-alternative"]], "Computation Modes": [[193, "computation-modes"]], "Batch processing": [[193, "batch-processing"]], "Online processing": [[193, "online-processing"]], "Distributed processing": [[193, "distributed-processing"]], "Library Usage": [[194, "library-usage"]], "Classification Usage Model": [[195, "classification-usage-model"]], "Algorithm-Specific Parameters": [[195, "algorithm-specific-parameters"], [197, "algorithm-specific-parameters"], [198, "algorithm-specific-parameters"]], "Training Input for Classification Algorithms": [[195, "id3"]], "Training Output for Classification Algorithms": [[195, "id4"]], "Prediction Input for Classification Algorithms": [[195, "id6"]], "Prediction Output for Classification Algorithms": [[195, "id7"]], "Usage Model: Training and Prediction": [[196, "usage-model-training-and-prediction"]], "Recommendation Systems Usage Model": [[197, "recommendation-systems-usage-model"]], "Training Input for Recommender Algorithms": [[197, "id2"]], "Training Output for Recommender Algorithms": [[197, "id3"]], "Prediction Input for Recommender Algorithms": [[197, "id5"]], "Prediction Output for Recommender Algorithms": [[197, "id6"]], "Regression Usage Model": [[198, "regression-usage-model"]], "Training Input for Regression Algorithms": [[198, "id3"]], "Training Output for Regression Algorithms": [[198, "id4"]], "Prediction Input for Regression Algorithms": [[198, "id6"]], "Prediction Output for Regression Algorithms": [[198, "id7"]], "Introduction": [[199, "introduction"], [371, "introduction"]], "Data Analytics Pipeline": [[199, "data-analytics-pipeline"]], "Deprecation Notice": [[200, "deprecation-notice"]], "Java* Interfaces": [[200, "java-interfaces"]], "DAAL CPP SYCL Interfaces": [[200, "daal-cpp-sycl-interfaces"]], "Compression Functionality": [[200, "compression-functionality"]], "ABI Compatibility": [[200, "abi-compatibility"]], "macOS* Support": [[200, "macos-support"]], "oneAPI Examples": [[201, "oneapi-examples"]], "oneAPI C++ Examples": [[202, "oneapi-c-examples"]], "oneAPI DPC++ examples": [[245, "oneapi-dpc-examples"]], "oneAPI Data Analytics Library (oneDAL)": [[318, "full-name-short-name"]], "oneAPI vs. DAAL Interfaces": [[318, "oneapi-vs-daal-interfaces"]], "Get Started": [[318, null]], "Developer Guide": [[318, null]], "Developer Reference": [[318, null]], "Installation": [[319, "installation"]], "Notices and Disclaimers": [[320, "notices-and-disclaimers"]], "oneAPI Interfaces": [[321, "oneapi-interfaces"]], "Distributed mode": [[322, "distributed-mode"], [324, "distributed-mode"], [326, "distributed-mode"], [329, "distributed-mode"], [330, "distributed-mode"], [342, "distributed-mode"], [343, "distributed-mode"], [344, "distributed-mode"], [349, "distributed-mode"]], "Training method: Lloyd\u2019s": [[324, "training-method-lloyd-s"]], "Inference method: Lloyd\u2019s": [[324, "inference-method-lloyd-s"]], "Computing method: dense": [[325, "computing-method-dense"]], "Computing method: random_dense": [[325, "computing-method-random-dense"]], "Computing method: plus_plus_dense (only on CPU)": [[325, "computing-method-plus-plus-dense-only-on-cpu"]], "Computing method: parallel_plus_dense (only on CPU)": [[325, "computing-method-parallel-plus-dense-only-on-cpu"]], "Computation method: dense": [[326, "computation-method-dense"], [337, "computation-method-dense"], [338, "computation-method-dense"], [339, "computation-method-dense"], [340, "computation-method-dense"], [345, "computation-method-dense"], [346, "computation-method-dense"], [348, "computation-method-dense"], [349, "computation-method-dense"]], "Training method: Covariance": [[329, "training-method-covariance"]], "Training method: SVD": [[329, "training-method-svd"]], "Sign-flip technique": [[329, "sign-flip-technique"]], "Inference methods: Covariance and SVD": [[329, "inference-methods-covariance-and-svd"]], "Training method: Dense": [[330, "training-method-dense"]], "Training method: Hist": [[330, "training-method-hist"]], "Split strategy": [[330, "split-strategy"]], "Decision Forest Split Criteria Calculation": [[330, "id3"]], "MSE Impurity Metric": [[330, "id4"]], "Inference methods: Dense and Hist": [[330, "inference-methods-dense-and-hist"]], "Computation method: afforest": [[332, "computation-method-afforest"]], "Subgraphs definition": [[334, "subgraphs-definition"]], "Computation method: fast": [[334, "computation-method-fast"]], "k-Nearest Neighbors Classification, Regression, and Search (k-NN)": [[342, "k-nearest-neighbors-classification-regression-and-search-k-nn"]], "Training method: brute-force": [[342, "training-method-brute-force"]], "Training method: k-d tree": [[342, "training-method-k-d-tree"]], "Inference method: brute-force": [[342, "inference-method-brute-force"]], "Inference method: k-d tree": [[342, "inference-method-k-d-tree"]], "Supported objective functions": [[343, "supported-objective-functions"]], "Value": [[343, "value"], [344, "value"]], "Gradient": [[343, "gradient"], [344, "gradient"]], "Hessian": [[343, "hessian"], [344, "hessian"]], "Computation method: dense_batch": [[343, "computation-method-dense-batch"], [344, "computation-method-dense-batch"]], "Support Vector Machine Classifier and Regression (SVM)": [[352, "support-vector-machine-classifier-and-regression-svm"]], "Training method: smo": [[352, "training-method-smo"]], "Training method: thunder": [[352, "training-method-thunder"]], "Inference methods: smo and thunder": [[352, "inference-methods-smo-and-thunder"]], "Appendix": [[354, "appendix"]], "k-d Tree": [[355, "k-d-tree"]], "Related terms": [[355, "related-terms"]], "Build applications with oneDAL": [[356, "build-applications-with-onedal"]], "Applications on Linux* OS": [[356, "applications-on-linux-os"]], "oneDAL libraries for Linux": [[356, "id1"]], "Applications on Windows* OS": [[356, "applications-on-windows-os"]], "oneDAL libraries for Windows": [[356, "id2"]], "oneDAL debug libraries for Windows": [[356, "id3"]], "Requirements": [[359, "requirements"]], "Accessor Types": [[359, "accessor-types"], [359, "id2"]], "Data ownership requirements": [[360, "data-ownership-requirements"]], "Read": [[362, "read"]], "Read operation definition": [[362, "read-operation-definition"]], "Read operation shortcuts": [[362, "read-operation-shortcuts"]], "Data Source Types": [[362, "data-source-types"], [362, "id3"]], "Requirements on graph types": [[365, "requirements-on-graph-types"]], "Graph types": [[365, "graph-types"]], "Key concepts": [[366, "key-concepts"]], "Dataset": [[366, "dataset"]], "Data source": [[366, "data-source"]], "Accessor": [[366, "accessor"]], "Example of interaction between table and accessor objects": [[366, "example-of-interaction-between-table-and-accessor-objects"]], "Table Types": [[369, "id1"]], "Requirements on table types": [[369, "requirements-on-table-types"]], "Table types": [[369, "table-types"]], "Table Types for specific data formats": [[369, "id2"]], "Glossary": [[370, "glossary"]], "Machine learning terms": [[370, "machine-learning-terms"]], "Graph analytics terms": [[370, "graph-analytics-terms"]], "oneDAL terms": [[370, "short-name-terms"]], "Common oneAPI terms": [[370, "common-oneapi-terms"]], "Distributed computational mode terms": [[370, "distributed-computational-mode-terms"]], "Mathematical Notations": [[372, "mathematical-notations"]], "Computational Modes": [[373, "computational-modes"]], "Batch": [[373, "batch"]], "Online": [[373, "online"]], "Distributed": [[373, "distributed"]], "Single Program Multiple Data": [[374, "single-program-multiple-data"]], "Distributed computation using SPMD model": [[374, "distributed-computation-using-spmd-model"]], "Supported Collective Operations": [[374, "supported-collective-operations"]], "Backend-specific restrictions": [[374, "backend-specific-restrictions"]], "Quick Start": [[375, "quick-start"]], "Before You Begin": [[375, "before-you-begin"]], "End-to-end Example": [[375, "end-to-end-example"]], "Build and Run Examples": [[375, "build-and-run-examples"]], "System Requirements": [[376, "system-requirements"]], "Hardware Requirements": [[376, "hardware-requirements"]], "Software Requirements": [[376, "software-requirements"]], "basic_statistics_dense_batch.cpp": [[203, "basic-statistics-dense-batch-cpp"], [246, "basic-statistics-dense-batch-cpp"]], "column_accessor_homogen.cpp": [[204, "column-accessor-homogen-cpp"], [247, "column-accessor-homogen-cpp"]], "connected_components_batch.cpp": [[205, "connected-components-batch-cpp"]], "cor_dense_batch.cpp": [[206, "cor-dense-batch-cpp"], [248, "cor-dense-batch-cpp"]], "cov_dense_batch.cpp": [[207, "cov-dense-batch-cpp"], [249, "cov-dense-batch-cpp"]], "csr_accessor.cpp": [[208, "csr-accessor-cpp"]], "dbscan_brute_force_batch.cpp": [[209, "dbscan-brute-force-batch-cpp"], [250, "dbscan-brute-force-batch-cpp"]], "df_cls_dense_batch.cpp": [[210, "df-cls-dense-batch-cpp"]], "df_reg_dense_batch.cpp": [[211, "df-reg-dense-batch-cpp"]], "directed_graph.cpp": [[212, "directed-graph-cpp"]], "graph_service_functions.cpp": [[213, "graph-service-functions-cpp"]], "jaccard_batch.cpp": [[214, "jaccard-batch-cpp"]], "jaccard_batch_app.cpp": [[215, "jaccard-batch-app-cpp"]], "kmeans_init_dense.cpp": [[216, "kmeans-init-dense-cpp"], [257, "kmeans-init-dense-cpp"]], "kmeans_lloyd_dense_batch.cpp": [[217, "kmeans-lloyd-dense-batch-cpp"], [258, "kmeans-lloyd-dense-batch-cpp"]], "knn_cls_brute_force_dense_batch.cpp": [[218, "knn-cls-brute-force-dense-batch-cpp"], [259, "knn-cls-brute-force-dense-batch-cpp"]], "knn_cls_kd_tree_dense_batch.cpp": [[219, "knn-cls-kd-tree-dense-batch-cpp"]], "knn_search_brute_force_dense_batch.cpp": [[220, "knn-search-brute-force-dense-batch-cpp"], [261, "knn-search-brute-force-dense-batch-cpp"]], "linear_kernel_dense_batch.cpp": [[221, "linear-kernel-dense-batch-cpp"], [262, "linear-kernel-dense-batch-cpp"]], "linear_regression_dense_batch.cpp": [[222, "linear-regression-dense-batch-cpp"], [263, "linear-regression-dense-batch-cpp"]], "logloss_dense_batch.cpp": [[223, "logloss-dense-batch-cpp"]], "louvain_batch.cpp": [[224, "louvain-batch-cpp"]], "pca_dense_batch.cpp": [[225, "pca-dense-batch-cpp"]], "pca_precomputed_dense_batch.cpp": [[226, "pca-precomputed-dense-batch-cpp"]], "polynomial_kernel_dense_batch.cpp": [[227, "polynomial-kernel-dense-batch-cpp"]], "rbf_kernel_dense_batch.cpp": [[228, "rbf-kernel-dense-batch-cpp"], [267, "rbf-kernel-dense-batch-cpp"]], "shortest_paths_batch.cpp": [[229, "shortest-paths-batch-cpp"]], "sigmoid_kernel_dense_batch.cpp": [[230, "sigmoid-kernel-dense-batch-cpp"]], "subgraph_isomorphism_batch.cpp": [[231, "subgraph-isomorphism-batch-cpp"]], "svm_multi_class_thunder_csr_batch.cpp": [[232, "svm-multi-class-thunder-csr-batch-cpp"]], "svm_multi_class_thunder_dense_batch.cpp": [[233, "svm-multi-class-thunder-dense-batch-cpp"]], "svm_nu_cls_thunder_csr_batch.cpp": [[234, "svm-nu-cls-thunder-csr-batch-cpp"]], "svm_nu_cls_thunder_dense_batch.cpp": [[235, "svm-nu-cls-thunder-dense-batch-cpp"]], "svm_nu_reg_thunder_csr_batch.cpp": [[236, "svm-nu-reg-thunder-csr-batch-cpp"]], "svm_nu_reg_thunder_dense_batch.cpp": [[237, "svm-nu-reg-thunder-dense-batch-cpp"]], "svm_reg_thunder_csr_batch.cpp": [[238, "svm-reg-thunder-csr-batch-cpp"]], "svm_reg_thunder_dense_batch.cpp": [[239, "svm-reg-thunder-dense-batch-cpp"]], "svm_two_class_smo_csr_batch.cpp": [[240, "svm-two-class-smo-csr-batch-cpp"]], "svm_two_class_smo_dense_batch.cpp": [[241, "svm-two-class-smo-dense-batch-cpp"]], "svm_two_class_thunder_csr_batch.cpp": [[242, "svm-two-class-thunder-csr-batch-cpp"]], "svm_two_class_thunder_dense_batch.cpp": [[243, "svm-two-class-thunder-dense-batch-cpp"], [268, "svm-two-class-thunder-dense-batch-cpp"]], "triangle_counting_batch.cpp": [[244, "triangle-counting-batch-cpp"]], "df_cls_hist_batch.cpp": [[251, "df-cls-hist-batch-cpp"]], "df_cls_hist_batch_random.cpp": [[252, "df-cls-hist-batch-random-cpp"]], "df_cls_traverse_model.cpp": [[253, "df-cls-traverse-model-cpp"]], "df_reg_hist_batch.cpp": [[254, "df-reg-hist-batch-cpp"]], "df_reg_hist_batch_random.cpp": [[255, "df-reg-hist-batch-random-cpp"]], "df_reg_traverse_model.cpp": [[256, "df-reg-traverse-model-cpp"]], "knn_reg_brute_force_dense_batch.cpp": [[260, "knn-reg-brute-force-dense-batch-cpp"]], "pca_cor_dense_batch.cpp": [[264, "pca-cor-dense-batch-cpp"]], "pca_precomputed_cor_dense_batch.cpp": [[265, "pca-precomputed-cor-dense-batch-cpp"]], "pca_precomputed_cov_dense_batch.cpp": [[266, "pca-precomputed-cov-dense-batch-cpp"]]}, "indexentries": {"oneapi::dal::dbscan::compute (c++ function)": [[1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE"]], "oneapi::dal::dbscan::compute_input (c++ class)": [[1, "_CPPv4I0EN6oneapi3dal6dbscan13compute_inputE"]], "oneapi::dal::dbscan::compute_input::compute_input (c++ function)": [[1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::dbscan::compute_input::data (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan13compute_input4dataE"]], "oneapi::dal::dbscan::compute_input::weights (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan13compute_input7weightsE"]], "oneapi::dal::dbscan::compute_result (c++ class)": [[1, "_CPPv4I0EN6oneapi3dal6dbscan14compute_resultE"]], "oneapi::dal::dbscan::compute_result::cluster_count (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result13cluster_countE"]], "oneapi::dal::dbscan::compute_result::compute_result (c++ function)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result14compute_resultEv"]], "oneapi::dal::dbscan::compute_result::core_flags (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result10core_flagsE"]], "oneapi::dal::dbscan::compute_result::core_observation_indices (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result24core_observation_indicesE"]], "oneapi::dal::dbscan::compute_result::core_observations (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result17core_observationsE"]], "oneapi::dal::dbscan::compute_result::responses (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result9responsesE"]], "oneapi::dal::dbscan::compute_result::result_options (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result14result_optionsE"]], "oneapi::dal::dbscan::descriptor (c++ class)": [[1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE"]], "oneapi::dal::dbscan::descriptor::descriptor (c++ function)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE"]], "oneapi::dal::dbscan::descriptor::epsilon (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor7epsilonE"]], "oneapi::dal::dbscan::descriptor::mem_save_mode (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor13mem_save_modeE"]], "oneapi::dal::dbscan::descriptor::min_observations (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor16min_observationsE"]], "oneapi::dal::dbscan::descriptor::result_options (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor14result_optionsE"]], "oneapi::dal::dbscan::method::brute_force (c++ struct)": [[1, "_CPPv4N6oneapi3dal6dbscan6method11brute_forceE"]], "oneapi::dal::dbscan::method::by_default (c++ type)": [[1, "_CPPv4N6oneapi3dal6dbscan6method10by_defaultE"]], "oneapi::dal::dbscan::task::by_default (c++ type)": [[1, "_CPPv4N6oneapi3dal6dbscan4task10by_defaultE"]], "oneapi::dal::dbscan::task::clustering (c++ struct)": [[1, "_CPPv4N6oneapi3dal6dbscan4task10clusteringE"]], "oneapi::dal::kmeans::descriptor (c++ class)": [[3, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE"]], "oneapi::dal::kmeans::descriptor::accuracy_threshold (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE"]], "oneapi::dal::kmeans::descriptor::cluster_count (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE"]], "oneapi::dal::kmeans::descriptor::descriptor (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans::descriptor::max_iteration_count (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE"]], "oneapi::dal::kmeans::infer (c++ function)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input::data (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE"]], "oneapi::dal::kmeans::infer_input::infer_input (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::kmeans::infer_input::model (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE"]], "oneapi::dal::kmeans::infer_result (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE"]], "oneapi::dal::kmeans::infer_result::infer_result (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv"]], "oneapi::dal::kmeans::infer_result::labels (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result6labelsE"]], "oneapi::dal::kmeans::infer_result::objective_function_value (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result24objective_function_valueE"]], "oneapi::dal::kmeans::infer_result::responses (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result9responsesE"]], "oneapi::dal::kmeans::method::by_default (c++ type)": [[3, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE"]], "oneapi::dal::kmeans::method::lloyd_dense (c++ struct)": [[3, "_CPPv4N6oneapi3dal6kmeans6method11lloyd_denseE"]], "oneapi::dal::kmeans::model (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans5modelE"]], "oneapi::dal::kmeans::model::centroids (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans5model9centroidsE"]], "oneapi::dal::kmeans::model::get_cluster_count (c++ function)": [[3, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv"]], "oneapi::dal::kmeans::model::model (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans5model5modelEv"]], "oneapi::dal::kmeans::task::by_default (c++ type)": [[3, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE"]], "oneapi::dal::kmeans::task::clustering (c++ struct)": [[3, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE"]], "oneapi::dal::kmeans::train (c++ function)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input::data (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE"]], "oneapi::dal::kmeans::train_input::initial_centroids (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE"]], "oneapi::dal::kmeans::train_input::train_input (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5table"], [3, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::kmeans::train_result (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE"]], "oneapi::dal::kmeans::train_result::iteration_count (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result15iteration_countE"]], "oneapi::dal::kmeans::train_result::labels (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result6labelsE"]], "oneapi::dal::kmeans::train_result::model (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result5modelE"]], "oneapi::dal::kmeans::train_result::objective_function_value (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result24objective_function_valueE"]], "oneapi::dal::kmeans::train_result::responses (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result9responsesE"]], "oneapi::dal::kmeans::train_result::train_result (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv"]], "oneapi::dal::kmeans_init::compute (c++ function)": [[4, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input (c++ class)": [[4, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input::compute_input (c++ function)": [[4, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table"]], "oneapi::dal::kmeans_init::compute_input::data (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE"]], "oneapi::dal::kmeans_init::compute_result (c++ class)": [[4, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE"]], "oneapi::dal::kmeans_init::compute_result::centroids (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init14compute_result9centroidsE"]], "oneapi::dal::kmeans_init::compute_result::compute_result (c++ function)": [[4, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv"]], "oneapi::dal::kmeans_init::descriptor (c++ class)": [[4, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE"]], "oneapi::dal::kmeans_init::descriptor::cluster_count (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE"]], "oneapi::dal::kmeans_init::descriptor::descriptor (c++ function)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans_init::descriptor::local_trials_count (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor18local_trials_countE"]], "oneapi::dal::kmeans_init::descriptor::seed (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor4seedE"]], "oneapi::dal::kmeans_init::method::by_default (c++ type)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE"]], "oneapi::dal::kmeans_init::method::dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE"]], "oneapi::dal::kmeans_init::method::parallel_plus_dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method19parallel_plus_denseE"]], "oneapi::dal::kmeans_init::method::plus_plus_dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method15plus_plus_denseE"]], "oneapi::dal::kmeans_init::method::random_dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method12random_denseE"]], "oneapi::dal::kmeans_init::task::by_default (c++ type)": [[4, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE"]], "oneapi::dal::kmeans_init::task::init (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init4task4initE"]], "oneapi::dal::covariance::compute (c++ function)": [[5, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE"]], "oneapi::dal::covariance::compute_input (c++ class)": [[5, "_CPPv4I0EN6oneapi3dal10covariance13compute_inputE"]], "oneapi::dal::covariance::compute_input::compute_input (c++ function)": [[5, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputERK5table"]], "oneapi::dal::covariance::compute_input::data (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance13compute_input4dataE"]], "oneapi::dal::covariance::compute_result (c++ class)": [[5, "_CPPv4I0EN6oneapi3dal10covariance14compute_resultE"]], "oneapi::dal::covariance::compute_result::compute_result (c++ function)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result14compute_resultEv"]], "oneapi::dal::covariance::compute_result::cor_matrix (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result10cor_matrixE"]], "oneapi::dal::covariance::compute_result::cov_matrix (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result10cov_matrixE"]], "oneapi::dal::covariance::compute_result::means (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result5meansE"]], "oneapi::dal::covariance::compute_result::result_options (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result14result_optionsE"]], "oneapi::dal::covariance::descriptor (c++ class)": [[5, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE"]], "oneapi::dal::covariance::descriptor::descriptor (c++ function)": [[5, "_CPPv4N6oneapi3dal10covariance10descriptor10descriptorEv"]], "oneapi::dal::covariance::descriptor::result_options (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance10descriptor14result_optionsE"]], "oneapi::dal::covariance::method::by_default (c++ type)": [[5, "_CPPv4N6oneapi3dal10covariance6method10by_defaultE"]], "oneapi::dal::covariance::method::dense (c++ struct)": [[5, "_CPPv4N6oneapi3dal10covariance6method5denseE"]], "oneapi::dal::covariance::task::by_default (c++ type)": [[5, "_CPPv4N6oneapi3dal10covariance4task10by_defaultE"]], "oneapi::dal::covariance::task::compute (c++ struct)": [[5, "_CPPv4N6oneapi3dal10covariance4task7computeE"]], "oneapi::dal::pca::descriptor (c++ class)": [[8, "_CPPv4I000EN6oneapi3dal3pca10descriptorE"]], "oneapi::dal::pca::descriptor::component_count (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE"]], "oneapi::dal::pca::descriptor::descriptor (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::pca::descriptor::deterministic (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE"]], "oneapi::dal::pca::descriptor::result_options (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor14result_optionsE"]], "oneapi::dal::pca::infer (c++ function)": [[8, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE"]], "oneapi::dal::pca::infer_input (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE"]], "oneapi::dal::pca::infer_input::data (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca11infer_input4dataE"]], "oneapi::dal::pca::infer_input::infer_input (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::pca::infer_input::model (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca11infer_input5modelE"]], "oneapi::dal::pca::infer_result (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE"]], "oneapi::dal::pca::infer_result::infer_result (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv"]], "oneapi::dal::pca::infer_result::transformed_data (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12infer_result16transformed_dataE"]], "oneapi::dal::pca::method::by_default (c++ type)": [[8, "_CPPv4N6oneapi3dal3pca6method10by_defaultE"]], "oneapi::dal::pca::method::cov (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca6method3covE"]], "oneapi::dal::pca::method::precomputed (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca6method11precomputedE"]], "oneapi::dal::pca::method::svd (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca6method3svdE"]], "oneapi::dal::pca::model (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca5modelE"]], "oneapi::dal::pca::model::eigenvectors (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca5model12eigenvectorsE"]], "oneapi::dal::pca::model::model (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca5model5modelEv"]], "oneapi::dal::pca::task::by_default (c++ type)": [[8, "_CPPv4N6oneapi3dal3pca4task10by_defaultE"]], "oneapi::dal::pca::task::dim_reduction (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE"]], "oneapi::dal::pca::train (c++ function)": [[8, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE"]], "oneapi::dal::pca::train_input (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca11train_inputE"]], "oneapi::dal::pca::train_input::data (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca11train_input4dataE"]], "oneapi::dal::pca::train_input::train_input (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table"]], "oneapi::dal::pca::train_result (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca12train_resultE"]], "oneapi::dal::pca::train_result::eigenvalues (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result11eigenvaluesE"]], "oneapi::dal::pca::train_result::get_eigenvectors (c++ function)": [[8, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv"]], "oneapi::dal::pca::train_result::means (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result5meansE"]], "oneapi::dal::pca::train_result::model (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result5modelE"]], "oneapi::dal::pca::train_result::result_options (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result14result_optionsE"]], "oneapi::dal::pca::train_result::train_result (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv"]], "oneapi::dal::pca::train_result::variances (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result9variancesE"]], "oneapi::dal::decision_forest::descriptor (c++ class)": [[9, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE"]], "oneapi::dal::decision_forest::descriptor::bootstrap (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor9bootstrapE"]], "oneapi::dal::decision_forest::descriptor::class_count (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor11class_countE"]], "oneapi::dal::decision_forest::descriptor::descriptor (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor10descriptorEv"]], "oneapi::dal::decision_forest::descriptor::error_metric_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor17error_metric_modeE"]], "oneapi::dal::decision_forest::descriptor::features_per_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor17features_per_nodeE"]], "oneapi::dal::decision_forest::descriptor::impurity_threshold (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor18impurity_thresholdE"]], "oneapi::dal::decision_forest::descriptor::infer_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor10infer_modeE"]], "oneapi::dal::decision_forest::descriptor::max_bins (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor8max_binsE"]], "oneapi::dal::decision_forest::descriptor::max_leaf_nodes (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_leaf_nodesE"]], "oneapi::dal::decision_forest::descriptor::max_tree_depth (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_tree_depthE"]], "oneapi::dal::decision_forest::descriptor::memory_saving_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor18memory_saving_modeE"]], "oneapi::dal::decision_forest::descriptor::min_bin_size (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor12min_bin_sizeE"]], "oneapi::dal::decision_forest::descriptor::min_impurity_decrease_in_split_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor35min_impurity_decrease_in_split_nodeE"]], "oneapi::dal::decision_forest::descriptor::min_observations_in_leaf_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor29min_observations_in_leaf_nodeE"]], "oneapi::dal::decision_forest::descriptor::min_observations_in_split_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor30min_observations_in_split_nodeE"]], "oneapi::dal::decision_forest::descriptor::min_weight_fraction_in_leaf_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor32min_weight_fraction_in_leaf_nodeE"]], "oneapi::dal::decision_forest::descriptor::observations_per_tree_fraction (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor30observations_per_tree_fractionE"]], "oneapi::dal::decision_forest::descriptor::seed (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor4seedE"]], "oneapi::dal::decision_forest::descriptor::splitter_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor13splitter_modeE"]], "oneapi::dal::decision_forest::descriptor::tree_count (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor10tree_countE"]], "oneapi::dal::decision_forest::descriptor::variable_importance_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor24variable_importance_modeE"]], "oneapi::dal::decision_forest::descriptor::voting_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor11voting_modeE"]], "oneapi::dal::decision_forest::infer (c++ function)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE"]], "oneapi::dal::decision_forest::infer_input (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest11infer_inputE"]], "oneapi::dal::decision_forest::infer_input::data (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11infer_input4dataE"]], "oneapi::dal::decision_forest::infer_input::infer_input (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::decision_forest::infer_input::model (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11infer_input5modelE"]], "oneapi::dal::decision_forest::infer_result (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest12infer_resultE"]], "oneapi::dal::decision_forest::infer_result::infer_result (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result12infer_resultEv"]], "oneapi::dal::decision_forest::infer_result::labels (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result6labelsE"]], "oneapi::dal::decision_forest::infer_result::probabilities (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result13probabilitiesE"]], "oneapi::dal::decision_forest::infer_result::responses (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result9responsesE"]], "oneapi::dal::decision_forest::method::by_default (c++ type)": [[9, "_CPPv4N6oneapi3dal15decision_forest6method10by_defaultE"]], "oneapi::dal::decision_forest::method::dense (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest6method5denseE"]], "oneapi::dal::decision_forest::method::hist (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest6method4histE"]], "oneapi::dal::decision_forest::model (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest5modelE"]], "oneapi::dal::decision_forest::model::get_class_count (c++ function)": [[9, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv"]], "oneapi::dal::decision_forest::model::get_tree_count (c++ function)": [[9, "_CPPv4NK6oneapi3dal15decision_forest5model14get_tree_countEv"]], "oneapi::dal::decision_forest::model::model (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest5model5modelEv"]], "oneapi::dal::decision_forest::model::traverse_breadth_first (c++ function)": [[9, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor"]], "oneapi::dal::decision_forest::model::traverse_depth_first (c++ function)": [[9, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor"]], "oneapi::dal::decision_forest::task::by_default (c++ type)": [[9, "_CPPv4N6oneapi3dal15decision_forest4task10by_defaultE"]], "oneapi::dal::decision_forest::task::classification (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest4task14classificationE"]], "oneapi::dal::decision_forest::task::regression (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest4task10regressionE"]], "oneapi::dal::decision_forest::train (c++ function)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE"]], "oneapi::dal::decision_forest::train_input (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest11train_inputE"]], "oneapi::dal::decision_forest::train_input::data (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input4dataE"]], "oneapi::dal::decision_forest::train_input::labels (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input6labelsE"]], "oneapi::dal::decision_forest::train_input::responses (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input9responsesE"]], "oneapi::dal::decision_forest::train_input::train_input (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table"]], "oneapi::dal::decision_forest::train_input::weights (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input7weightsE"]], "oneapi::dal::decision_forest::train_result (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest12train_resultE"]], "oneapi::dal::decision_forest::train_result::model (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result5modelE"]], "oneapi::dal::decision_forest::train_result::oob_err (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result7oob_errE"]], "oneapi::dal::decision_forest::train_result::oob_err_accuracy (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result16oob_err_accuracyE"]], "oneapi::dal::decision_forest::train_result::oob_err_decision_function (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result25oob_err_decision_functionE"]], "oneapi::dal::decision_forest::train_result::oob_err_per_observation (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result23oob_err_per_observationE"]], "oneapi::dal::decision_forest::train_result::oob_err_prediction (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result18oob_err_predictionE"]], "oneapi::dal::decision_forest::train_result::oob_err_r2 (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result10oob_err_r2E"]], "oneapi::dal::decision_forest::train_result::train_result (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result12train_resultEv"]], "oneapi::dal::decision_forest::train_result::var_importance (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result14var_importanceE"]], "oneapi::dal::preview::connected_components::descriptor (c++ class)": [[11, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE"]], "oneapi::dal::preview::connected_components::descriptor::descriptor (c++ function)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components10descriptor10descriptorERK9Allocator"]], "oneapi::dal::preview::connected_components::descriptor::get_allocator (c++ function)": [[11, "_CPPv4NK6oneapi3dal7preview20connected_components10descriptor13get_allocatorEv"]], "oneapi::dal::preview::connected_components::method::afforest (c++ struct)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components6method8afforestE"]], "oneapi::dal::preview::connected_components::method::by_default (c++ type)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components6method10by_defaultE"]], "oneapi::dal::preview::connected_components::preview::vertex_partitioning (c++ function)": [[11, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph"]], "oneapi::dal::preview::connected_components::task::by_default (c++ type)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components4task10by_defaultE"]], "oneapi::dal::preview::connected_components::task::vertex_partitioning (c++ struct)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components4task19vertex_partitioningE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_input (c++ class)": [[11, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_input::graph (c++ member)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input5graphE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_input::vertex_partitioning_input (c++ function)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input25vertex_partitioning_inputERK5Graph"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result (c++ class)": [[11, "_CPPv4I0EN6oneapi3dal7preview20connected_components26vertex_partitioning_resultE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result::component_count (c++ member)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result15component_countE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result::labels (c++ member)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result6labelsE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result::vertex_partitioning_result (c++ function)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result26vertex_partitioning_resultEv"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor (c++ class)": [[13, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::descriptor (c++ function)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor10descriptorE9Allocator"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::get_allocator (c++ function)": [[13, "_CPPv4NK6oneapi3dal7preview20subgraph_isomorphism10descriptor13get_allocatorEv"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::kind (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor4kindE"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::max_match_count (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor15max_match_countE"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::semantic_match (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor14semantic_matchE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input (c++ class)": [[13, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input (c++ function)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::pattern_graph (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input13pattern_graphE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::target_graph (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input12target_graphE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result (c++ class)": [[13, "_CPPv4I0EN6oneapi3dal7preview20subgraph_isomorphism21graph_matching_resultE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::graph_matching_result (c++ function)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result21graph_matching_resultEv"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::match_count (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result11match_countE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::vertex_match (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result12vertex_matchE"]], "oneapi::dal::preview::subgraph_isomorphism::kind (c++ enum)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4kindE"]], "oneapi::dal::preview::subgraph_isomorphism::method::by_default (c++ type)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method10by_defaultE"]], "oneapi::dal::preview::subgraph_isomorphism::method::fast (c++ struct)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method4fastE"]], "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching (c++ function)": [[13, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph"]], "oneapi::dal::preview::subgraph_isomorphism::task::by_default (c++ type)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task10by_defaultE"]], "oneapi::dal::preview::subgraph_isomorphism::task::compute (c++ struct)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task7computeE"]], "oneapi::dal::linear_kernel::compute (c++ function)": [[16, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE"]], "oneapi::dal::linear_kernel::compute_input (c++ class)": [[16, "_CPPv4I0EN6oneapi3dal13linear_kernel13compute_inputE"]], "oneapi::dal::linear_kernel::compute_input::compute_input (c++ function)": [[16, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::linear_kernel::compute_input::x (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1xE"]], "oneapi::dal::linear_kernel::compute_input::y (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1yE"]], "oneapi::dal::linear_kernel::compute_result (c++ class)": [[16, "_CPPv4I0EN6oneapi3dal13linear_kernel14compute_resultE"]], "oneapi::dal::linear_kernel::compute_result::compute_result (c++ function)": [[16, "_CPPv4N6oneapi3dal13linear_kernel14compute_result14compute_resultEv"]], "oneapi::dal::linear_kernel::compute_result::values (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel14compute_result6valuesE"]], "oneapi::dal::linear_kernel::descriptor (c++ class)": [[16, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE"]], "oneapi::dal::linear_kernel::descriptor::descriptor (c++ function)": [[16, "_CPPv4N6oneapi3dal13linear_kernel10descriptor10descriptorEv"]], "oneapi::dal::linear_kernel::descriptor::scale (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5scaleE"]], "oneapi::dal::linear_kernel::descriptor::shift (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5shiftE"]], "oneapi::dal::linear_kernel::method::by_default (c++ type)": [[16, "_CPPv4N6oneapi3dal13linear_kernel6method10by_defaultE"]], "oneapi::dal::linear_kernel::method::dense (c++ struct)": [[16, "_CPPv4N6oneapi3dal13linear_kernel6method5denseE"]], "oneapi::dal::linear_kernel::task::by_default (c++ type)": [[16, "_CPPv4N6oneapi3dal13linear_kernel4task10by_defaultE"]], "oneapi::dal::linear_kernel::task::compute (c++ struct)": [[16, "_CPPv4N6oneapi3dal13linear_kernel4task7computeE"]], "oneapi::dal::polynomial_kernel::compute (c++ function)": [[17, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE"]], "oneapi::dal::polynomial_kernel::compute_input (c++ class)": [[17, "_CPPv4I0EN6oneapi3dal17polynomial_kernel13compute_inputE"]], "oneapi::dal::polynomial_kernel::compute_input::compute_input (c++ function)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::polynomial_kernel::compute_input::x (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1xE"]], "oneapi::dal::polynomial_kernel::compute_input::y (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1yE"]], "oneapi::dal::polynomial_kernel::compute_result (c++ class)": [[17, "_CPPv4I0EN6oneapi3dal17polynomial_kernel14compute_resultE"]], "oneapi::dal::polynomial_kernel::compute_result::compute_result (c++ function)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result14compute_resultEv"]], "oneapi::dal::polynomial_kernel::compute_result::values (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result6valuesE"]], "oneapi::dal::polynomial_kernel::descriptor (c++ class)": [[17, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE"]], "oneapi::dal::polynomial_kernel::descriptor::degree (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor6degreeE"]], "oneapi::dal::polynomial_kernel::descriptor::descriptor (c++ function)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor10descriptorEv"]], "oneapi::dal::polynomial_kernel::descriptor::scale (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5scaleE"]], "oneapi::dal::polynomial_kernel::descriptor::shift (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5shiftE"]], "oneapi::dal::polynomial_kernel::method::by_default (c++ type)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel6method10by_defaultE"]], "oneapi::dal::polynomial_kernel::method::dense (c++ struct)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel6method5denseE"]], "oneapi::dal::polynomial_kernel::task::by_default (c++ type)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel4task10by_defaultE"]], "oneapi::dal::polynomial_kernel::task::compute (c++ struct)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel4task7computeE"]], "oneapi::dal::rbf_kernel::compute (c++ function)": [[18, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE"]], "oneapi::dal::rbf_kernel::compute_input (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal10rbf_kernel13compute_inputE"]], "oneapi::dal::rbf_kernel::compute_input::compute_input (c++ function)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::rbf_kernel::compute_input::x (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1xE"]], "oneapi::dal::rbf_kernel::compute_input::y (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1yE"]], "oneapi::dal::rbf_kernel::compute_result (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal10rbf_kernel14compute_resultE"]], "oneapi::dal::rbf_kernel::compute_result::compute_result (c++ function)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result14compute_resultEv"]], "oneapi::dal::rbf_kernel::compute_result::values (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result6valuesE"]], "oneapi::dal::rbf_kernel::descriptor (c++ class)": [[18, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE"]], "oneapi::dal::rbf_kernel::descriptor::descriptor (c++ function)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor10descriptorEv"]], "oneapi::dal::rbf_kernel::descriptor::sigma (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor5sigmaE"]], "oneapi::dal::rbf_kernel::method::by_default (c++ type)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel6method10by_defaultE"]], "oneapi::dal::rbf_kernel::method::dense (c++ struct)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel6method5denseE"]], "oneapi::dal::rbf_kernel::task::by_default (c++ type)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel4task10by_defaultE"]], "oneapi::dal::rbf_kernel::task::compute (c++ struct)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel4task7computeE"]], "oneapi::dal::sigmoid_kernel::compute (c++ function)": [[19, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE"]], "oneapi::dal::sigmoid_kernel::compute_input (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel13compute_inputE"]], "oneapi::dal::sigmoid_kernel::compute_input::compute_input (c++ function)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::sigmoid_kernel::compute_input::x (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1xE"]], "oneapi::dal::sigmoid_kernel::compute_input::y (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1yE"]], "oneapi::dal::sigmoid_kernel::compute_result (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel14compute_resultE"]], "oneapi::dal::sigmoid_kernel::compute_result::compute_result (c++ function)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result14compute_resultEv"]], "oneapi::dal::sigmoid_kernel::compute_result::values (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result6valuesE"]], "oneapi::dal::sigmoid_kernel::descriptor (c++ class)": [[19, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE"]], "oneapi::dal::sigmoid_kernel::descriptor::descriptor (c++ function)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor10descriptorEv"]], "oneapi::dal::sigmoid_kernel::descriptor::scale (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5scaleE"]], "oneapi::dal::sigmoid_kernel::descriptor::shift (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5shiftE"]], "oneapi::dal::sigmoid_kernel::method::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel6method10by_defaultE"]], "oneapi::dal::sigmoid_kernel::method::dense (c++ struct)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel6method5denseE"]], "oneapi::dal::sigmoid_kernel::task::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel4task10by_defaultE"]], "oneapi::dal::sigmoid_kernel::task::compute (c++ struct)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel4task7computeE"]], "oneapi::dal::knn::descriptor (c++ class)": [[21, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE"]], "oneapi::dal::knn::descriptor::class_count (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE"]], "oneapi::dal::knn::descriptor::descriptor (c++ function)": [[21, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE"], [21, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t"], [21, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t"], [21, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE"]], "oneapi::dal::knn::descriptor::distance (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor8distanceE"]], "oneapi::dal::knn::descriptor::neighbor_count (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE"]], "oneapi::dal::knn::descriptor::result_options (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor14result_optionsE"]], "oneapi::dal::knn::descriptor::voting_mode (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor11voting_modeE"]], "oneapi::dal::knn::infer (c++ function)": [[21, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE"]], "oneapi::dal::knn::infer_input (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE"]], "oneapi::dal::knn::infer_input::data (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11infer_input4dataE"]], "oneapi::dal::knn::infer_input::infer_input (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE"]], "oneapi::dal::knn::infer_input::model (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11infer_input5modelE"]], "oneapi::dal::knn::infer_result (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE"]], "oneapi::dal::knn::infer_result::distances (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result9distancesE"]], "oneapi::dal::knn::infer_result::indices (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result7indicesE"]], "oneapi::dal::knn::infer_result::infer_result (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv"]], "oneapi::dal::knn::infer_result::labels (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result6labelsE"]], "oneapi::dal::knn::infer_result::responses (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result9responsesE"]], "oneapi::dal::knn::infer_result::result_options (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result14result_optionsE"]], "oneapi::dal::knn::method::brute_force (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn6method11brute_forceE"]], "oneapi::dal::knn::method::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal3knn6method10by_defaultE"]], "oneapi::dal::knn::method::kd_tree (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn6method7kd_treeE"]], "oneapi::dal::knn::model (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn5modelE"]], "oneapi::dal::knn::model::model (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn5model5modelEv"]], "oneapi::dal::knn::result_option_id (c++ class)": [[21, "_CPPv4N6oneapi3dal3knn16result_option_idE"]], "oneapi::dal::knn::result_option_id::result_option_id (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idERK21result_option_id_base"], [21, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idEv"]], "oneapi::dal::knn::task::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal3knn4task10by_defaultE"]], "oneapi::dal::knn::task::classification (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn4task14classificationE"]], "oneapi::dal::knn::task::regression (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn4task10regressionE"]], "oneapi::dal::knn::task::search (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn4task6searchE"]], "oneapi::dal::knn::train (c++ function)": [[21, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE"]], "oneapi::dal::knn::train_input (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn11train_inputE"]], "oneapi::dal::knn::train_input::data (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11train_input4dataE"]], "oneapi::dal::knn::train_input::labels (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11train_input6labelsE"]], "oneapi::dal::knn::train_input::responses (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11train_input9responsesE"]], "oneapi::dal::knn::train_input::train_input (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5table"], [21, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::knn::train_result (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn12train_resultE"]], "oneapi::dal::knn::train_result::model (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12train_result5modelE"]], "oneapi::dal::knn::train_result::train_result (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv"]], "oneapi::dal::knn::voting_mode (c++ enum)": [[21, "_CPPv4N6oneapi3dal3knn11voting_modeE"]], "oneapi::dal::logloss_objective::descriptor (c++ class)": [[23, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE"]], "oneapi::dal::logloss_objective::descriptor::descriptor (c++ function)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb"]], "oneapi::dal::logloss_objective::descriptor::intercept_flag (c++ member)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor14intercept_flagE"]], "oneapi::dal::logloss_objective::descriptor::l1_regularization_coefficient (c++ member)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l1_regularization_coefficientE"]], "oneapi::dal::logloss_objective::descriptor::l2_regularization_coefficient (c++ member)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l2_regularization_coefficientE"]], "oneapi::dal::logloss_objective::method::by_default (c++ type)": [[23, "_CPPv4N6oneapi3dal17logloss_objective6method10by_defaultE"]], "oneapi::dal::logloss_objective::method::dense_batch (c++ struct)": [[23, "_CPPv4N6oneapi3dal17logloss_objective6method11dense_batchE"]], "oneapi::dal::logloss_objective::task::by_default (c++ type)": [[23, "_CPPv4N6oneapi3dal17logloss_objective4task10by_defaultE"]], "oneapi::dal::logloss_objective::task::compute (c++ struct)": [[23, "_CPPv4N6oneapi3dal17logloss_objective4task7computeE"]], "oneapi::dal::objective_function::compute (c++ function)": [[24, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE"]], "oneapi::dal::objective_function::compute_input (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal18objective_function13compute_inputE"]], "oneapi::dal::objective_function::compute_input::compute_input (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table"]], "oneapi::dal::objective_function::compute_input::data (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input4dataE"]], "oneapi::dal::objective_function::compute_input::parameters (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input10parametersE"]], "oneapi::dal::objective_function::compute_input::responses (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input9responsesE"]], "oneapi::dal::objective_function::compute_result (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal18objective_function14compute_resultE"]], "oneapi::dal::objective_function::compute_result::compute_result (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result14compute_resultEv"]], "oneapi::dal::objective_function::compute_result::gradient (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result8gradientE"]], "oneapi::dal::objective_function::compute_result::hessian (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result7hessianE"]], "oneapi::dal::objective_function::compute_result::result_options (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result14result_optionsE"]], "oneapi::dal::objective_function::compute_result::value (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result5valueE"]], "oneapi::dal::objective_function::descriptor (c++ class)": [[24, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE"]], "oneapi::dal::objective_function::descriptor::descriptor (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorERK11objective_t"], [24, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorEv"]], "oneapi::dal::objective_function::descriptor::objective (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function10descriptor9objectiveE"]], "oneapi::dal::objective_function::descriptor::result_options (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function10descriptor14result_optionsE"]], "oneapi::dal::objective_function::method::by_default (c++ type)": [[24, "_CPPv4N6oneapi3dal18objective_function6method10by_defaultE"]], "oneapi::dal::objective_function::method::dense_batch (c++ struct)": [[24, "_CPPv4N6oneapi3dal18objective_function6method11dense_batchE"]], "oneapi::dal::objective_function::result_option_id (c++ class)": [[24, "_CPPv4N6oneapi3dal18objective_function16result_option_idE"]], "oneapi::dal::objective_function::result_option_id::result_option_id (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idERK21result_option_id_base"], [24, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idEv"]], "oneapi::dal::objective_function::task::by_default (c++ type)": [[24, "_CPPv4N6oneapi3dal18objective_function4task10by_defaultE"]], "oneapi::dal::objective_function::task::compute (c++ struct)": [[24, "_CPPv4N6oneapi3dal18objective_function4task7computeE"]], "oneapi::dal::chebyshev_distance::descriptor (c++ class)": [[25, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE"]], "oneapi::dal::chebyshev_distance::descriptor::descriptor (c++ function)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance10descriptor10descriptorEv"]], "oneapi::dal::chebyshev_distance::method::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance6method10by_defaultE"]], "oneapi::dal::chebyshev_distance::method::dense (c++ struct)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance6method5denseE"]], "oneapi::dal::chebyshev_distance::task::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance4task10by_defaultE"]], "oneapi::dal::chebyshev_distance::task::compute (c++ struct)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance4task7computeE"]], "oneapi::dal::cosine_distance::descriptor (c++ class)": [[26, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE"]], "oneapi::dal::cosine_distance::descriptor::descriptor (c++ function)": [[26, "_CPPv4N6oneapi3dal15cosine_distance10descriptor10descriptorEv"]], "oneapi::dal::cosine_distance::method::by_default (c++ type)": [[26, "_CPPv4N6oneapi3dal15cosine_distance6method10by_defaultE"]], "oneapi::dal::cosine_distance::method::dense (c++ struct)": [[26, "_CPPv4N6oneapi3dal15cosine_distance6method5denseE"]], "oneapi::dal::cosine_distance::task::by_default (c++ type)": [[26, "_CPPv4N6oneapi3dal15cosine_distance4task10by_defaultE"]], "oneapi::dal::cosine_distance::task::compute (c++ struct)": [[26, "_CPPv4N6oneapi3dal15cosine_distance4task7computeE"]], "oneapi::dal::minkowski_distance::descriptor (c++ class)": [[28, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE"]], "oneapi::dal::minkowski_distance::descriptor::degree (c++ member)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor6degreeE"]], "oneapi::dal::minkowski_distance::descriptor::descriptor (c++ function)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEd"], [28, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEv"]], "oneapi::dal::minkowski_distance::method::by_default (c++ type)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance6method10by_defaultE"]], "oneapi::dal::minkowski_distance::method::dense (c++ struct)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance6method5denseE"]], "oneapi::dal::minkowski_distance::task::by_default (c++ type)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance4task10by_defaultE"]], "oneapi::dal::minkowski_distance::task::compute (c++ struct)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance4task7computeE"]], "oneapi::dal::basic_statistics::compute (c++ function)": [[29, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE"]], "oneapi::dal::basic_statistics::compute_input (c++ class)": [[29, "_CPPv4I0EN6oneapi3dal16basic_statistics13compute_inputE"]], "oneapi::dal::basic_statistics::compute_input::compute_input (c++ function)": [[29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5table"], [29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::basic_statistics::compute_input::data (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input4dataE"]], "oneapi::dal::basic_statistics::compute_input::weights (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input7weightsE"]], "oneapi::dal::basic_statistics::compute_result (c++ class)": [[29, "_CPPv4I0EN6oneapi3dal16basic_statistics14compute_resultE"]], "oneapi::dal::basic_statistics::compute_result::compute_result (c++ function)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14compute_resultEv"]], "oneapi::dal::basic_statistics::compute_result::max (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3maxE"]], "oneapi::dal::basic_statistics::compute_result::mean (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result4meanE"]], "oneapi::dal::basic_statistics::compute_result::min (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3minE"]], "oneapi::dal::basic_statistics::compute_result::result_options (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14result_optionsE"]], "oneapi::dal::basic_statistics::compute_result::second_order_raw_moment (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result23second_order_raw_momentE"]], "oneapi::dal::basic_statistics::compute_result::standard_deviation (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result18standard_deviationE"]], "oneapi::dal::basic_statistics::compute_result::sum (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3sumE"]], "oneapi::dal::basic_statistics::compute_result::sum_squares (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result11sum_squaresE"]], "oneapi::dal::basic_statistics::compute_result::sum_squares_centered (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result20sum_squares_centeredE"]], "oneapi::dal::basic_statistics::compute_result::variance (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result8varianceE"]], "oneapi::dal::basic_statistics::compute_result::variation (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result9variationE"]], "oneapi::dal::basic_statistics::descriptor (c++ class)": [[29, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE"]], "oneapi::dal::basic_statistics::descriptor::result_options (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics10descriptor14result_optionsE"]], "oneapi::dal::basic_statistics::method::by_default (c++ type)": [[29, "_CPPv4N6oneapi3dal16basic_statistics6method10by_defaultE"]], "oneapi::dal::basic_statistics::method::dense (c++ struct)": [[29, "_CPPv4N6oneapi3dal16basic_statistics6method5denseE"]], "oneapi::dal::basic_statistics::task::by_default (c++ type)": [[29, "_CPPv4N6oneapi3dal16basic_statistics4task10by_defaultE"]], "oneapi::dal::basic_statistics::task::compute (c++ struct)": [[29, "_CPPv4N6oneapi3dal16basic_statistics4task7computeE"]], "oneapi::dal::svm::descriptor (c++ class)": [[32, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE"]], "oneapi::dal::svm::descriptor::accuracy_threshold (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor18accuracy_thresholdE"]], "oneapi::dal::svm::descriptor::c (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor1cE"]], "oneapi::dal::svm::descriptor::cache_size (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor10cache_sizeE"]], "oneapi::dal::svm::descriptor::class_count (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor11class_countE"]], "oneapi::dal::svm::descriptor::descriptor (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor10descriptorERK6Kernel"]], "oneapi::dal::svm::descriptor::epsilon (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor7epsilonE"]], "oneapi::dal::svm::descriptor::kernel (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor6kernelE"]], "oneapi::dal::svm::descriptor::max_iteration_count (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor19max_iteration_countE"]], "oneapi::dal::svm::descriptor::nu (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor2nuE"]], "oneapi::dal::svm::descriptor::shrinking (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor9shrinkingE"]], "oneapi::dal::svm::descriptor::tau (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor3tauE"]], "oneapi::dal::svm::infer (c++ function)": [[32, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE"]], "oneapi::dal::svm::infer_input (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm11infer_inputE"]], "oneapi::dal::svm::infer_input::data (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11infer_input4dataE"]], "oneapi::dal::svm::infer_input::infer_input (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::svm::infer_input::model (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11infer_input5modelE"]], "oneapi::dal::svm::infer_result (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm12infer_resultE"]], "oneapi::dal::svm::infer_result::decision_function (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result17decision_functionE"]], "oneapi::dal::svm::infer_result::infer_result (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result12infer_resultEv"]], "oneapi::dal::svm::infer_result::labels (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result6labelsE"]], "oneapi::dal::svm::infer_result::responses (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result9responsesE"]], "oneapi::dal::svm::method::by_default (c++ type)": [[32, "_CPPv4N6oneapi3dal3svm6method10by_defaultE"]], "oneapi::dal::svm::method::smo (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm6method3smoE"]], "oneapi::dal::svm::method::thunder (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm6method7thunderE"]], "oneapi::dal::svm::model (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm5modelE"]], "oneapi::dal::svm::model::bias (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model4biasE"]], "oneapi::dal::svm::model::biases (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model6biasesE"]], "oneapi::dal::svm::model::coeffs (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model6coeffsE"]], "oneapi::dal::svm::model::first_class_label (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model17first_class_labelE"]], "oneapi::dal::svm::model::first_class_response (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model20first_class_responseE"]], "oneapi::dal::svm::model::get_support_vector_count (c++ function)": [[32, "_CPPv4NK6oneapi3dal3svm5model24get_support_vector_countEv"]], "oneapi::dal::svm::model::model (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm5model5modelEv"]], "oneapi::dal::svm::model::second_class_label (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model18second_class_labelE"]], "oneapi::dal::svm::model::second_class_response (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model21second_class_responseE"]], "oneapi::dal::svm::model::support_vectors (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model15support_vectorsE"]], "oneapi::dal::svm::task::by_default (c++ type)": [[32, "_CPPv4N6oneapi3dal3svm4task10by_defaultE"]], "oneapi::dal::svm::task::classification (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task14classificationE"]], "oneapi::dal::svm::task::nu_classification (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task17nu_classificationE"]], "oneapi::dal::svm::task::nu_regression (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task13nu_regressionE"]], "oneapi::dal::svm::task::regression (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task10regressionE"]], "oneapi::dal::svm::train (c++ function)": [[32, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE"]], "oneapi::dal::svm::train_input (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm11train_inputE"]], "oneapi::dal::svm::train_input::data (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input4dataE"]], "oneapi::dal::svm::train_input::labels (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input6labelsE"]], "oneapi::dal::svm::train_input::responses (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input9responsesE"]], "oneapi::dal::svm::train_input::train_input (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table"]], "oneapi::dal::svm::train_input::weights (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input7weightsE"]], "oneapi::dal::svm::train_result (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm12train_resultE"]], "oneapi::dal::svm::train_result::bias (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result4biasE"]], "oneapi::dal::svm::train_result::biases (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result6biasesE"]], "oneapi::dal::svm::train_result::coeffs (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result6coeffsE"]], "oneapi::dal::svm::train_result::get_support_vector_count (c++ function)": [[32, "_CPPv4NK6oneapi3dal3svm12train_result24get_support_vector_countEv"]], "oneapi::dal::svm::train_result::model (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result5modelE"]], "oneapi::dal::svm::train_result::support_indices (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result15support_indicesE"]], "oneapi::dal::svm::train_result::support_vectors (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result15support_vectorsE"]], "oneapi::dal::svm::train_result::train_result (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm12train_result12train_resultEv"]], "oneapi::dal::column_accessor (c++ class)": [[33, "_CPPv4I0EN6oneapi3dal15column_accessorE"]], "oneapi::dal::column_accessor::column_accessor (c++ function)": [[33, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table"], [33, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERKN6detail13table_builderE"]], "oneapi::dal::column_accessor::pull (c++ function)": [[33, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range"], [33, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range"]], "oneapi::dal::column_accessor::push (c++ function)": [[33, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range"]], "oneapi::dal::row_accessor (c++ class)": [[34, "_CPPv4I0EN6oneapi3dal12row_accessorE"]], "oneapi::dal::row_accessor::pull (c++ function)": [[34, "_CPPv4NK6oneapi3dal12row_accessor4pullERK5range"], [34, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range"]], "oneapi::dal::row_accessor::push (c++ function)": [[34, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range"]], "oneapi::dal::row_accessor::row_accessor (c++ function)": [[34, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table"], [34, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERKN6detail13table_builderE"]], "oneapi::dal::array (c++ class)": [[36, "_CPPv4I0EN6oneapi3dal5arrayE"]], "oneapi::dal::array::array (c++ function)": [[36, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE"], [36, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter"], [36, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter"], [36, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI1TE"], [36, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE"], [36, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE"], [36, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI1TE"], [36, "_CPPv4N6oneapi3dal5array5arrayEv"]], "oneapi::dal::array::empty (c++ function)": [[36, "_CPPv4N6oneapi3dal5array5emptyENSt7int64_tE"]], "oneapi::dal::array::full (c++ function)": [[36, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K"]], "oneapi::dal::array::get_count (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array9get_countEv"]], "oneapi::dal::array::get_data (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array8get_dataEv"]], "oneapi::dal::array::get_mutable_data (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv"]], "oneapi::dal::array::get_size (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array8get_sizeEv"]], "oneapi::dal::array::has_mutable_data (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv"]], "oneapi::dal::array::need_mutable_data (c++ function)": [[36, "_CPPv4N6oneapi3dal5array17need_mutable_dataEv"]], "oneapi::dal::array::operator= (c++ function)": [[36, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI1TE"], [36, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI1TE"]], "oneapi::dal::array::operator[] (c++ function)": [[36, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE"]], "oneapi::dal::array::reset (c++ function)": [[36, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter"], [36, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter"], [36, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE"], [36, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE"], [36, "_CPPv4N6oneapi3dal5array5resetENSt7int64_tE"], [36, "_CPPv4N6oneapi3dal5array5resetEv"]], "oneapi::dal::array::wrap (c++ function)": [[36, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE"]], "oneapi::dal::array::zeros (c++ function)": [[36, "_CPPv4N6oneapi3dal5array5zerosENSt7int64_tE"]], "oneapi::dal::csv::data_source (c++ class)": [[37, "_CPPv4N6oneapi3dal3csv11data_sourceE"]], "oneapi::dal::csv::data_source::data_source (c++ function)": [[37, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options"], [37, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options"]], "oneapi::dal::csv::data_source::delimiter (c++ member)": [[37, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE"]], "oneapi::dal::csv::data_source::file_name (c++ member)": [[37, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE"]], "oneapi::dal::csv::data_source::options (c++ member)": [[37, "_CPPv4N6oneapi3dal3csv11data_source7optionsE"]], "oneapi::dal::csv::read_args (c++ class)": [[37, "_CPPv4I0EN6oneapi3dal3csv9read_argsE"]], "oneapi::dal::csv::read_args::read_args (c++ function)": [[37, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv"]], "oneapi::dal::read (c++ function)": [[37, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource"]], "oneapi::dal::preview::get_edge_count (c++ function)": [[39, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph"]], "oneapi::dal::preview::get_edge_value (c++ function)": [[39, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_count (c++ function)": [[39, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph"]], "oneapi::dal::preview::get_vertex_degree (c++ function)": [[39, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_neighbors (c++ function)": [[39, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_outward_degree (c++ function)": [[39, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_outward_neighbors (c++ function)": [[39, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::directed_adjacency_vector_graph (c++ class)": [[42, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE"]], "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph (c++ function)": [[42, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphERR31directed_adjacency_vector_graph"], [42, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphEv"]], "oneapi::dal::preview::directed_adjacency_vector_graph::operator= (c++ function)": [[42, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphaSERR31directed_adjacency_vector_graph"]], "oneapi::dal::preview::directed_adjacency_vector_graph::~directed_adjacency_vector_graph (c++ function)": [[42, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphD0Ev"]], "oneapi::dal::preview::undirected_adjacency_vector_graph (c++ class)": [[43, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE"]], "oneapi::dal::preview::undirected_adjacency_vector_graph::operator= (c++ function)": [[43, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphaSERR33undirected_adjacency_vector_graph"]], "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph (c++ function)": [[43, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphERR33undirected_adjacency_vector_graph"], [43, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphEv"]], "oneapi::dal::preview::undirected_adjacency_vector_graph::~undirected_adjacency_vector_graph (c++ function)": [[43, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphD0Ev"]], "oneapi::dal::preview::empty_value (c++ struct)": [[44, "_CPPv4N6oneapi3dal7preview11empty_valueE"]], "oneapi::dal::csr_table (c++ class)": [[46, "_CPPv4N6oneapi3dal9csr_tableE"]], "oneapi::dal::csr_table::csr_table (c++ function)": [[46, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing"], [46, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing"], [46, "_CPPv4N6oneapi3dal9csr_table9csr_tableERK5table"], [46, "_CPPv4N6oneapi3dal9csr_table9csr_tableEv"]], "oneapi::dal::csr_table::get_column_indices (c++ function)": [[46, "_CPPv4NK6oneapi3dal9csr_table18get_column_indicesEv"]], "oneapi::dal::csr_table::get_data (c++ function)": [[46, "_CPPv4I0ENK6oneapi3dal9csr_table8get_dataEPK4Datav"], [46, "_CPPv4NK6oneapi3dal9csr_table8get_dataEv"]], "oneapi::dal::csr_table::get_indexing (c++ function)": [[46, "_CPPv4NK6oneapi3dal9csr_table12get_indexingEv"]], "oneapi::dal::csr_table::get_kind (c++ function)": [[46, "_CPPv4NK6oneapi3dal9csr_table8get_kindEv"]], "oneapi::dal::csr_table::get_non_zero_count (c++ function)": [[46, "_CPPv4NK6oneapi3dal9csr_table18get_non_zero_countEv"]], "oneapi::dal::csr_table::get_row_offsets (c++ function)": [[46, "_CPPv4NK6oneapi3dal9csr_table15get_row_offsetsEv"]], "oneapi::dal::csr_table::kind (c++ function)": [[46, "_CPPv4N6oneapi3dal9csr_table4kindEv"]], "oneapi::dal::csr_table::wrap (c++ function)": [[46, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing"], [46, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing"]], "oneapi::dal::homogen_table (c++ class)": [[47, "_CPPv4N6oneapi3dal13homogen_tableE"]], "oneapi::dal::homogen_table::get_data (c++ function)": [[47, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav"], [47, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv"]], "oneapi::dal::homogen_table::get_kind (c++ function)": [[47, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv"]], "oneapi::dal::homogen_table::homogen_table (c++ function)": [[47, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout"], [47, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableERK5table"], [47, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv"]], "oneapi::dal::homogen_table::kind (c++ function)": [[47, "_CPPv4N6oneapi3dal13homogen_table4kindEv"]], "oneapi::dal::homogen_table::wrap (c++ function)": [[47, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout"], [47, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout"]], "oneapi::dal::table (c++ class)": [[48, "_CPPv4N6oneapi3dal5tableE"]], "oneapi::dal::table::get_column_count (c++ function)": [[48, "_CPPv4NK6oneapi3dal5table16get_column_countEv"]], "oneapi::dal::table::get_data_layout (c++ function)": [[48, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv"]], "oneapi::dal::table::get_kind (c++ function)": [[48, "_CPPv4NK6oneapi3dal5table8get_kindEv"]], "oneapi::dal::table::get_metadata (c++ function)": [[48, "_CPPv4NK6oneapi3dal5table12get_metadataEv"]], "oneapi::dal::table::get_row_count (c++ function)": [[48, "_CPPv4NK6oneapi3dal5table13get_row_countEv"]], "oneapi::dal::table::has_data (c++ function)": [[48, "_CPPv4NK6oneapi3dal5table8has_dataEv"]], "oneapi::dal::table::operator= (c++ function)": [[48, "_CPPv4N6oneapi3dal5tableaSERK5table"], [48, "_CPPv4N6oneapi3dal5tableaSERR5table"]], "oneapi::dal::table::table (c++ function)": [[48, "_CPPv4N6oneapi3dal5table5tableERK5table"], [48, "_CPPv4N6oneapi3dal5table5tableERR5table"], [48, "_CPPv4N6oneapi3dal5table5tableEv"]], "oneapi::dal::table_metadata (c++ class)": [[48, "_CPPv4N6oneapi3dal14table_metadataE"]], "oneapi::dal::table_metadata::get_data_type (c++ function)": [[48, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::get_feature_count (c++ function)": [[48, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv"]], "oneapi::dal::table_metadata::get_feature_type (c++ function)": [[48, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::table_metadata (c++ function)": [[48, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE"], [48, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv"]], "cluster": [[69, "term-cluster"]], "core observation": [[69, "term-core-observation"]], "directly reachable": [[69, "term-directly-reachable"]], "noise observation": [[69, "term-noise-observation"]], "reachable": [[69, "term-reachable"]], "api": [[370, "term-API"]], "accessor": [[370, "term-Accessor"]], "adjacency": [[370, "term-Adjacency"]], "adjacency matrix": [[370, "term-Adjacency-matrix"]], "attribute": [[370, "term-Attribute"]], "batch mode": [[370, "term-Batch-mode"]], "builder": [[370, "term-Builder"]], "csr data": [[370, "term-CSR-data"]], "csv file": [[370, "term-CSV-file"]], "categorical feature": [[370, "term-Categorical-feature"]], "classification": [[370, "term-Classification"]], "clustering": [[370, "term-Clustering"]], "communicator": [[370, "term-Communicator"]], "communicator backend": [[370, "term-Communicator-backend"]], "component": [[370, "term-Component"]], "connected graph": [[370, "term-Connected-graph"]], "contiguous data": [[370, "term-Contiguous-data"]], "continuous feature": [[370, "term-Continuous-feature"]], "dpc++": [[370, "term-DPC"]], "data format": [[370, "term-Data-format"]], "data layout": [[370, "term-Data-layout"]], "data type": [[370, "term-Data-type"]], "dataset": [[370, "term-Dataset"]], "dimensionality reduction": [[370, "term-Dimensionality-reduction"]], "directed graph": [[370, "term-Directed-graph"]], "edge index": [[370, "term-Edge-index"]], "feature": [[370, "term-Feature"]], "feature vector": [[370, "term-Feature-vector"]], "flat data": [[370, "term-Flat-data"]], "getter": [[370, "term-Getter"]], "graph": [[370, "term-Graph"]], "heterogeneous data": [[370, "term-Heterogeneous-data"]], "homogeneous data": [[370, "term-Homogeneous-data"]], "host/device": [[370, "term-Host-Device"]], "immutability": [[370, "term-Immutability"]], "induced subgraph on the edge set": [[370, "term-Induced-subgraph-on-the-edge-set"]], "induced subgraph on the vertex set": [[370, "term-Induced-subgraph-on-the-vertex-set"]], "inference": [[370, "term-Inference"]], "inference set": [[370, "term-Inference-set"]], "interval feature": [[370, "term-Interval-feature"]], "jit": [[370, "term-JIT"]], "kernel": [[370, "term-Kernel"]], "label": [[370, "term-Label"]], "metadata": [[370, "term-Metadata"]], "model": [[370, "term-Model"]], "nominal feature": [[370, "term-Nominal-feature"]], "nu-classification": [[370, "term-Nu-classification"]], "nu-regression": [[370, "term-Nu-regression"]], "observation": [[370, "term-Observation"]], "online mode": [[370, "term-Online-mode"]], "ordinal feature": [[370, "term-Ordinal-feature"]], "outlier": [[370, "term-Outlier"]], "ratio feature": [[370, "term-Ratio-feature"]], "reference-counted object": [[370, "term-Reference-counted-object"]], "regression": [[370, "term-Regression"]], "response": [[370, "term-Response"]], "result options:": [[370, "term-Result-options"]], "spir-v": [[370, "term-SPIR-V"]], "spmd": [[370, "term-SPMD"]], "sycl": [[370, "term-SYCL"]], "search": [[370, "term-Search"]], "self-loop": [[370, "term-Self-loop"]], "setter": [[370, "term-Setter"]], "subgraph": [[370, "term-Subgraph"]], "supervised learning": [[370, "term-Supervised-learning"]], "table": [[370, "term-Table"]], "topology": [[370, "term-Topology"]], "training": [[370, "term-Training"]], "training set": [[370, "term-Training-set"]], "undirected graph": [[370, "term-Undirected-graph"]], "unsupervised learning": [[370, "term-Unsupervised-learning"]], "unweighted graph": [[370, "term-Unweighted-graph"]], "vertex index": [[370, "term-Vertex-index"]], "walk": [[370, "term-Walk"]], "weight": [[370, "term-Weight"]], "weighted graph": [[370, "term-Weighted-graph"]], "workload": [[370, "term-Workload"]]}})