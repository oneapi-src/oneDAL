Search.setIndex({"docnames": ["404", "api/algorithms/clustering/dbscan", "api/algorithms/clustering/index", "api/algorithms/clustering/kmeans", "api/algorithms/clustering/kmeans-init", "api/algorithms/covariance/covariance", "api/algorithms/covariance/index", "api/algorithms/decomposition/index", "api/algorithms/decomposition/pca", "api/algorithms/ensembles/decision-forest", "api/algorithms/ensembles/index", "api/algorithms/graph/connected-components", "api/algorithms/graph/index", "api/algorithms/graph/subgraph-isomorphism", "api/algorithms/index", "api/algorithms/kernel-functions/index", "api/algorithms/kernel-functions/linear-kernel", "api/algorithms/kernel-functions/polynomial-kernel", "api/algorithms/kernel-functions/rbf-kernel", "api/algorithms/kernel-functions/sigmoid-kernel", "api/algorithms/nearest-neighbors/index", "api/algorithms/nearest-neighbors/knn-classification", "api/algorithms/objective-function/index", "api/algorithms/objective-function/logloss", "api/algorithms/objective-function/objective-function", "api/algorithms/pairwise-distances/chebyshev-distance", "api/algorithms/pairwise-distances/cosine-distance", "api/algorithms/pairwise-distances/index", "api/algorithms/pairwise-distances/minkowski-distance", "api/algorithms/statistics/basic-statistics", "api/algorithms/statistics/index", "api/algorithms/svm/index", "api/algorithms/svm/svm", "api/data-management/accessor/column", "api/data-management/accessor/csr", "api/data-management/accessor/row", "api/data-management/accessors", "api/data-management/array", "api/data-management/data-source/csv", "api/data-management/data-sources", "api/data-management/graph-service", "api/data-management/graph-service/directed-adjacency-vector-graph", "api/data-management/graph-service/undirected-adjacency-vector-graph", "api/data-management/graph/directed-adjacency-vector-graph", "api/data-management/graph/undirected-adjacency-vector-graph", "api/data-management/graphs", "api/data-management/index", "api/data-management/table/csr", "api/data-management/table/homogen", "api/data-management/tables", "api/index", "api/spmd/communicator", "api/spmd/index", "api/spmd/overview", "bibliography", "contribution/coding_guide", "daal-interfaces", "daal/algorithms/association_rules/association-rules", "daal/algorithms/boosting/adaboost", "daal/algorithms/boosting/adaboost-multiclass", "daal/algorithms/boosting/brownboost", "daal/algorithms/boosting/index", "daal/algorithms/boosting/logitboost", "daal/algorithms/cholesky/cholesky", "daal/algorithms/covariance/computation-batch", "daal/algorithms/covariance/computation-distributed", "daal/algorithms/covariance/computation-online", "daal/algorithms/covariance/correlation-and-variance-covariance-matrices", "daal/algorithms/dbscan/computation-batch", "daal/algorithms/dbscan/computation-distributed", "daal/algorithms/dbscan/index", "daal/algorithms/decision_forest/decision-forest", "daal/algorithms/decision_forest/decision-forest-classification", "daal/algorithms/decision_forest/decision-forest-regression", "daal/algorithms/decision_forest/index", "daal/algorithms/decision_tree/decision-tree", "daal/algorithms/decision_tree/decision-tree-classification", "daal/algorithms/decision_tree/decision-tree-regression", "daal/algorithms/decision_tree/index", "daal/algorithms/distance/correlation", "daal/algorithms/distance/cosine", "daal/algorithms/distance/index", "daal/algorithms/distributions/bernoulli", "daal/algorithms/distributions/index", "daal/algorithms/distributions/normal", "daal/algorithms/distributions/uniform", "daal/algorithms/em/expectation-maximization", "daal/algorithms/engines/index", "daal/algorithms/engines/mcg59", "daal/algorithms/engines/mt19937", "daal/algorithms/engines/mt2203", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-classification", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-regression", "daal/algorithms/gradient_boosted_trees/index", "daal/algorithms/implicit_als/computation-batch", "daal/algorithms/implicit_als/computation-distributed-prediction", "daal/algorithms/implicit_als/computation-distributed-training", "daal/algorithms/implicit_als/implicit-alternating-least-squares", "daal/algorithms/implicit_als/initialization-batch", "daal/algorithms/implicit_als/initialization-distributed", "daal/algorithms/k_nearest_neighbors/k-nearest-neighbors-knn-classifier", "daal/algorithms/kernel_function/kernel-functions", "daal/algorithms/kmeans/computation-batch", "daal/algorithms/kmeans/computation-distributed", "daal/algorithms/kmeans/initialization-batch", "daal/algorithms/kmeans/initialization-distributed", "daal/algorithms/kmeans/k-means-clustering", "daal/algorithms/lasso_elastic_net/elastic-net", "daal/algorithms/lasso_elastic_net/index", "daal/algorithms/lasso_elastic_net/lasso", "daal/algorithms/lasso_elastic_net/lasso-elasticnet-computation", "daal/algorithms/linear_ridge_regression/index", "daal/algorithms/linear_ridge_regression/linear-regression", "daal/algorithms/linear_ridge_regression/linear-ridge-regression-computation", "daal/algorithms/linear_ridge_regression/ridge-regression", "daal/algorithms/logistic_regression/logistic-regression", "daal/algorithms/moments/computation-batch", "daal/algorithms/moments/computation-distributed", "daal/algorithms/moments/computation-online", "daal/algorithms/moments/moments-of-low-order", "daal/algorithms/naive_bayes/computation-batch", "daal/algorithms/naive_bayes/computation-distributed", "daal/algorithms/naive_bayes/computation-online", "daal/algorithms/naive_bayes/naive-bayes-classifier", "daal/algorithms/normalization/index", "daal/algorithms/normalization/min-max", "daal/algorithms/normalization/z-score", "daal/algorithms/optimization-solvers/iterative-solver", "daal/algorithms/optimization-solvers/objective-function", "daal/algorithms/optimization-solvers/objective-functions/computation", "daal/algorithms/optimization-solvers/objective-functions/cross-entropy", "daal/algorithms/optimization-solvers/objective-functions/logistic-loss", "daal/algorithms/optimization-solvers/objective-functions/mse", "daal/algorithms/optimization-solvers/objective-functions/sum-of-functions", "daal/algorithms/optimization-solvers/objective-functions/with-precomputed-characteristics", "daal/algorithms/optimization-solvers/optimization-solvers", "daal/algorithms/optimization-solvers/solvers/adaptive-subgradient-method", "daal/algorithms/optimization-solvers/solvers/computation", "daal/algorithms/optimization-solvers/solvers/coordinate-descent", "daal/algorithms/optimization-solvers/solvers/lbfgs", "daal/algorithms/optimization-solvers/solvers/stochastic-average-gradient-accelerated-method", "daal/algorithms/optimization-solvers/solvers/stochastic-gradient-descent-algorithm", "daal/algorithms/outlier_detection/index", "daal/algorithms/outlier_detection/multivariate", "daal/algorithms/outlier_detection/multivariate-bacon", "daal/algorithms/outlier_detection/univariate", "daal/algorithms/pca/computation-batch", "daal/algorithms/pca/computation-distributed", "daal/algorithms/pca/computation-online", "daal/algorithms/pca/principal-component-analysis", "daal/algorithms/pca/transform", "daal/algorithms/qr/qr-decomposition", "daal/algorithms/qr/qr-pivoted", "daal/algorithms/qr/qr-without-pivoting", "daal/algorithms/qr/without-pivoting/computation-batch-online", "daal/algorithms/qr/without-pivoting/computation-distributed", "daal/algorithms/quality_metrics/default-metric-set", "daal/algorithms/quality_metrics/default/for-binary-classification", "daal/algorithms/quality_metrics/default/for-linear-regression", "daal/algorithms/quality_metrics/default/for-multi-class-classification", "daal/algorithms/quality_metrics/default/for-pca", "daal/algorithms/quality_metrics/index", "daal/algorithms/quality_metrics/user-defined", "daal/algorithms/quantiles/index", "daal/algorithms/sorting/index", "daal/algorithms/stump/classification", "daal/algorithms/stump/index", "daal/algorithms/stump/regression", "daal/algorithms/svd/computation-batch-online", "daal/algorithms/svd/computation-distributed", "daal/algorithms/svd/singular-value-decomposition", "daal/algorithms/svm/support-vector-machine-classifier", "daal/algorithms/svm_multi_class/multi-class-classifier", "daal/analysis", "daal/cpu-vs-gpu", "daal/data-management/data-dictionaries", "daal/data-management/data-management", "daal/data-management/data-model", "daal/data-management/data-serialization-and-deserialization", "daal/data-management/data-sources", "daal/data-management/essential-interfaces", "daal/data-management/generic-interfaces", "daal/data-management/numeric-tables", "daal/data-management/numeric-tables-types", "daal/services/callback-for-host-application", "daal/services/extracting-version-information", "daal/services/handling-errors", "daal/services/managing-computational-environment", "daal/services/managing-memory", "daal/services/services", "daal/training-prediction", "daal/usage/algorithms", "daal/usage/computation-modes", "daal/usage/index", "daal/usage/training-and-prediction/classification", "daal/usage/training-and-prediction/index", "daal/usage/training-and-prediction/recommendation-systems", "daal/usage/training-and-prediction/regression", "data-analytics-pipeline", "deprecation", "examples", "examples/cpp", "examples/cpp/basic_statistics_dense_batch", "examples/cpp/basic_statistics_dense_online", "examples/cpp/column_accessor_homogen", "examples/cpp/connected_components_batch", "examples/cpp/cor_dense_batch", "examples/cpp/cor_dense_online", "examples/cpp/cov_dense_batch", "examples/cpp/cov_dense_online", "examples/cpp/csr_accessor", "examples/cpp/dbscan_brute_force_batch", "examples/cpp/df_cls_dense_batch", "examples/cpp/df_reg_dense_batch", "examples/cpp/directed_graph", "examples/cpp/graph_service_functions", "examples/cpp/jaccard_batch", "examples/cpp/jaccard_batch_app", "examples/cpp/kmeans_init_dense", "examples/cpp/kmeans_lloyd_dense_batch", "examples/cpp/knn_cls_brute_force_dense_batch", "examples/cpp/knn_cls_kd_tree_dense_batch", "examples/cpp/knn_search_brute_force_dense_batch", "examples/cpp/linear_kernel_dense_batch", "examples/cpp/linear_regression_dense_batch", "examples/cpp/linear_regression_dense_online", "examples/cpp/logloss_dense_batch", "examples/cpp/louvain_batch", "examples/cpp/pca_dense_batch", "examples/cpp/pca_dense_online", "examples/cpp/pca_precomputed_dense_batch", "examples/cpp/polynomial_kernel_dense_batch", "examples/cpp/rbf_kernel_dense_batch", "examples/cpp/shortest_paths_batch", "examples/cpp/sigmoid_kernel_dense_batch", "examples/cpp/subgraph_isomorphism_batch", "examples/cpp/svm_multi_class_thunder_csr_batch", "examples/cpp/svm_multi_class_thunder_dense_batch", "examples/cpp/svm_nu_cls_thunder_csr_batch", "examples/cpp/svm_nu_cls_thunder_dense_batch", "examples/cpp/svm_nu_reg_thunder_csr_batch", "examples/cpp/svm_nu_reg_thunder_dense_batch", "examples/cpp/svm_reg_thunder_csr_batch", "examples/cpp/svm_reg_thunder_dense_batch", "examples/cpp/svm_two_class_smo_csr_batch", "examples/cpp/svm_two_class_smo_dense_batch", "examples/cpp/svm_two_class_thunder_csr_batch", "examples/cpp/svm_two_class_thunder_dense_batch", "examples/cpp/triangle_counting_batch", "examples/dpc", "examples/dpc/basic_statistics_dense_batch", "examples/dpc/basic_statistics_dense_online", "examples/dpc/column_accessor_homogen", "examples/dpc/cor_dense_batch", "examples/dpc/cor_dense_online", "examples/dpc/cov_dense_batch", "examples/dpc/cov_dense_online", "examples/dpc/csr_accessor", "examples/dpc/dbscan_brute_force_batch", "examples/dpc/df_cls_hist_batch", "examples/dpc/df_cls_hist_batch_random", "examples/dpc/df_cls_traverse_model", "examples/dpc/df_reg_hist_batch", "examples/dpc/df_reg_hist_batch_random", "examples/dpc/df_reg_traverse_model", "examples/dpc/kmeans_init_dense", "examples/dpc/kmeans_lloyd_dense_batch", "examples/dpc/knn_cls_brute_force_dense_batch", "examples/dpc/knn_reg_brute_force_dense_batch", "examples/dpc/knn_search_brute_force_dense_batch", "examples/dpc/linear_kernel_dense_batch", "examples/dpc/linear_regression_dense_batch", "examples/dpc/linear_regression_dense_online", "examples/dpc/logistic_regression_dense_batch", "examples/dpc/pca_cor_dense_batch", "examples/dpc/pca_cor_dense_online", "examples/dpc/pca_precomputed_cor_dense_batch", "examples/dpc/pca_precomputed_cov_dense_batch", "examples/dpc/rbf_kernel_dense_batch", "examples/dpc/svm_two_class_thunder_dense_batch", "includes/clustering/dbscan-examples", "includes/clustering/dbscan-introduction", "includes/clustering/dbscan-usage-examples", "includes/clustering/kmeans-examples", "includes/clustering/kmeans-init-examples", "includes/clustering/kmeans-init-introduction", "includes/clustering/kmeans-init-usage-examples", "includes/clustering/kmeans-introduction", "includes/clustering/kmeans-usage-examples", "includes/covariance/covariance-examples", "includes/covariance/covariance-introduction", "includes/data-management/array-usage-example", "includes/data-management/column-accessor-usage-example", "includes/data-management/csr-accessor-usage-example", "includes/data-management/csv-data-source-usage-example", "includes/data-management/row-accessor-usage-example", "includes/decomposition/pca-examples", "includes/decomposition/pca-introduction", "includes/decomposition/pca-usage-examples", "includes/ensembles/df-classification-examples", "includes/ensembles/df-introduction", "includes/ensembles/df-regression-examples", "includes/graph/connected-components-examples", "includes/graph/connected-components-introduction", "includes/graph/subgraph-isomorphism-examples", "includes/graph/subgraph-isomorphism-introduction", "includes/kernel-functions/linear-kernel-examples", "includes/kernel-functions/linear-kernel-introduction", "includes/kernel-functions/polynomial-kernel-examples", "includes/kernel-functions/polynomial-kernel-introduction", "includes/kernel-functions/rbf-kernel-examples", "includes/kernel-functions/rbf-kernel-introduction", "includes/kernel-functions/sigmoid-kernel-examples", "includes/kernel-functions/sigmoid-kernel-introduction", "includes/nearest-neighbors/knn-examples", "includes/nearest-neighbors/knn-introduction", "includes/nearest-neighbors/knn-usage-examples", "includes/objective-function/logloss-examples", "includes/objective-function/logloss-introduction", "includes/objective-function/objective-function-introduction", "includes/pairwise-distances/chebyshev-distance-introduction", "includes/pairwise-distances/cosine-distance-introduction", "includes/pairwise-distances/minkowski-distance-introduction", "includes/spmd/ccl-comm-usage-example", "includes/spmd/mpi-comm-usage-example", "includes/statistics/basic-statistics-examples", "includes/statistics/basic-statistics-introduction", "includes/statistics/basic-statistics-usage-examples", "includes/svm/svm-examples", "includes/svm/svm-introduction", "index", "installation", "oneapi-interfaces", "onedal/algorithms/clustering/dbscan", "onedal/algorithms/clustering/index", "onedal/algorithms/clustering/kmeans", "onedal/algorithms/clustering/kmeans-init", "onedal/algorithms/covariance/covariance", "onedal/algorithms/covariance/index", "onedal/algorithms/decomposition/index", "onedal/algorithms/decomposition/pca", "onedal/algorithms/ensembles/decision-forest", "onedal/algorithms/ensembles/index", "onedal/algorithms/graph/connected-components", "onedal/algorithms/graph/index", "onedal/algorithms/graph/subgraph-isomorphism", "onedal/algorithms/index", "onedal/algorithms/kernel-functions/index", "onedal/algorithms/kernel-functions/linear-kernel", "onedal/algorithms/kernel-functions/polynomial-kernel", "onedal/algorithms/kernel-functions/rbf-kernel", "onedal/algorithms/kernel-functions/sigmoid-kernel", "onedal/algorithms/nearest-neighbors/index", "onedal/algorithms/nearest-neighbors/knn", "onedal/algorithms/objective-function/index", "onedal/algorithms/objective-function/logloss", "onedal/algorithms/pairwise-distances/chebyshev-distance", "onedal/algorithms/pairwise-distances/cosine-distance", "onedal/algorithms/pairwise-distances/index", "onedal/algorithms/pairwise-distances/minkowski-distance", "onedal/algorithms/statistics/basic-statistics", "onedal/algorithms/statistics/index", "onedal/algorithms/svm/index", "onedal/algorithms/svm/svm", "onedal/appendix/decision-tree", "onedal/appendix/index", "onedal/appendix/kd_tree", "onedal/build_app/build-application", "onedal/data-management/accessor/column", "onedal/data-management/accessor/row", "onedal/data-management/accessors", "onedal/data-management/array", "onedal/data-management/data-source/csv", "onedal/data-management/data-sources", "onedal/data-management/graph/directed-adjacency-vector-graph", "onedal/data-management/graph/undirected-adjacency-vector-graph", "onedal/data-management/graphs", "onedal/data-management/index", "onedal/data-management/table/csr", "onedal/data-management/table/homogen", "onedal/data-management/tables", "onedal/glossary", "onedal/gpu_support", "onedal/introduction", "onedal/notations", "onedal/programming-model/computational-modes", "onedal/spmd/index", "quick-start", "system-requirements"], "filenames": ["404.rst", "api/algorithms/clustering/dbscan.rst", "api/algorithms/clustering/index.rst", "api/algorithms/clustering/kmeans.rst", "api/algorithms/clustering/kmeans-init.rst", "api/algorithms/covariance/covariance.rst", "api/algorithms/covariance/index.rst", "api/algorithms/decomposition/index.rst", "api/algorithms/decomposition/pca.rst", "api/algorithms/ensembles/decision-forest.rst", "api/algorithms/ensembles/index.rst", "api/algorithms/graph/connected-components.rst", "api/algorithms/graph/index.rst", "api/algorithms/graph/subgraph-isomorphism.rst", "api/algorithms/index.rst", "api/algorithms/kernel-functions/index.rst", "api/algorithms/kernel-functions/linear-kernel.rst", "api/algorithms/kernel-functions/polynomial-kernel.rst", "api/algorithms/kernel-functions/rbf-kernel.rst", "api/algorithms/kernel-functions/sigmoid-kernel.rst", "api/algorithms/nearest-neighbors/index.rst", "api/algorithms/nearest-neighbors/knn-classification.rst", "api/algorithms/objective-function/index.rst", "api/algorithms/objective-function/logloss.rst", "api/algorithms/objective-function/objective-function.rst", "api/algorithms/pairwise-distances/chebyshev-distance.rst", "api/algorithms/pairwise-distances/cosine-distance.rst", "api/algorithms/pairwise-distances/index.rst", "api/algorithms/pairwise-distances/minkowski-distance.rst", "api/algorithms/statistics/basic-statistics.rst", "api/algorithms/statistics/index.rst", "api/algorithms/svm/index.rst", "api/algorithms/svm/svm.rst", "api/data-management/accessor/column.rst", "api/data-management/accessor/csr.rst", "api/data-management/accessor/row.rst", "api/data-management/accessors.rst", "api/data-management/array.rst", "api/data-management/data-source/csv.rst", "api/data-management/data-sources.rst", "api/data-management/graph-service.rst", "api/data-management/graph-service/directed-adjacency-vector-graph.rst", "api/data-management/graph-service/undirected-adjacency-vector-graph.rst", "api/data-management/graph/directed-adjacency-vector-graph.rst", "api/data-management/graph/undirected-adjacency-vector-graph.rst", "api/data-management/graphs.rst", "api/data-management/index.rst", "api/data-management/table/csr.rst", "api/data-management/table/homogen.rst", "api/data-management/tables.rst", "api/index.rst", "api/spmd/communicator.rst", "api/spmd/index.rst", "api/spmd/overview.rst", "bibliography.rst", "contribution/coding_guide.rst", "daal-interfaces.rst", "daal/algorithms/association_rules/association-rules.rst", "daal/algorithms/boosting/adaboost.rst", "daal/algorithms/boosting/adaboost-multiclass.rst", "daal/algorithms/boosting/brownboost.rst", "daal/algorithms/boosting/index.rst", "daal/algorithms/boosting/logitboost.rst", "daal/algorithms/cholesky/cholesky.rst", "daal/algorithms/covariance/computation-batch.rst", "daal/algorithms/covariance/computation-distributed.rst", "daal/algorithms/covariance/computation-online.rst", "daal/algorithms/covariance/correlation-and-variance-covariance-matrices.rst", "daal/algorithms/dbscan/computation-batch.rst", "daal/algorithms/dbscan/computation-distributed.rst", "daal/algorithms/dbscan/index.rst", "daal/algorithms/decision_forest/decision-forest.rst", "daal/algorithms/decision_forest/decision-forest-classification.rst", "daal/algorithms/decision_forest/decision-forest-regression.rst", "daal/algorithms/decision_forest/index.rst", "daal/algorithms/decision_tree/decision-tree.rst", "daal/algorithms/decision_tree/decision-tree-classification.rst", "daal/algorithms/decision_tree/decision-tree-regression.rst", "daal/algorithms/decision_tree/index.rst", "daal/algorithms/distance/correlation.rst", "daal/algorithms/distance/cosine.rst", "daal/algorithms/distance/index.rst", "daal/algorithms/distributions/bernoulli.rst", "daal/algorithms/distributions/index.rst", "daal/algorithms/distributions/normal.rst", "daal/algorithms/distributions/uniform.rst", "daal/algorithms/em/expectation-maximization.rst", "daal/algorithms/engines/index.rst", "daal/algorithms/engines/mcg59.rst", "daal/algorithms/engines/mt19937.rst", "daal/algorithms/engines/mt2203.rst", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees.rst", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-classification.rst", "daal/algorithms/gradient_boosted_trees/gradient-boosted-trees-regression.rst", "daal/algorithms/gradient_boosted_trees/index.rst", "daal/algorithms/implicit_als/computation-batch.rst", "daal/algorithms/implicit_als/computation-distributed-prediction.rst", "daal/algorithms/implicit_als/computation-distributed-training.rst", "daal/algorithms/implicit_als/implicit-alternating-least-squares.rst", "daal/algorithms/implicit_als/initialization-batch.rst", "daal/algorithms/implicit_als/initialization-distributed.rst", "daal/algorithms/k_nearest_neighbors/k-nearest-neighbors-knn-classifier.rst", "daal/algorithms/kernel_function/kernel-functions.rst", "daal/algorithms/kmeans/computation-batch.rst", "daal/algorithms/kmeans/computation-distributed.rst", "daal/algorithms/kmeans/initialization-batch.rst", "daal/algorithms/kmeans/initialization-distributed.rst", "daal/algorithms/kmeans/k-means-clustering.rst", "daal/algorithms/lasso_elastic_net/elastic-net.rst", "daal/algorithms/lasso_elastic_net/index.rst", "daal/algorithms/lasso_elastic_net/lasso.rst", "daal/algorithms/lasso_elastic_net/lasso-elasticnet-computation.rst", "daal/algorithms/linear_ridge_regression/index.rst", "daal/algorithms/linear_ridge_regression/linear-regression.rst", "daal/algorithms/linear_ridge_regression/linear-ridge-regression-computation.rst", "daal/algorithms/linear_ridge_regression/ridge-regression.rst", "daal/algorithms/logistic_regression/logistic-regression.rst", "daal/algorithms/moments/computation-batch.rst", "daal/algorithms/moments/computation-distributed.rst", "daal/algorithms/moments/computation-online.rst", "daal/algorithms/moments/moments-of-low-order.rst", "daal/algorithms/naive_bayes/computation-batch.rst", "daal/algorithms/naive_bayes/computation-distributed.rst", "daal/algorithms/naive_bayes/computation-online.rst", "daal/algorithms/naive_bayes/naive-bayes-classifier.rst", "daal/algorithms/normalization/index.rst", "daal/algorithms/normalization/min-max.rst", "daal/algorithms/normalization/z-score.rst", "daal/algorithms/optimization-solvers/iterative-solver.rst", "daal/algorithms/optimization-solvers/objective-function.rst", "daal/algorithms/optimization-solvers/objective-functions/computation.rst", "daal/algorithms/optimization-solvers/objective-functions/cross-entropy.rst", "daal/algorithms/optimization-solvers/objective-functions/logistic-loss.rst", "daal/algorithms/optimization-solvers/objective-functions/mse.rst", "daal/algorithms/optimization-solvers/objective-functions/sum-of-functions.rst", "daal/algorithms/optimization-solvers/objective-functions/with-precomputed-characteristics.rst", "daal/algorithms/optimization-solvers/optimization-solvers.rst", "daal/algorithms/optimization-solvers/solvers/adaptive-subgradient-method.rst", "daal/algorithms/optimization-solvers/solvers/computation.rst", "daal/algorithms/optimization-solvers/solvers/coordinate-descent.rst", "daal/algorithms/optimization-solvers/solvers/lbfgs.rst", "daal/algorithms/optimization-solvers/solvers/stochastic-average-gradient-accelerated-method.rst", "daal/algorithms/optimization-solvers/solvers/stochastic-gradient-descent-algorithm.rst", "daal/algorithms/outlier_detection/index.rst", "daal/algorithms/outlier_detection/multivariate.rst", "daal/algorithms/outlier_detection/multivariate-bacon.rst", "daal/algorithms/outlier_detection/univariate.rst", "daal/algorithms/pca/computation-batch.rst", "daal/algorithms/pca/computation-distributed.rst", "daal/algorithms/pca/computation-online.rst", "daal/algorithms/pca/principal-component-analysis.rst", "daal/algorithms/pca/transform.rst", "daal/algorithms/qr/qr-decomposition.rst", "daal/algorithms/qr/qr-pivoted.rst", "daal/algorithms/qr/qr-without-pivoting.rst", "daal/algorithms/qr/without-pivoting/computation-batch-online.rst", "daal/algorithms/qr/without-pivoting/computation-distributed.rst", "daal/algorithms/quality_metrics/default-metric-set.rst", "daal/algorithms/quality_metrics/default/for-binary-classification.rst", "daal/algorithms/quality_metrics/default/for-linear-regression.rst", "daal/algorithms/quality_metrics/default/for-multi-class-classification.rst", "daal/algorithms/quality_metrics/default/for-pca.rst", "daal/algorithms/quality_metrics/index.rst", "daal/algorithms/quality_metrics/user-defined.rst", "daal/algorithms/quantiles/index.rst", "daal/algorithms/sorting/index.rst", "daal/algorithms/stump/classification.rst", "daal/algorithms/stump/index.rst", "daal/algorithms/stump/regression.rst", "daal/algorithms/svd/computation-batch-online.rst", "daal/algorithms/svd/computation-distributed.rst", "daal/algorithms/svd/singular-value-decomposition.rst", "daal/algorithms/svm/support-vector-machine-classifier.rst", "daal/algorithms/svm_multi_class/multi-class-classifier.rst", "daal/analysis.rst", "daal/cpu-vs-gpu.rst", "daal/data-management/data-dictionaries.rst", "daal/data-management/data-management.rst", "daal/data-management/data-model.rst", "daal/data-management/data-serialization-and-deserialization.rst", "daal/data-management/data-sources.rst", "daal/data-management/essential-interfaces.rst", "daal/data-management/generic-interfaces.rst", "daal/data-management/numeric-tables.rst", "daal/data-management/numeric-tables-types.rst", "daal/services/callback-for-host-application.rst", "daal/services/extracting-version-information.rst", "daal/services/handling-errors.rst", "daal/services/managing-computational-environment.rst", "daal/services/managing-memory.rst", "daal/services/services.rst", "daal/training-prediction.rst", "daal/usage/algorithms.rst", "daal/usage/computation-modes.rst", "daal/usage/index.rst", "daal/usage/training-and-prediction/classification.rst", "daal/usage/training-and-prediction/index.rst", "daal/usage/training-and-prediction/recommendation-systems.rst", "daal/usage/training-and-prediction/regression.rst", "data-analytics-pipeline.rst", "deprecation.rst", "examples.rst", "examples/cpp.rst", "examples/cpp/basic_statistics_dense_batch.rst", "examples/cpp/basic_statistics_dense_online.rst", "examples/cpp/column_accessor_homogen.rst", "examples/cpp/connected_components_batch.rst", "examples/cpp/cor_dense_batch.rst", "examples/cpp/cor_dense_online.rst", "examples/cpp/cov_dense_batch.rst", "examples/cpp/cov_dense_online.rst", "examples/cpp/csr_accessor.rst", "examples/cpp/dbscan_brute_force_batch.rst", "examples/cpp/df_cls_dense_batch.rst", "examples/cpp/df_reg_dense_batch.rst", "examples/cpp/directed_graph.rst", "examples/cpp/graph_service_functions.rst", "examples/cpp/jaccard_batch.rst", "examples/cpp/jaccard_batch_app.rst", "examples/cpp/kmeans_init_dense.rst", "examples/cpp/kmeans_lloyd_dense_batch.rst", "examples/cpp/knn_cls_brute_force_dense_batch.rst", "examples/cpp/knn_cls_kd_tree_dense_batch.rst", "examples/cpp/knn_search_brute_force_dense_batch.rst", "examples/cpp/linear_kernel_dense_batch.rst", "examples/cpp/linear_regression_dense_batch.rst", "examples/cpp/linear_regression_dense_online.rst", "examples/cpp/logloss_dense_batch.rst", "examples/cpp/louvain_batch.rst", "examples/cpp/pca_dense_batch.rst", "examples/cpp/pca_dense_online.rst", "examples/cpp/pca_precomputed_dense_batch.rst", "examples/cpp/polynomial_kernel_dense_batch.rst", "examples/cpp/rbf_kernel_dense_batch.rst", "examples/cpp/shortest_paths_batch.rst", "examples/cpp/sigmoid_kernel_dense_batch.rst", "examples/cpp/subgraph_isomorphism_batch.rst", "examples/cpp/svm_multi_class_thunder_csr_batch.rst", "examples/cpp/svm_multi_class_thunder_dense_batch.rst", "examples/cpp/svm_nu_cls_thunder_csr_batch.rst", "examples/cpp/svm_nu_cls_thunder_dense_batch.rst", "examples/cpp/svm_nu_reg_thunder_csr_batch.rst", "examples/cpp/svm_nu_reg_thunder_dense_batch.rst", "examples/cpp/svm_reg_thunder_csr_batch.rst", "examples/cpp/svm_reg_thunder_dense_batch.rst", "examples/cpp/svm_two_class_smo_csr_batch.rst", "examples/cpp/svm_two_class_smo_dense_batch.rst", "examples/cpp/svm_two_class_thunder_csr_batch.rst", "examples/cpp/svm_two_class_thunder_dense_batch.rst", "examples/cpp/triangle_counting_batch.rst", "examples/dpc.rst", "examples/dpc/basic_statistics_dense_batch.rst", "examples/dpc/basic_statistics_dense_online.rst", "examples/dpc/column_accessor_homogen.rst", "examples/dpc/cor_dense_batch.rst", "examples/dpc/cor_dense_online.rst", "examples/dpc/cov_dense_batch.rst", "examples/dpc/cov_dense_online.rst", "examples/dpc/csr_accessor.rst", "examples/dpc/dbscan_brute_force_batch.rst", "examples/dpc/df_cls_hist_batch.rst", "examples/dpc/df_cls_hist_batch_random.rst", "examples/dpc/df_cls_traverse_model.rst", "examples/dpc/df_reg_hist_batch.rst", "examples/dpc/df_reg_hist_batch_random.rst", "examples/dpc/df_reg_traverse_model.rst", "examples/dpc/kmeans_init_dense.rst", "examples/dpc/kmeans_lloyd_dense_batch.rst", "examples/dpc/knn_cls_brute_force_dense_batch.rst", "examples/dpc/knn_reg_brute_force_dense_batch.rst", "examples/dpc/knn_search_brute_force_dense_batch.rst", "examples/dpc/linear_kernel_dense_batch.rst", "examples/dpc/linear_regression_dense_batch.rst", "examples/dpc/linear_regression_dense_online.rst", "examples/dpc/logistic_regression_dense_batch.rst", "examples/dpc/pca_cor_dense_batch.rst", "examples/dpc/pca_cor_dense_online.rst", "examples/dpc/pca_precomputed_cor_dense_batch.rst", "examples/dpc/pca_precomputed_cov_dense_batch.rst", "examples/dpc/rbf_kernel_dense_batch.rst", "examples/dpc/svm_two_class_thunder_dense_batch.rst", "includes/clustering/dbscan-examples.rst", "includes/clustering/dbscan-introduction.rst", "includes/clustering/dbscan-usage-examples.rst", "includes/clustering/kmeans-examples.rst", "includes/clustering/kmeans-init-examples.rst", "includes/clustering/kmeans-init-introduction.rst", "includes/clustering/kmeans-init-usage-examples.rst", "includes/clustering/kmeans-introduction.rst", "includes/clustering/kmeans-usage-examples.rst", "includes/covariance/covariance-examples.rst", "includes/covariance/covariance-introduction.rst", "includes/data-management/array-usage-example.rst", "includes/data-management/column-accessor-usage-example.rst", "includes/data-management/csr-accessor-usage-example.rst", "includes/data-management/csv-data-source-usage-example.rst", "includes/data-management/row-accessor-usage-example.rst", "includes/decomposition/pca-examples.rst", "includes/decomposition/pca-introduction.rst", "includes/decomposition/pca-usage-examples.rst", "includes/ensembles/df-classification-examples.rst", "includes/ensembles/df-introduction.rst", "includes/ensembles/df-regression-examples.rst", "includes/graph/connected-components-examples.rst", "includes/graph/connected-components-introduction.rst", "includes/graph/subgraph-isomorphism-examples.rst", "includes/graph/subgraph-isomorphism-introduction.rst", "includes/kernel-functions/linear-kernel-examples.rst", "includes/kernel-functions/linear-kernel-introduction.rst", "includes/kernel-functions/polynomial-kernel-examples.rst", "includes/kernel-functions/polynomial-kernel-introduction.rst", "includes/kernel-functions/rbf-kernel-examples.rst", "includes/kernel-functions/rbf-kernel-introduction.rst", "includes/kernel-functions/sigmoid-kernel-examples.rst", "includes/kernel-functions/sigmoid-kernel-introduction.rst", "includes/nearest-neighbors/knn-examples.rst", "includes/nearest-neighbors/knn-introduction.rst", "includes/nearest-neighbors/knn-usage-examples.rst", "includes/objective-function/logloss-examples.rst", "includes/objective-function/logloss-introduction.rst", "includes/objective-function/objective-function-introduction.rst", "includes/pairwise-distances/chebyshev-distance-introduction.rst", "includes/pairwise-distances/cosine-distance-introduction.rst", "includes/pairwise-distances/minkowski-distance-introduction.rst", "includes/spmd/ccl-comm-usage-example.rst", "includes/spmd/mpi-comm-usage-example.rst", "includes/statistics/basic-statistics-examples.rst", "includes/statistics/basic-statistics-introduction.rst", "includes/statistics/basic-statistics-usage-examples.rst", "includes/svm/svm-examples.rst", "includes/svm/svm-introduction.rst", "index.rst", "installation.rst", "oneapi-interfaces.rst", "onedal/algorithms/clustering/dbscan.rst", "onedal/algorithms/clustering/index.rst", "onedal/algorithms/clustering/kmeans.rst", "onedal/algorithms/clustering/kmeans-init.rst", "onedal/algorithms/covariance/covariance.rst", "onedal/algorithms/covariance/index.rst", "onedal/algorithms/decomposition/index.rst", "onedal/algorithms/decomposition/pca.rst", "onedal/algorithms/ensembles/decision-forest.rst", "onedal/algorithms/ensembles/index.rst", "onedal/algorithms/graph/connected-components.rst", "onedal/algorithms/graph/index.rst", "onedal/algorithms/graph/subgraph-isomorphism.rst", "onedal/algorithms/index.rst", "onedal/algorithms/kernel-functions/index.rst", "onedal/algorithms/kernel-functions/linear-kernel.rst", "onedal/algorithms/kernel-functions/polynomial-kernel.rst", "onedal/algorithms/kernel-functions/rbf-kernel.rst", "onedal/algorithms/kernel-functions/sigmoid-kernel.rst", "onedal/algorithms/nearest-neighbors/index.rst", "onedal/algorithms/nearest-neighbors/knn.rst", "onedal/algorithms/objective-function/index.rst", "onedal/algorithms/objective-function/logloss.rst", "onedal/algorithms/pairwise-distances/chebyshev-distance.rst", "onedal/algorithms/pairwise-distances/cosine-distance.rst", "onedal/algorithms/pairwise-distances/index.rst", "onedal/algorithms/pairwise-distances/minkowski-distance.rst", "onedal/algorithms/statistics/basic-statistics.rst", "onedal/algorithms/statistics/index.rst", "onedal/algorithms/svm/index.rst", "onedal/algorithms/svm/svm.rst", "onedal/appendix/decision-tree.rst", "onedal/appendix/index.rst", "onedal/appendix/kd_tree.rst", "onedal/build_app/build-application.rst", "onedal/data-management/accessor/column.rst", "onedal/data-management/accessor/row.rst", "onedal/data-management/accessors.rst", "onedal/data-management/array.rst", "onedal/data-management/data-source/csv.rst", "onedal/data-management/data-sources.rst", "onedal/data-management/graph/directed-adjacency-vector-graph.rst", "onedal/data-management/graph/undirected-adjacency-vector-graph.rst", "onedal/data-management/graphs.rst", "onedal/data-management/index.rst", "onedal/data-management/table/csr.rst", "onedal/data-management/table/homogen.rst", "onedal/data-management/tables.rst", "onedal/glossary.rst", "onedal/gpu_support.rst", "onedal/introduction.rst", "onedal/notations.rst", "onedal/programming-model/computational-modes.rst", "onedal/spmd/index.rst", "quick-start.rst", "system-requirements.rst"], "titles": ["", "DBSCAN", "Clustering", "K-Means", "K-Means initialization", "Covariance", "Covariance", "Decomposition", "Principal Components Analysis (PCA)", "Decision Forest Classification and Regression (DF)", "Ensembles", "Connected Components", "Graph", "Subgraph Isomorphism", "Algorithms", "Kernel Functions", "Linear kernel", "Polynomial kernel", "Radial Basis Function (RBF) kernel", "Sigmoid kernel", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification (k-NN)", "Objective function", "Logistic Loss", "Objective function", "Chebyshev distance", "Cosine distance", "Pairwise Distances", "Minkowski distance", "Basic Statistics", "Statistics", "Support Vector Machines", "Support Vector Machine Classifier (SVM)", "Column Accessor", "Compressed Sparse Rows (CSR) Accessor", "Row Accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Graph Service", "Directed adjacency vector graph service", "Undirected adjacency vector graph service", "Directed adjacency vector graph", "Undirected adjacency vector graph", "Graphs", "Data Management", "Compressed Sparse Rows (CSR) Table", "Homogeneous table", "Tables", "C++ API", "Communicators", "Distributed Model: Single Process Multiple Data", "Distributed SPMD model", "Bibliography", "Coding Guidelines", "DAAL Interfaces", "Association Rules", "AdaBoost Classifier", "AdaBoost Multiclass Classifier", "BrownBoost Classifier", "Boosting", "LogitBoost Classifier", "Cholesky Decomposition", "Batch Processing", "Distributed Processing", "Online Processing", "Correlation and Variance-Covariance Matrices", "Batch Processing", "Distributed Processing", "Density-Based Spatial Clustering of Applications with Noise", "Decision Forest", "Classification Decision Forest", "Regression Decision Forest", "Decision Forest", "Decision Tree", "Classification Decision Tree", "Regression Decision Tree", "Decision Trees", "Correlation Distance Matrix", "Cosine Distance Matrix", "Distance Matrix", "Bernoulli Distribution", "Distributions", "Normal Distribution", "Uniform Distribution", "Expectation-Maximization", "Engines", "mcg59", "mt19937", "mt2203", "Gradient Boosted Trees", "Classification Gradient Boosted Trees", "Regression Gradient Boosted Trees", "Gradient Boosted Trees", "Batch Processing", "Distributed Processing: Prediction of Ratings", "Distributed Processing: Training", "Implicit Alternating Least Squares", "Batch Processing", "Distributed Processing", "k-Nearest Neighbors (kNN) Classifier", "Kernel Functions", "Batch Processing", "Distributed Processing", "Batch Processing", "Distributed Processing", "K-Means Clustering", "Elastic Net", "LASSO and Elastic Net Regressions", "Least Absolute Shrinkage and Selection Operator (LASSO)", "LASSO and Elastic Net Computation", "Linear and Ridge Regressions", "Linear Regression", "Linear and Ridge Regressions Computation", "Ridge Regression", "Logistic Regression", "Batch Processing", "Distributed Processing", "Online Processing", "Moments of Low Order", "Batch Processing", "Distributed Processing", "Online Processing", "Na\u00efve Bayes Classifier", "Normalization", "Min-max", "Z-score", "Iterative Solver", "Objective Function", "Computation", "Cross-entropy Loss", "Logistic Loss", "Mean Squared Error Algorithm", "Sum of Functions", "Objective Function with Precomputed Characteristics Algorithm", "Optimization Solvers", "Adaptive Subgradient Method", "Computation", "Coordinate Descent Algorithm", "Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Algorithm", "Stochastic Average Gradient Accelerated Method", "Stochastic Gradient Descent Algorithm", "Outlier Detection", "Multivariate Outlier Detection", "Multivariate BACON Outlier Detection", "Univariate Outlier Detection", "Batch Processing", "Distributed Processing", "Online Processing", "Principal Component Analysis", "Principal Components Analysis Transform", "QR Decomposition", "Pivoted QR Decomposition", "QR Decomposition without Pivoting", "Batch and Online Processing", "Distributed Processing", "Working with the Default Metric Set", "Quality Metrics for Binary Classification Algorithms", "Quality Metrics for Linear Regression", "Quality Metrics for Multi-class Classification Algorithms", "Quality Metrics for Principal Components Analysis", "Quality Metrics", "Working with User-defined Quality Metrics", "Quantile", "Sorting", "Classification Stump", "Stump", "Regression Stump", "Batch and Online Processing", "Distributed Processing", "Singular Value Decomposition", "Support Vector Machine Classifier", "Multi-class Classifier", "Analysis", "CPU and GPU Support", "Data Dictionaries", "Data Management", "Data Model", "Data Serialization and Deserialization", "Data Sources", "Essential Interfaces for Algorithms", "Generic Interfaces", "Numeric Tables", "Types of Numeric Tables", "Providing a Callback for the Host Application", "Extracting Version Information", "Handling Errors", "Managing the Computational Environment", "Managing Memory", "Services", "Training and Prediction", "Algorithms", "Computation Modes", "Library Usage", "Classification Usage Model", "Usage Model: Training and Prediction", "Recommendation Systems Usage Model", "Regression Usage Model", "Introduction", "Deprecation Notice", "oneAPI Examples", "oneAPI C++ Examples", "basic_statistics_dense_batch.cpp", "basic_statistics_dense_online.cpp", "column_accessor_homogen.cpp", "connected_components_batch.cpp", "cor_dense_batch.cpp", "cor_dense_online.cpp", "cov_dense_batch.cpp", "cov_dense_online.cpp", "csr_accessor.cpp", "dbscan_brute_force_batch.cpp", "df_cls_dense_batch.cpp", "df_reg_dense_batch.cpp", "directed_graph.cpp", "graph_service_functions.cpp", "jaccard_batch.cpp", "jaccard_batch_app.cpp", "kmeans_init_dense.cpp", "kmeans_lloyd_dense_batch.cpp", "knn_cls_brute_force_dense_batch.cpp", "knn_cls_kd_tree_dense_batch.cpp", "knn_search_brute_force_dense_batch.cpp", "linear_kernel_dense_batch.cpp", "linear_regression_dense_batch.cpp", "linear_regression_dense_online.cpp", "logloss_dense_batch.cpp", "louvain_batch.cpp", "pca_dense_batch.cpp", "pca_dense_online.cpp", "pca_precomputed_dense_batch.cpp", "polynomial_kernel_dense_batch.cpp", "rbf_kernel_dense_batch.cpp", "shortest_paths_batch.cpp", "sigmoid_kernel_dense_batch.cpp", "subgraph_isomorphism_batch.cpp", "svm_multi_class_thunder_csr_batch.cpp", "svm_multi_class_thunder_dense_batch.cpp", "svm_nu_cls_thunder_csr_batch.cpp", "svm_nu_cls_thunder_dense_batch.cpp", "svm_nu_reg_thunder_csr_batch.cpp", "svm_nu_reg_thunder_dense_batch.cpp", "svm_reg_thunder_csr_batch.cpp", "svm_reg_thunder_dense_batch.cpp", "svm_two_class_smo_csr_batch.cpp", "svm_two_class_smo_dense_batch.cpp", "svm_two_class_thunder_csr_batch.cpp", "svm_two_class_thunder_dense_batch.cpp", "triangle_counting_batch.cpp", "oneAPI DPC++ examples", "basic_statistics_dense_batch.cpp", "basic_statistics_dense_online.cpp", "column_accessor_homogen.cpp", "cor_dense_batch.cpp", "cor_dense_online.cpp", "cov_dense_batch.cpp", "cov_dense_online.cpp", "csr_accessor.cpp", "dbscan_brute_force_batch.cpp", "df_cls_hist_batch.cpp", "df_cls_hist_batch_random.cpp", "df_cls_traverse_model.cpp", "df_reg_hist_batch.cpp", "df_reg_hist_batch_random.cpp", "df_reg_traverse_model.cpp", "kmeans_init_dense.cpp", "kmeans_lloyd_dense_batch.cpp", "knn_cls_brute_force_dense_batch.cpp", "knn_reg_brute_force_dense_batch.cpp", "knn_search_brute_force_dense_batch.cpp", "linear_kernel_dense_batch.cpp", "linear_regression_dense_batch.cpp", "linear_regression_dense_online.cpp", "logistic_regression_dense_batch.cpp", "pca_cor_dense_batch.cpp", "pca_cor_dense_online.cpp", "pca_precomputed_cor_dense_batch.cpp", "pca_precomputed_cov_dense_batch.cpp", "rbf_kernel_dense_batch.cpp", "svm_two_class_thunder_dense_batch.cpp", "&lt;no title&gt;", "&lt;no title&gt;", "Compute", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computing", "&lt;no title&gt;", "Training", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Training", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Training", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computing", "&lt;no title&gt;", "&lt;no title&gt;", "oneAPI Data Analytics Library (oneDAL)", "Installation", "oneAPI Interfaces", "DBSCAN", "Clustering", "K-Means", "K-Means initialization", "Covariance", "Covariance", "Decomposition", "Principal Components Analysis (PCA)", "Decision Forest Classification and Regression (DF)", "Ensembles", "Connected Components", "Graph", "Subgraph Isomorphism", "Algorithms", "Kernel Functions", "Linear kernel", "Polynomial kernel", "Radial Basis Function (RBF) kernel", "Sigmoid kernel", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification, Regression, and Search (k-NN)", "Objective function", "Logistic Loss", "Chebyshev distance", "Cosine distance", "Pairwise Distances", "Minkowski distance", "Basic Statistics", "Statistics", "Support Vector Machines", "Support Vector Machine Classifier and Regression (SVM)", "Decision Tree", "Appendix", "k-d Tree", "Build applications with oneDAL", "Column accessor", "Row accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Directed adjacency vector graph", "Undirected adjacency vector graph", "Graphs", "Data Management", "Compressed Sparse Rows (CSR) Table", "Homogeneous table", "Tables", "Glossary", "CPU and GPU Support", "Introduction", "Mathematical Notations", "Computational Modes", "Single Program Multiple Data", "Quick Start", "System Requirements"], "terms": {"oned": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389], "daal": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "intel": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "oneapi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "toolkit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "dpc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "compil": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 388, 389], "analyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389], "librari": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "github": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "repositori": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "densiti": [1, 54, 56, 84, 85, 86, 174, 282, 331, 334], "spatial": [1, 54, 56, 174, 282, 331, 334], "cluster": [1, 3, 4, 14, 50, 54, 56, 68, 69, 86, 103, 104, 105, 106, 174, 193, 212, 259, 282, 286, 288, 331, 333, 334, 336, 337, 347, 382], "applic": [1, 5, 37, 54, 55, 56, 57, 62, 65, 66, 68, 69, 72, 76, 82, 86, 92, 96, 97, 100, 103, 104, 105, 106, 108, 110, 114, 116, 118, 119, 121, 122, 123, 127, 131, 132, 133, 138, 141, 142, 147, 148, 149, 153, 156, 170, 171, 173, 174, 177, 182, 183, 188, 189, 190, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 291, 331, 333, 334, 338, 341, 371, 378, 382, 384], "nois": [1, 54, 56, 68, 69, 161, 174, 282, 331, 334], "i": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 45, 47, 48, 49, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 291, 292, 293, 294, 296, 298, 301, 304, 308, 310, 312, 314, 316, 319, 320, 322, 323, 331, 334, 336, 337, 338, 341, 342, 344, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388], "algorithm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 32, 50, 54, 55, 56, 58, 59, 60, 61, 62, 70, 71, 72, 73, 74, 75, 76, 77, 91, 92, 93, 94, 95, 98, 99, 100, 101, 107, 108, 111, 116, 121, 123, 124, 125, 128, 129, 130, 136, 150, 152, 157, 162, 163, 166, 168, 172, 173, 174, 177, 183, 187, 188, 191, 193, 194, 206, 217, 218, 228, 234, 236, 249, 269, 282, 286, 288, 291, 298, 301, 304, 306, 310, 312, 314, 316, 320, 323, 327, 330, 331, 333, 334, 335, 336, 337, 338, 341, 342, 344, 345, 346, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 365, 378, 382, 383, 385, 386, 387, 388], "propos": [1, 64, 65, 66, 70, 117, 118, 119, 282, 334, 341], "ester96": [1, 54, 70, 282, 334], "It": [1, 17, 32, 37, 55, 60, 63, 68, 69, 70, 71, 107, 111, 141, 150, 152, 161, 171, 172, 177, 178, 185, 192, 282, 310, 330, 334, 341, 342, 350, 364, 372, 378, 382], "non": [1, 13, 17, 26, 47, 49, 52, 54, 63, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 87, 92, 93, 101, 107, 116, 124, 128, 129, 130, 131, 132, 133, 134, 139, 144, 146, 147, 150, 151, 153, 161, 171, 172, 177, 184, 282, 310, 322, 334, 342, 346, 350, 358, 364, 365, 367, 378, 379, 382], "parametr": [1, 70, 101, 144, 146, 282, 334], "given": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 29, 32, 38, 47, 48, 57, 58, 59, 60, 62, 63, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 84, 85, 86, 91, 92, 93, 98, 101, 102, 104, 106, 107, 116, 120, 124, 126, 127, 130, 131, 132, 133, 134, 140, 144, 145, 146, 150, 151, 153, 154, 158, 159, 160, 161, 164, 171, 172, 173, 177, 178, 181, 182, 187, 193, 282, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 357, 358, 360, 361, 364, 365, 367, 373, 382, 385], "set": [1, 8, 9, 11, 21, 28, 29, 32, 37, 40, 45, 47, 48, 49, 54, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 86, 87, 90, 91, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 161, 162, 163, 164, 165, 170, 171, 172, 176, 177, 178, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 195, 198, 200, 206, 217, 218, 228, 234, 236, 249, 282, 298, 304, 316, 323, 327, 331, 334, 336, 337, 341, 342, 344, 346, 349, 350, 351, 352, 354, 357, 358, 360, 361, 364, 365, 367, 368, 371, 373, 374, 378, 381, 382, 385, 386, 388], "observ": [1, 9, 21, 32, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 86, 91, 98, 101, 102, 103, 104, 108, 110, 111, 113, 115, 116, 118, 124, 126, 139, 140, 143, 144, 145, 146, 148, 149, 150, 158, 160, 164, 165, 177, 178, 180, 184, 193, 195, 198, 214, 263, 264, 282, 316, 334, 341, 342, 354, 364, 382, 385], "some": [1, 3, 24, 55, 57, 58, 59, 61, 70, 75, 106, 107, 114, 125, 127, 131, 132, 133, 142, 157, 162, 173, 180, 181, 192, 193, 199, 282, 288, 320, 334, 336, 348, 355, 378, 382], "space": [1, 17, 26, 54, 55, 70, 75, 91, 101, 102, 128, 137, 139, 140, 141, 142, 282, 310, 322, 334, 348, 350, 354, 358, 365, 367, 382], "group": [1, 37, 54, 57, 70, 150, 190, 282, 334, 341, 368, 382], "togeth": [1, 67, 70, 282, 334], "ar": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 55, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 85, 86, 87, 90, 91, 92, 94, 97, 98, 100, 101, 102, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 129, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 154, 156, 159, 160, 161, 162, 164, 166, 169, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 199, 200, 211, 258, 282, 291, 298, 301, 306, 316, 320, 323, 330, 331, 334, 336, 338, 341, 342, 344, 346, 348, 354, 355, 356, 357, 360, 364, 365, 371, 372, 375, 376, 378, 380, 382, 383, 384, 386, 387, 388], "close": [1, 62, 67, 70, 103, 104, 180, 199, 282, 334, 387], "pack": [1, 70, 169, 170, 181, 183, 184, 282, 334, 387], "mani": [1, 45, 49, 51, 55, 70, 92, 93, 108, 282, 334, 372, 384], "nearbi": [1, 70, 282, 334], "neighbor": [1, 14, 40, 41, 42, 45, 50, 54, 56, 70, 191, 215, 216, 282, 331, 333, 334, 344, 347, 383, 384], "mark": [1, 55, 70, 144, 146, 200, 282, 334], "outlier": [1, 54, 56, 70, 174, 282, 331, 334, 382], "lie": [1, 70, 282, 334], "alon": [1, 70, 282, 334], "low": [1, 56, 65, 70, 98, 126, 127, 174, 181, 193, 282, 331, 334, 382], "region": [1, 70, 101, 144, 146, 282, 334, 367], "whose": [1, 70, 101, 282, 334, 354, 382], "nearest": [1, 14, 50, 54, 56, 70, 191, 282, 316, 331, 333, 334, 336, 347, 382, 383, 384], "too": [1, 70, 282, 334], "far": [1, 57, 58, 60, 62, 65, 66, 70, 72, 73, 76, 77, 84, 92, 93, 95, 97, 98, 101, 103, 104, 111, 116, 118, 119, 148, 149, 173, 282, 334], "awai": [1, 70, 282, 334], "compute_input": [1, 4, 5, 16, 17, 18, 19, 24, 29, 282, 286, 291, 308, 310, 312, 314, 320, 327, 334, 337, 338, 349, 350, 351, 352, 355, 361], "compute_result": [1, 4, 5, 16, 17, 18, 19, 24, 29, 282, 286, 291, 308, 310, 312, 314, 320, 327, 334, 337, 338, 349, 350, 351, 352, 355, 361], "default": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32, 38, 43, 44, 45, 47, 48, 49, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 145, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 173, 177, 180, 181, 182, 187, 188, 192, 195, 197, 198, 258, 282, 334, 338, 341, 354, 355, 356, 373, 382], "refer": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 70, 72, 73, 87, 91, 95, 97, 101, 108, 110, 111, 113, 114, 115, 116, 123, 135, 158, 160, 162, 166, 168, 172, 180, 181, 182, 192, 193, 195, 197, 198, 292, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 369, 370, 372, 373, 375, 376, 377, 379, 380, 381, 382, 388], "develop": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 36, 37, 38, 43, 44, 45, 46, 48, 49, 52, 53, 55, 180, 201, 368, 389], "guid": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 36, 37, 38, 43, 44, 45, 46, 48, 49, 52, 53, 54], "all": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 57, 68, 69, 70, 71, 72, 73, 75, 76, 77, 86, 91, 92, 93, 97, 100, 101, 102, 105, 106, 111, 116, 117, 118, 119, 124, 128, 131, 132, 133, 137, 140, 141, 142, 144, 145, 146, 150, 173, 179, 180, 181, 183, 184, 191, 192, 193, 199, 218, 304, 331, 341, 342, 344, 346, 354, 364, 365, 371, 374, 378, 379, 380, 382, 383, 387, 388], "type": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 51, 53, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 180, 181, 182, 183, 187, 188, 192, 193, 342, 348, 356, 373, 378, 379, 380, 382], "function": [1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 19, 21, 23, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 59, 60, 62, 74, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 98, 103, 104, 107, 108, 110, 115, 116, 127, 128, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147, 150, 159, 165, 172, 173, 174, 177, 180, 182, 189, 219, 220, 237, 238, 239, 240, 245, 246, 247, 248, 266, 267, 280, 308, 310, 312, 314, 319, 320, 331, 333, 336, 341, 347, 349, 350, 352, 356, 364, 374, 377, 385, 387], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 55, 56, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 83, 86, 87, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114, 116, 118, 119, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 137, 138, 140, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 170, 171, 172, 173, 177, 178, 180, 182, 184, 185, 187, 188, 191, 192, 193, 195, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 304, 320, 335, 336, 338, 341, 342, 344, 345, 355, 356, 364, 365, 368, 371, 372, 374, 375, 376, 377, 378, 381, 382, 385, 387, 388], "section": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 55, 61, 87, 105, 106, 181, 183, 193, 368, 371, 372, 374, 377, 378, 381, 387], "declar": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 192, 374, 388], "dal": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 53, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 292, 293, 294, 295, 296, 324, 325, 328, 334, 361, 368, 369, 370, 372, 373, 374, 381, 388], "namespac": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 295, 296, 369, 370, 372, 373, 374, 381, 388], "avail": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 54, 59, 64, 65, 66, 67, 68, 69, 70, 74, 76, 77, 95, 98, 99, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 130, 142, 147, 148, 149, 150, 154, 163, 166, 168, 171, 172, 173, 180, 182, 183, 184, 185, 188, 192, 193, 195, 331, 378, 381, 382, 383, 384, 386, 388], "via": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 77, 111, 116, 141, 180, 182, 374, 378, 388], "inclus": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53], "algo": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 53, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 324, 325], "hpp": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 53, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 324, 325, 369, 370, 372, 388], "header": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 179, 180, 388], "file": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 54, 147, 177, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 332, 373, 374, 378, 382, 388], "templat": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 57, 63, 67, 79, 80, 86, 98, 107, 124, 144, 150, 152, 171, 180, 192, 218, 219, 229, 230, 231, 262, 265, 266, 374], "typenam": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 55, 219, 229, 230, 231, 262, 265, 266, 374], "float": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 47, 48, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 172, 173, 181, 182, 192, 205, 211, 214, 219, 222, 223, 227, 229, 230, 231, 234, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 274, 277, 278, 283, 287, 289, 292, 293, 294, 296, 299, 317, 324, 325, 334, 336, 337, 341, 354, 356, 369, 370, 372, 382, 388], "by_default": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 269], "class": [1, 3, 4, 5, 8, 11, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 43, 44, 45, 47, 48, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 79, 80, 83, 86, 87, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 184, 187, 188, 190, 191, 192, 193, 195, 197, 198, 218, 262, 265, 292, 316, 331, 342, 347, 354, 355, 356, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381], "paramet": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 61, 67, 75, 87, 98, 107, 115, 124, 128, 150, 152, 162, 171, 178, 179, 180, 182, 184, 191, 193, 194, 206, 217, 228, 234, 236, 249, 262, 342, 364, 373, 374, 378, 382, 383, 387, 388], "The": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 197, 198, 200, 217, 218, 286, 288, 291, 304, 306, 308, 310, 312, 314, 316, 321, 322, 323, 331, 334, 336, 337, 338, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 365, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 387, 388], "point": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 47, 48, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 172, 173, 180, 192, 288, 334, 336, 342, 367, 372, 382, 387], "us": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 45, 47, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 188, 189, 191, 192, 193, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 292, 293, 295, 296, 301, 310, 312, 314, 319, 320, 323, 331, 333, 337, 341, 342, 344, 348, 350, 351, 352, 355, 356, 357, 358, 360, 364, 365, 368, 369, 370, 371, 372, 373, 374, 378, 381, 382, 385, 388, 389], "intermedi": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 172, 173, 180, 344, 364, 382, 388], "can": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 197, 198, 199, 291, 336, 338, 341, 342, 354, 364, 365, 372, 378, 381, 382, 387, 388], "doubl": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 45, 47, 48, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 172, 173, 176, 182, 187, 204, 208, 210, 212, 215, 219, 226, 227, 228, 230, 234, 252, 255, 257, 259, 266, 273, 274, 276, 283, 334, 382], "specifi": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 40, 41, 42, 45, 51, 53, 55, 57, 59, 62, 63, 67, 68, 71, 72, 75, 79, 80, 82, 84, 85, 86, 98, 101, 103, 106, 107, 111, 113, 116, 124, 127, 130, 131, 132, 133, 134, 139, 144, 147, 150, 152, 161, 162, 169, 170, 171, 172, 173, 176, 180, 182, 184, 188, 189, 336, 342, 365, 367, 382, 387], "an": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 47, 48, 49, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 116, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 177, 179, 180, 182, 185, 187, 191, 192, 193, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 298, 301, 304, 322, 331, 334, 336, 341, 342, 344, 346, 358, 364, 365, 367, 368, 371, 372, 373, 374, 377, 378, 381, 382, 385, 388], "implement": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 49, 51, 54, 56, 61, 62, 64, 65, 66, 86, 103, 104, 117, 118, 119, 125, 127, 131, 132, 133, 140, 141, 142, 143, 150, 152, 163, 171, 172, 173, 177, 179, 180, 181, 183, 185, 191, 192, 200, 331, 335, 345, 347, 354, 364, 371, 374, 375, 376, 377, 378, 381, 382], "brute_forc": [1, 21, 223, 270], "problem": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 54, 55, 58, 59, 60, 62, 63, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 98, 101, 107, 113, 116, 120, 124, 127, 136, 138, 144, 145, 146, 150, 152, 153, 154, 158, 159, 160, 161, 164, 171, 172, 173, 191, 288, 316, 330, 334, 336, 337, 341, 342, 344, 346, 349, 350, 351, 352, 354, 356, 357, 358, 360, 361, 364, 382], "solv": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 60, 63, 71, 72, 73, 75, 86, 91, 92, 93, 101, 136, 152, 171, 172, 173, 288, 336, 342, 344, 364], "constructor": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 43, 44, 45, 47, 48, 49, 72, 88, 89, 90, 92, 93, 113, 116, 172, 173, 176, 182, 184, 192, 193, 371, 373], "epsilon": [1, 32, 68, 69, 70, 86, 98, 128, 212, 259, 283, 334, 356, 364, 382], "std": [1, 3, 4, 8, 9, 11, 13, 17, 21, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 55, 180, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 292, 293, 294, 296, 317, 328, 334, 354, 361, 369, 370, 372, 381, 382, 388], "int64_t": [1, 3, 4, 8, 9, 11, 13, 17, 21, 32, 33, 34, 35, 37, 45, 47, 48, 49, 204, 205, 208, 210, 211, 212, 217, 219, 226, 228, 230, 249, 252, 253, 255, 257, 258, 259, 262, 265, 266, 273, 274, 276, 283, 292, 293, 294, 296, 317, 334, 354, 369, 370, 372, 382, 388], "min_observ": [1, 212, 259], "creat": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 43, 44, 45, 47, 48, 49, 53, 55, 71, 72, 92, 93, 101, 106, 113, 116, 162, 172, 173, 176, 180, 182, 187, 192, 211, 217, 218, 258, 292, 294, 368, 372, 378, 381, 382, 388], "new": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 43, 44, 45, 47, 48, 49, 54, 75, 86, 101, 106, 107, 113, 116, 124, 145, 150, 163, 172, 173, 176, 180, 181, 182, 191, 193, 292, 298, 316, 341, 354, 372, 382], "instanc": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 37, 38, 43, 44, 45, 47, 48, 49, 51, 55, 71, 180, 182, 185, 187, 188, 374, 382], "properti": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 37, 47, 49, 51, 75, 292, 368, 372, 374, 377, 378, 382], "distanc": [1, 14, 16, 17, 18, 19, 21, 50, 56, 68, 69, 70, 101, 103, 104, 107, 145, 172, 174, 223, 234, 268, 269, 316, 321, 322, 323, 331, 333, 336, 347, 354, 364, 382], "search": [1, 11, 13, 21, 54, 91, 101, 136, 223, 270, 304, 306, 316, 344, 346, 347, 353, 382, 383, 384], "getter": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 38, 374, 382], "setter": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 374, 382], "get_epsilon": [1, 32], "const": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 33, 34, 35, 37, 38, 40, 45, 47, 48, 49, 53, 185, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 289, 292, 293, 294, 295, 296, 299, 317, 324, 325, 328, 334, 336, 337, 341, 354, 361, 369, 370, 372, 373, 374, 382, 388], "auto": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 28, 29, 32, 33, 34, 35, 37, 38, 40, 53, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 289, 292, 293, 294, 295, 296, 299, 317, 324, 325, 328, 334, 336, 337, 341, 354, 361, 369, 370, 372, 373, 388], "set_epsilon": [1, 32, 243, 244], "valu": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 145, 147, 148, 149, 151, 153, 155, 158, 159, 160, 161, 162, 164, 165, 166, 168, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 187, 192, 193, 205, 211, 219, 220, 224, 227, 232, 233, 235, 253, 258, 262, 265, 266, 267, 271, 279, 292, 316, 331, 336, 341, 342, 348, 354, 364, 365, 367, 369, 371, 372, 373, 374, 378, 379, 382, 385], "invari": [1, 3, 4, 8, 9, 21, 23, 32, 55], "0": [1, 3, 4, 8, 9, 16, 17, 18, 19, 21, 23, 28, 32, 33, 34, 35, 37, 38, 47, 48, 49, 53, 54, 55, 57, 58, 59, 60, 61, 62, 68, 70, 71, 72, 75, 76, 77, 82, 84, 85, 86, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 111, 115, 116, 124, 126, 131, 132, 133, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 153, 154, 159, 160, 161, 164, 172, 173, 180, 182, 184, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 292, 293, 294, 296, 323, 324, 325, 334, 336, 341, 342, 344, 346, 350, 354, 356, 360, 364, 365, 369, 370, 372, 382, 385, 388], "bool": [1, 8, 9, 13, 23, 32, 37, 49, 55, 262, 265], "mem_save_mod": 1, "flag": [1, 13, 23, 32, 38, 55, 57, 59, 68, 69, 71, 72, 101, 103, 104, 111, 114, 116, 127, 128, 130, 131, 132, 133, 134, 147, 150, 160, 162, 172, 173, 176], "memori": [1, 9, 11, 13, 33, 34, 35, 37, 47, 48, 52, 56, 57, 68, 69, 83, 87, 91, 101, 116, 124, 128, 136, 150, 152, 171, 172, 174, 176, 177, 180, 181, 182, 184, 190, 191, 192, 228, 234, 249, 258, 292, 294, 331, 364, 371, 372, 373, 374, 378, 380, 382, 386], "save": [1, 9, 55, 91], "mode": [1, 9, 21, 55, 56, 65, 66, 67, 69, 70, 71, 96, 97, 98, 100, 102, 104, 106, 107, 114, 118, 119, 120, 121, 122, 123, 124, 127, 148, 149, 150, 152, 154, 155, 156, 169, 170, 171, 188, 192, 194, 331, 333, 347, 357, 358, 360, 368, 383], "get_mem_save_mod": 1, "set_mem_save_mod": 1, "result_option_id": [1, 5, 8, 21, 24, 29], "result_opt": [1, 5, 8, 21, 24, 29, 207, 208, 209, 210, 212, 225, 226, 227, 254, 255, 256, 257, 259, 270, 272, 273, 274, 283, 334], "choos": [1, 4, 5, 8, 9, 21, 24, 29, 58, 59, 71, 72, 76, 86, 91, 92, 101, 107, 128, 139, 140, 145, 184, 286, 337, 342, 368], "which": [1, 5, 8, 9, 13, 21, 24, 29, 33, 34, 35, 37, 55, 57, 58, 59, 60, 62, 63, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 86, 87, 91, 92, 93, 94, 96, 98, 101, 103, 105, 106, 107, 108, 110, 111, 113, 116, 126, 130, 131, 132, 133, 134, 141, 147, 150, 156, 158, 160, 170, 172, 173, 177, 178, 179, 180, 188, 189, 191, 193, 301, 341, 342, 354, 357, 358, 360, 365, 375, 376, 378, 379, 380, 382, 388], "should": [1, 5, 8, 21, 24, 29, 33, 34, 35, 37, 47, 48, 49, 55, 69, 92, 93, 98, 100, 106, 131, 132, 138, 139, 146, 147, 151, 162, 180, 183, 185, 269, 374, 378, 382, 388], "return": [1, 3, 4, 5, 8, 11, 13, 21, 24, 29, 33, 34, 35, 37, 40, 47, 48, 53, 55, 57, 59, 61, 64, 65, 66, 71, 72, 83, 87, 117, 118, 119, 127, 128, 129, 138, 140, 141, 147, 150, 161, 162, 173, 180, 182, 185, 187, 188, 192, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 289, 292, 293, 294, 296, 299, 304, 306, 317, 324, 325, 336, 337, 341, 344, 346, 348, 354, 369, 370, 371, 372, 374, 378, 382], "get_result_opt": [1, 5, 8, 21, 24, 29], "set_result_opt": [1, 5, 8, 21, 24, 29, 207, 208, 209, 210, 212, 225, 226, 227, 254, 255, 256, 257, 259, 270, 272, 273, 274, 283, 334], "number": [1, 3, 4, 8, 9, 11, 13, 21, 32, 37, 40, 41, 42, 45, 47, 48, 49, 51, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 116, 118, 119, 121, 122, 123, 124, 131, 132, 133, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 158, 159, 160, 161, 165, 166, 170, 171, 172, 173, 176, 180, 182, 184, 185, 186, 187, 188, 192, 193, 206, 211, 215, 216, 217, 218, 228, 236, 262, 265, 334, 336, 342, 344, 354, 364, 372, 378, 379, 381, 382, 385], "get_min_observ": 1, "set_min_observ": 1, "struct": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 45, 55, 262, 265], "parameter": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32], "entiti": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32, 55, 180, 378, 382], "alia": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 32, 40, 374], "tabl": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 38, 45, 46, 50, 53, 55, 57, 59, 63, 64, 65, 66, 67, 68, 69, 71, 72, 76, 79, 80, 82, 83, 84, 85, 86, 87, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 192, 195, 197, 198, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 289, 293, 294, 295, 296, 299, 317, 324, 325, 328, 331, 334, 336, 337, 341, 342, 348, 354, 361, 369, 370, 371, 373, 374, 382, 388], "weight": [1, 9, 21, 24, 29, 32, 58, 59, 60, 61, 62, 68, 71, 72, 73, 86, 91, 101, 103, 104, 107, 111, 133, 144, 145, 146, 195, 198, 213, 260, 261, 283, 320, 334, 342, 355, 364, 375, 376, 377, 378, 382], "n": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 29, 32, 54, 55, 57, 58, 59, 60, 62, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 91, 92, 93, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 111, 113, 115, 116, 117, 120, 124, 126, 127, 128, 129, 131, 132, 133, 134, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 160, 164, 165, 166, 169, 170, 171, 172, 173, 177, 195, 197, 198, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 288, 328, 334, 336, 337, 338, 341, 342, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 378, 382, 385], "time": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 29, 32, 55, 57, 59, 60, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 169, 170, 171, 172, 173, 177, 180, 182, 187, 193, 195, 197, 198, 338, 341, 342, 349, 350, 351, 352, 364, 378, 382, 385], "p": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 25, 28, 29, 32, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 164, 165, 169, 170, 171, 172, 173, 177, 180, 193, 195, 198, 321, 323, 334, 336, 337, 338, 341, 342, 348, 349, 350, 351, 352, 354, 355, 356, 357, 360, 361, 364, 378, 385], "where": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 24, 29, 32, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 84, 85, 86, 91, 92, 93, 98, 100, 101, 106, 107, 108, 110, 111, 115, 116, 117, 118, 119, 124, 126, 127, 128, 129, 131, 132, 133, 137, 139, 140, 141, 144, 145, 146, 150, 151, 153, 154, 159, 165, 166, 168, 171, 172, 173, 177, 180, 184, 199, 298, 336, 338, 341, 342, 344, 348, 350, 352, 354, 356, 357, 358, 360, 364, 365, 367, 382, 388], "each": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 24, 29, 32, 45, 49, 55, 57, 59, 60, 61, 62, 69, 70, 71, 72, 73, 75, 76, 86, 91, 92, 93, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 137, 139, 140, 141, 142, 145, 146, 147, 148, 150, 155, 156, 159, 161, 165, 166, 170, 172, 173, 178, 180, 181, 182, 184, 192, 193, 195, 197, 198, 288, 304, 320, 334, 336, 337, 341, 342, 344, 354, 355, 361, 364, 365, 367, 371, 374, 377, 381, 382, 386, 388], "row": [1, 3, 4, 5, 8, 13, 16, 17, 18, 19, 24, 29, 33, 36, 46, 48, 49, 57, 68, 69, 86, 97, 100, 101, 102, 106, 119, 140, 147, 148, 149, 150, 151, 177, 180, 181, 182, 184, 187, 211, 218, 258, 294, 296, 341, 342, 371, 378, 382, 385, 388], "store": [1, 3, 4, 5, 8, 16, 17, 18, 19, 24, 29, 32, 34, 37, 38, 45, 47, 48, 49, 51, 55, 57, 67, 68, 69, 79, 80, 86, 96, 97, 98, 100, 101, 104, 106, 107, 126, 127, 140, 141, 144, 150, 152, 165, 171, 172, 181, 182, 187, 192, 258, 294, 341, 354, 364, 367, 372, 373, 375, 376, 378, 379, 380, 381, 382, 388], "one": [1, 3, 4, 5, 8, 16, 17, 18, 19, 24, 29, 34, 37, 43, 44, 45, 49, 51, 55, 61, 67, 68, 71, 72, 75, 83, 87, 91, 92, 93, 96, 100, 101, 103, 104, 106, 107, 108, 110, 113, 115, 116, 127, 130, 131, 132, 133, 134, 139, 140, 141, 142, 144, 146, 147, 150, 151, 159, 166, 168, 171, 172, 173, 176, 180, 183, 184, 188, 192, 211, 258, 291, 294, 336, 338, 341, 342, 346, 348, 364, 365, 371, 372, 374, 378, 379, 380, 382], "featur": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 24, 29, 38, 46, 47, 48, 55, 57, 58, 59, 60, 61, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 86, 91, 92, 93, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 131, 132, 133, 139, 144, 145, 146, 147, 150, 161, 164, 165, 172, 173, 176, 177, 180, 181, 184, 192, 193, 200, 262, 265, 286, 288, 291, 298, 301, 310, 316, 334, 336, 337, 338, 341, 342, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 365, 367, 381, 382, 385], "vector": [1, 3, 4, 5, 8, 9, 14, 16, 17, 18, 19, 21, 24, 26, 29, 40, 45, 46, 50, 54, 55, 56, 58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 86, 88, 89, 90, 91, 92, 93, 101, 102, 103, 104, 106, 107, 108, 110, 113, 115, 116, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 147, 150, 158, 159, 160, 161, 165, 169, 170, 171, 173, 177, 180, 181, 184, 191, 193, 218, 274, 286, 288, 298, 316, 322, 330, 331, 333, 334, 336, 337, 338, 341, 342, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 367, 377, 378, 382, 383, 384, 385], "get_data": [1, 3, 4, 5, 8, 9, 21, 24, 29, 32, 37, 47, 48, 249, 274, 292, 372], "set_data": [1, 3, 4, 5, 8, 9, 21, 24, 29, 32], "A": [1, 3, 4, 8, 9, 16, 17, 18, 29, 32, 38, 49, 51, 54, 55, 57, 59, 61, 65, 67, 71, 72, 76, 82, 92, 97, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 118, 121, 122, 123, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 146, 148, 156, 159, 160, 162, 166, 168, 170, 172, 173, 176, 177, 178, 179, 180, 181, 182, 187, 195, 197, 198, 341, 342, 346, 348, 365, 367, 374, 377, 378, 379, 381, 382, 385, 386], "singl": [1, 50, 64, 65, 66, 68, 71, 82, 87, 91, 92, 101, 103, 106, 116, 117, 118, 119, 127, 130, 131, 132, 133, 134, 146, 147, 173, 187, 188, 331, 333, 371, 378, 382], "column": [1, 34, 36, 46, 47, 48, 49, 68, 69, 126, 127, 150, 151, 153, 165, 171, 177, 180, 181, 182, 184, 205, 211, 218, 253, 258, 293, 294, 341, 371, 378, 379, 380, 382, 385], "per": [1, 9, 71, 72, 73, 91, 140, 181, 214, 263, 264, 342], "get_weight": [1, 9, 29, 32], "set_weight": [1, 9, 29, 32], "core_observ": 1, "m": [1, 4, 16, 17, 18, 19, 21, 54, 55, 60, 62, 67, 71, 75, 76, 86, 91, 98, 99, 100, 102, 106, 120, 128, 129, 131, 132, 133, 134, 139, 140, 141, 145, 159, 164, 180, 184, 197, 262, 265, 336, 338, 341, 342, 349, 350, 351, 352, 354, 357, 358, 360, 361, 364, 385], "core": [1, 54, 68, 69, 70, 334, 389], "get_core_observ": 1, "set_core_observ": 1, "core_flag": 1, "1": [1, 3, 4, 8, 9, 11, 16, 17, 18, 19, 21, 24, 29, 32, 33, 34, 35, 37, 38, 45, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 98, 101, 102, 103, 105, 107, 108, 110, 111, 113, 115, 116, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 161, 164, 165, 166, 169, 172, 173, 180, 184, 193, 195, 205, 211, 213, 214, 218, 221, 222, 224, 228, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 258, 262, 263, 265, 268, 271, 274, 279, 280, 283, 292, 293, 294, 296, 334, 336, 337, 338, 341, 342, 344, 346, 350, 352, 354, 355, 356, 357, 358, 360, 361, 364, 369, 370, 372, 382, 385, 388, 389], "y_i": [1, 3, 58, 59, 60, 62, 71, 72, 73, 76, 77, 91, 92, 101, 102, 116, 131, 132, 133, 159, 172, 173, 336, 342, 349, 351, 354, 356, 364, 385], "assign": [1, 3, 37, 45, 49, 68, 69, 70, 86, 91, 101, 103, 104, 107, 158, 160, 180, 181, 334, 336, 372, 381, 382], "sampl": [1, 3, 4, 9, 17, 54, 67, 71, 72, 73, 77, 91, 101, 105, 106, 107, 111, 120, 133, 137, 140, 142, 201, 262, 265, 310, 341, 342, 344, 350, 361, 365, 374, 382], "x_i": [1, 3, 58, 59, 60, 62, 70, 71, 72, 73, 75, 76, 77, 79, 86, 91, 92, 93, 96, 101, 102, 107, 108, 110, 113, 115, 116, 124, 131, 132, 133, 139, 145, 159, 164, 172, 173, 336, 342, 349, 350, 351, 352, 354, 364, 385], "get_core_flag": 1, "set_core_flag": 1, "cluster_count": [1, 3, 4, 219, 266], "found": [1, 68, 69, 75, 180, 388], "get_cluster_count": [1, 3, 4, 212, 259, 289, 336], "set_cluster_count": [1, 3, 4, 53, 219, 220, 266, 267, 287, 289, 324, 325, 336, 337], "respons": [1, 3, 9, 21, 24, 32, 37, 47, 48, 62, 71, 72, 73, 74, 75, 76, 77, 91, 92, 93, 94, 108, 110, 113, 114, 115, 116, 133, 159, 178, 183, 185, 198, 212, 220, 221, 222, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 262, 265, 267, 268, 269, 272, 273, 274, 280, 283, 334, 342, 364, 374, 382, 385], "get_respons": [1, 3, 9, 21, 24, 32, 212, 213, 214, 220, 221, 222, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 274, 280, 283, 334], "set_respons": [1, 3, 9, 21, 24, 32], "option": [1, 5, 8, 29, 38, 55, 59, 68, 71, 75, 76, 77, 101, 103, 111, 116, 127, 137, 140, 141, 147, 151, 162, 172, 173, 180, 181, 192, 195, 198, 373, 382], "indic": [1, 5, 8, 21, 24, 29, 32, 34, 38, 43, 44, 45, 47, 49, 51, 55, 62, 67, 68, 69, 71, 86, 92, 93, 98, 100, 101, 103, 104, 111, 114, 116, 128, 131, 132, 133, 134, 137, 138, 140, 141, 142, 144, 145, 146, 172, 173, 180, 211, 223, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 258, 270, 280, 294, 342, 372, 381, 382, 387], "default_result_opt": [1, 5, 8, 24], "core_observation_indic": 1, "get_core_observation_indic": 1, "set_core_observation_indic": 1, "desc": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 227], "precondit": [1, 3, 4, 5, 8, 9, 16, 17, 18, 19, 21, 24, 29, 32, 33, 35, 37, 49], "has_data": [1, 3, 4, 8, 17, 19, 21, 24, 49], "true": [1, 3, 4, 8, 9, 13, 17, 19, 21, 23, 24, 32, 37, 55, 57, 68, 71, 72, 73, 75, 76, 77, 91, 92, 93, 103, 104, 106, 111, 113, 114, 116, 127, 131, 132, 133, 139, 147, 158, 160, 172, 185, 221, 222, 225, 226, 227, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 262, 265, 268, 269, 272, 273, 274, 275, 276, 277, 278, 280, 292, 299, 341, 365, 372, 375, 376, 378, 379, 380, 381, 388], "row_count": [1, 3, 4, 8, 9, 17, 19, 21, 24, 32, 33, 34, 35, 47, 48, 205, 211, 218, 228, 253, 258, 293, 294, 296, 369, 370, 381, 382, 388], "column_count": [1, 3, 4, 8, 9, 17, 19, 21, 24, 32, 33, 34, 35, 47, 48, 205, 211, 218, 253, 258, 293, 294, 296, 369, 370, 381, 388], "void": [1, 9, 29, 33, 35, 37, 47, 48, 55, 180, 218, 219, 225, 226, 229, 230, 231, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 292, 328, 334, 361, 372, 382], "run_comput": [1, 4, 29, 283, 287, 328, 334, 337, 361], "max_observ": [1, 283, 334], "5": [1, 8, 9, 21, 32, 33, 34, 35, 54, 55, 71, 77, 91, 95, 97, 105, 111, 142, 164, 205, 211, 213, 218, 220, 221, 222, 228, 229, 230, 231, 237, 238, 239, 240, 241, 242, 253, 258, 260, 261, 262, 264, 267, 268, 269, 274, 275, 276, 277, 278, 283, 293, 294, 296, 299, 317, 334, 341, 344, 346, 354, 369, 370], "dbscan_desc": [1, 212, 259, 283, 334], "kmean": [1, 3, 4, 53, 219, 220, 266, 267, 283, 289, 324, 325, 334, 336], "print_tabl": [1, 3, 4, 8, 21, 53, 283, 287, 289, 299, 317, 324, 325, 334, 336, 337, 341, 354], "batch": [1, 3, 4, 8, 11, 13, 21, 29, 32, 54, 55, 67, 70, 83, 98, 100, 104, 107, 112, 120, 124, 128, 131, 132, 133, 134, 137, 139, 140, 141, 152, 154, 167, 171, 177, 194, 281, 284, 285, 290, 297, 300, 302, 303, 305, 307, 309, 311, 313, 315, 318, 326, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 353, 354, 355, 361, 362, 363, 364, 378, 382, 384], "process": [1, 3, 4, 8, 11, 13, 21, 29, 32, 38, 45, 50, 54, 55, 67, 70, 75, 98, 107, 109, 112, 113, 120, 124, 131, 132, 140, 141, 142, 154, 167, 177, 180, 181, 187, 188, 192, 194, 200, 218, 281, 284, 285, 290, 297, 300, 302, 303, 305, 307, 309, 311, 313, 315, 318, 326, 329, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 353, 354, 355, 361, 362, 363, 364, 365, 373, 378, 382, 386, 387], "dbscan_brute_force_batch": [1, 201, 202, 250, 281, 334, 335], "cpp": [1, 3, 4, 8, 11, 13, 21, 29, 32, 55, 57, 58, 59, 60, 62, 63, 67, 70, 72, 73, 76, 77, 79, 80, 86, 92, 93, 98, 101, 102, 107, 111, 113, 114, 116, 120, 124, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 150, 151, 153, 154, 158, 159, 160, 161, 164, 165, 166, 168, 171, 172, 173, 201, 202, 250, 281, 284, 285, 290, 297, 300, 302, 303, 305, 307, 309, 311, 313, 315, 318, 326, 329, 331, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 353, 354, 355, 361, 362, 363, 364, 368, 388], "chapter": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 56, 109, 112, 166, 335, 345], "describ": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 41, 42, 45, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 83, 86, 87, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 138, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 172, 173, 176, 180, 184, 187, 195, 197, 198, 335, 341, 345, 348, 354, 374, 377, 378, 379, 381, 382], "program": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 36, 39, 46, 52, 199, 282, 286, 288, 291, 298, 301, 304, 306, 308, 310, 312, 314, 316, 320, 327, 330, 331, 333, 347, 371, 374, 378, 382], "interfac": [2, 6, 7, 10, 12, 15, 20, 22, 27, 30, 31, 36, 39, 46, 52, 55, 57, 61, 74, 83, 101, 102, 107, 116, 129, 136, 150, 172, 177, 178, 179, 180, 183, 185, 187, 191, 192, 199, 282, 286, 288, 291, 298, 301, 304, 306, 308, 310, 312, 314, 316, 320, 327, 330, 347, 371, 374, 378, 382, 384, 389], "dbscan": [2, 14, 70, 212, 259, 282, 283, 335, 347, 383, 384], "k": [2, 14, 16, 17, 19, 20, 32, 37, 54, 55, 56, 58, 59, 60, 62, 67, 79, 80, 86, 91, 92, 98, 102, 108, 110, 111, 113, 114, 115, 116, 124, 128, 129, 131, 132, 134, 136, 140, 142, 153, 159, 160, 161, 164, 172, 173, 174, 191, 198, 286, 288, 316, 331, 333, 335, 338, 341, 344, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 360, 364, 366, 382, 383, 384], "mean": [2, 5, 8, 9, 14, 29, 54, 55, 56, 64, 65, 66, 67, 71, 72, 73, 75, 76, 77, 83, 84, 86, 87, 92, 93, 101, 108, 110, 117, 118, 119, 120, 127, 129, 136, 144, 145, 146, 147, 150, 151, 159, 174, 177, 185, 203, 204, 207, 208, 210, 251, 252, 254, 255, 257, 286, 288, 291, 299, 327, 328, 331, 335, 338, 341, 342, 344, 346, 347, 361, 365, 378, 382, 383, 384], "initi": [2, 3, 11, 13, 14, 37, 47, 48, 49, 58, 59, 60, 65, 66, 69, 71, 83, 87, 88, 89, 90, 91, 96, 97, 103, 104, 113, 114, 116, 118, 119, 122, 141, 144, 145, 146, 148, 149, 156, 170, 172, 180, 181, 192, 193, 197, 200, 286, 335, 336, 341, 342, 347, 354, 378, 388], "partit": [3, 4, 11, 71, 75, 91, 100, 101, 107, 286, 288, 336, 337, 342, 354, 365, 367], "minim": [3, 9, 24, 54, 55, 57, 62, 71, 73, 91, 93, 98, 101, 107, 108, 110, 115, 116, 128, 131, 132, 136, 191, 288, 320, 336, 342, 355, 364], "criterion": [3, 60, 62, 71, 75, 76, 91, 145, 166, 288, 336, 342], "character": [3, 55, 67, 107, 177, 178, 191, 288, 336], "repres": [3, 5, 17, 37, 38, 41, 45, 49, 57, 63, 65, 66, 71, 74, 75, 79, 80, 83, 86, 87, 91, 94, 98, 102, 104, 106, 107, 114, 118, 119, 122, 123, 128, 129, 133, 136, 137, 138, 140, 141, 148, 149, 150, 153, 155, 156, 161, 162, 164, 169, 170, 176, 177, 178, 182, 183, 184, 288, 291, 310, 336, 338, 342, 350, 365, 372, 373, 374, 381], "call": [3, 8, 37, 47, 48, 53, 55, 57, 60, 62, 70, 71, 72, 82, 92, 93, 104, 106, 107, 113, 116, 134, 150, 152, 171, 172, 176, 180, 182, 185, 187, 188, 189, 192, 193, 262, 265, 288, 298, 336, 341, 342, 346, 364, 368, 372, 374, 382], "centroid": [3, 4, 53, 103, 104, 105, 106, 220, 267, 286, 287, 288, 289, 324, 325, 336, 337], "lloyd": [3, 54, 103, 104, 107, 288], "": [3, 54, 57, 58, 59, 60, 69, 71, 73, 91, 103, 104, 107, 120, 128, 131, 132, 140, 142, 145, 152, 162, 180, 200, 274, 288, 341, 342, 348, 361, 364, 372, 378, 382, 386], "train_input": [3, 8, 9, 21, 32, 288, 298, 301, 316, 330, 336, 341, 342, 354, 364], "train_result": [3, 8, 9, 21, 32, 221, 222, 223, 225, 270, 272, 274, 288, 298, 301, 316, 330, 336, 341, 342, 354, 364, 388], "infer_input": [3, 8, 9, 21, 32, 288, 298, 301, 316, 330, 336, 341, 342, 354, 364], "infer_result": [3, 8, 9, 21, 32, 288, 298, 301, 316, 330, 336, 341, 342, 354, 364], "comput": [3, 8, 9, 21, 23, 25, 26, 28, 32, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 72, 73, 76, 77, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 105, 106, 109, 112, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 135, 136, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 181, 183, 185, 187, 190, 191, 192, 194, 195, 203, 206, 207, 209, 212, 217, 218, 219, 224, 227, 228, 232, 233, 234, 235, 249, 251, 254, 256, 259, 266, 271, 279, 282, 286, 288, 291, 298, 301, 304, 306, 308, 310, 312, 314, 316, 319, 320, 321, 322, 323, 327, 330, 331, 333, 336, 341, 342, 354, 364, 378, 383], "lloyd_dens": 3, "2": [3, 4, 9, 28, 32, 33, 34, 35, 37, 54, 55, 57, 59, 60, 61, 66, 68, 71, 72, 73, 76, 77, 79, 80, 84, 86, 87, 89, 91, 93, 98, 101, 102, 107, 108, 110, 113, 115, 116, 119, 120, 123, 129, 130, 131, 132, 133, 137, 140, 142, 145, 149, 155, 158, 159, 160, 165, 166, 169, 172, 173, 180, 184, 189, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 323, 336, 337, 342, 344, 346, 350, 351, 356, 358, 360, 361, 364, 368, 369, 370, 372, 385, 388], "max_iteration_count": [3, 32, 219, 266], "maximum": [3, 13, 29, 32, 54, 55, 68, 69, 75, 76, 77, 86, 101, 117, 118, 119, 120, 126, 136, 138, 140, 181, 203, 204, 251, 252, 327, 328, 361], "iter": [3, 24, 32, 45, 54, 55, 58, 59, 60, 61, 62, 69, 86, 91, 92, 93, 95, 97, 103, 106, 107, 108, 110, 111, 113, 116, 135, 136, 137, 139, 140, 141, 142, 145, 172, 173, 174, 219, 220, 266, 267, 274, 320, 336, 354, 355, 364, 382], "t": [3, 9, 21, 32, 33, 34, 35, 37, 54, 55, 57, 58, 59, 60, 63, 71, 72, 73, 86, 91, 97, 98, 100, 102, 128, 131, 137, 139, 140, 141, 142, 145, 150, 151, 159, 171, 172, 249, 293, 296, 336, 341, 342, 349, 350, 352, 364, 369, 370, 378], "100": [3, 9, 58, 59, 60, 62, 71, 138, 140, 173, 214, 239, 240, 241, 242, 243, 244, 247, 248, 280, 382], "get_max_iteration_count": [3, 32], "set_max_iteration_count": [3, 32, 53, 219, 220, 228, 239, 240, 245, 246, 247, 248, 266, 267, 280, 289, 324, 325, 336], "accuracy_threshold": [3, 32, 219, 266], "threshold": [3, 9, 32, 60, 62, 71, 75, 86, 95, 97, 98, 101, 103, 144, 145, 146, 159, 219, 266, 342], "varepsilon": [3, 32, 60, 137, 336], "stop": [3, 9, 32, 71, 91, 101, 128, 130, 145, 185, 336, 342], "condit": [3, 32, 55, 57, 60, 86, 88, 89, 90, 101, 116, 159, 164, 172, 187, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 336, 354, 382], "get_accuracy_threshold": [3, 32], "set_accuracy_threshold": [3, 32, 53, 219, 220, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 266, 267, 280, 289, 324, 325, 336], "denot": [3, 4, 5, 8, 9, 11, 13, 21, 24, 29, 32, 72, 75, 92, 93, 98, 336, 346, 365, 385], "public": [3, 8, 9, 11, 13, 21, 24, 32, 33, 34, 35, 37, 38, 43, 44, 47, 48, 49, 54, 55, 180, 192, 374], "get_centroid": [3, 4, 53, 219, 220, 266, 267, 287, 289, 324, 325, 336, 337], "set_centroid": [3, 4], "initial_centroid": [3, 53, 220, 267, 289, 324, 325, 336], "get_initial_centroid": 3, "set_initial_centroid": 3, "objective_function_valu": 3, "object": [3, 14, 23, 33, 34, 35, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 83, 86, 87, 91, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 177, 179, 180, 181, 182, 184, 187, 192, 195, 197, 198, 219, 220, 266, 267, 289, 319, 320, 324, 325, 331, 333, 336, 347, 356, 372, 373, 374, 381, 382, 387], "phi_x": [3, 106], "get_objective_function_valu": [3, 53, 219, 220, 266, 267, 289, 324, 325, 336], "set_objective_function_valu": 3, "get_model": [3, 8, 9, 21, 32, 53, 213, 214, 220, 221, 222, 223, 225, 226, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 289, 299, 317, 324, 325, 336, 341, 354, 388], "set_model": [3, 8, 9, 21, 32], "label": [3, 8, 9, 11, 13, 21, 24, 32, 58, 59, 60, 61, 62, 72, 75, 76, 92, 93, 101, 116, 122, 123, 124, 131, 132, 158, 160, 166, 172, 173, 184, 195, 206, 227, 228, 289, 299, 304, 317, 336, 341, 342, 344, 354, 355, 356, 382], "leq": [3, 60, 71, 82, 85, 91, 106, 128, 129, 131, 132, 133, 134, 139, 140, 150, 151, 161, 164, 172, 336, 341, 350, 352, 354, 356, 357, 358, 360, 364], "get_label": [3, 9, 11, 21, 32, 206, 228, 289, 317, 336, 354], "set_label": [3, 9, 11, 21, 32], "iteration_count": 3, "perform": [3, 9, 37, 47, 48, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 75, 76, 77, 84, 85, 88, 89, 90, 95, 96, 97, 99, 100, 101, 102, 104, 106, 114, 117, 118, 119, 121, 122, 123, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 146, 148, 153, 155, 156, 158, 159, 160, 162, 164, 166, 168, 169, 170, 177, 180, 181, 183, 186, 188, 189, 199, 336, 342, 354, 364, 365, 371, 374, 378, 381, 382, 388, 389], "get_iteration_count": [3, 219, 220, 266, 267], "set_iteration_count": 3, "postcondit": [3, 4, 8, 17, 19, 21, 24, 37], "trained_model": [3, 8, 9, 32], "defin": [3, 36, 37, 40, 45, 47, 48, 53, 57, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 86, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 113, 116, 117, 118, 119, 126, 127, 130, 132, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 164, 169, 170, 172, 173, 177, 180, 182, 183, 185, 192, 193, 195, 197, 198, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 324, 325, 336, 341, 342, 344, 346, 354, 357, 358, 360, 364, 367, 371, 372, 374, 375, 376, 377, 378, 381, 382], "correspond": [3, 9, 47, 55, 57, 61, 71, 74, 75, 91, 92, 94, 96, 97, 100, 101, 114, 122, 137, 151, 172, 173, 176, 177, 178, 180, 181, 184, 195, 342, 346, 354, 364, 365, 367, 379, 382], "run_train": [3, 8, 21, 53, 289, 299, 317, 324, 325, 336, 341, 354], "kmeans_desc": [3, 4, 53, 219, 220, 266, 267, 287, 289, 324, 325, 336, 337], "10": [3, 4, 21, 53, 54, 55, 62, 86, 95, 96, 97, 99, 100, 116, 140, 204, 205, 208, 210, 213, 226, 230, 236, 252, 253, 255, 257, 260, 261, 264, 273, 276, 287, 289, 317, 324, 325, 336, 337, 344, 354, 356, 389], "50": [3, 53, 91, 289, 324, 325, 336], "1e": [3, 32, 53, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 274, 280, 289, 324, 325, 336], "4": [3, 33, 34, 35, 37, 53, 54, 180, 205, 211, 218, 228, 237, 253, 258, 274, 289, 292, 293, 294, 296, 324, 325, 336, 344, 346, 369, 370, 372], "print_valu": [3, 53, 289, 324, 325, 336], "run_infer": [3, 8, 21, 289, 299, 317, 336, 341, 354], "new_data": [3, 8, 21, 289, 299, 317, 336, 341, 354], "kmeans_lloyd_dense_batch": [3, 107, 201, 202, 250, 284, 335, 336], "receiv": [4, 11, 13, 59, 60, 161, 286, 304, 306, 337, 344, 346, 387], "after": [4, 9, 69, 71, 72, 75, 82, 86, 92, 93, 104, 113, 116, 127, 128, 135, 141, 172, 182, 192, 269, 286, 337, 378, 382], "dens": [4, 5, 9, 16, 17, 18, 19, 25, 26, 28, 29, 47, 72, 73, 76, 77, 92, 93, 101, 111, 116, 181, 183, 211, 214, 219, 258, 266, 286, 287, 291, 301, 308, 310, 312, 314, 321, 322, 323, 327, 355, 356, 378, 380, 381], "random": [4, 5, 9, 54, 61, 74, 77, 82, 83, 84, 85, 86, 87, 89, 91, 98, 99, 100, 101, 105, 107, 113, 116, 137, 139, 140, 141, 142, 164, 172, 261, 264, 286, 291, 301, 337, 338, 342], "parallel": [4, 54, 71, 87, 105, 106, 107, 144, 150, 152, 171, 185, 188, 218, 286, 337, 346, 382], "kmeans_init": [4, 219, 266, 287, 337], "init": [4, 55, 97, 388], "seed": [4, 9, 54, 71, 87, 88, 89, 90], "none": [4, 9, 21, 32, 38, 51, 55, 71, 76, 77, 147, 166, 168], "detail": [4, 9, 21, 29, 32, 33, 35, 37, 55, 65, 66, 68, 69, 74, 79, 80, 83, 87, 94, 96, 97, 99, 100, 104, 105, 106, 109, 112, 114, 117, 118, 119, 122, 123, 126, 129, 130, 134, 135, 138, 142, 147, 148, 149, 153, 155, 156, 165, 166, 168, 170, 180, 181, 182, 187, 195, 197, 198, 253, 258, 301, 331, 333, 342, 344, 346, 354, 382, 388], "v1": 4, "enable_if_not_default_dens": 4, "get_se": [4, 9], "set_se": [4, 9], "local_trials_count": 4, "attempt": [4, 55], "find": [4, 9, 21, 32, 55, 56, 60, 71, 72, 73, 75, 76, 86, 91, 92, 93, 101, 107, 136, 152, 183, 316, 336, 337, 341, 342, 344, 346, 354, 382, 388], "best": [4, 9, 55, 57, 63, 67, 75, 76, 79, 80, 82, 86, 91, 98, 107, 111, 124, 144, 150, 152, 171, 172], "term": [4, 9, 86, 91, 108, 110, 116, 124, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 172, 180], "potenti": [4, 383], "If": [4, 8, 9, 13, 33, 34, 35, 45, 47, 48, 49, 51, 55, 57, 63, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 86, 91, 98, 101, 107, 111, 113, 116, 124, 127, 128, 130, 131, 132, 133, 137, 139, 140, 141, 142, 144, 146, 147, 150, 151, 153, 161, 165, 172, 173, 182, 185, 187, 189, 192, 193, 336, 342, 348, 365, 372, 385], "equal": [4, 9, 25, 37, 45, 47, 48, 49, 51, 55, 57, 59, 68, 69, 71, 75, 82, 101, 102, 106, 107, 111, 114, 133, 137, 139, 140, 142, 144, 151, 159, 161, 165, 172, 173, 180, 182, 184, 211, 292, 321, 337, 342, 354, 357, 372, 382], "trial": [4, 82], "int": [4, 33, 34, 35, 37, 57, 84, 86, 107, 124, 156, 170, 187, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 369, 370, 372], "log": [4, 59, 76, 86, 107, 116, 124, 129, 131, 356, 388], "enable_if_plus_plus_dens": 4, "get_local_trials_count": 4, "set_local_trials_count": 4, "local_tri": 4, "expr": 4, "parallel_plus_dens": [4, 219], "plus_plus_dens": [4, 219, 266], "random_dens": [4, 219, 266], "obtain": [4, 5, 33, 34, 35, 71, 103, 104, 126, 161, 163, 173, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 291, 338, 342, 371, 378, 388], "kmeans_init_dens": [4, 107, 201, 202, 250, 285, 335, 337], "In": [5, 33, 34, 35, 54, 55, 59, 61, 65, 69, 71, 72, 73, 76, 83, 87, 92, 93, 96, 97, 100, 101, 102, 104, 106, 107, 108, 110, 111, 114, 116, 118, 122, 124, 125, 127, 129, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 152, 153, 154, 156, 162, 163, 164, 165, 170, 171, 172, 173, 177, 180, 181, 182, 184, 185, 187, 192, 193, 291, 336, 338, 341, 342, 364, 368, 374, 378, 382, 385, 386, 387, 388], "statist": [5, 14, 16, 17, 18, 19, 24, 50, 54, 64, 65, 66, 67, 116, 117, 118, 119, 120, 127, 159, 162, 177, 180, 181, 291, 327, 331, 333, 338, 347, 378, 383, 384], "correl": [5, 8, 55, 56, 81, 108, 147, 150, 174, 181, 231, 291, 298, 331, 338, 341], "two": [5, 9, 26, 51, 55, 57, 59, 60, 70, 71, 72, 75, 91, 92, 93, 97, 98, 101, 106, 114, 116, 122, 125, 127, 131, 132, 145, 148, 150, 158, 166, 168, 172, 173, 178, 180, 184, 191, 200, 291, 322, 331, 334, 338, 341, 342, 346, 358, 365, 367, 372, 374, 382, 385, 388], "most": [5, 28, 55, 57, 67, 75, 107, 115, 124, 184, 192, 200, 291, 323, 338, 354, 360, 365, 388], "fundament": [5, 291, 338], "measur": [5, 26, 54, 55, 61, 67, 71, 72, 81, 98, 103, 104, 107, 120, 164, 177, 291, 322, 338, 342, 358], "linear": [5, 14, 15, 17, 32, 54, 56, 63, 67, 86, 108, 110, 115, 116, 152, 157, 162, 171, 172, 191, 291, 308, 310, 330, 331, 338, 341, 347, 348, 350, 364, 382, 383, 384], "depend": [5, 37, 55, 67, 71, 72, 73, 75, 77, 86, 92, 93, 105, 107, 108, 110, 111, 113, 114, 115, 127, 131, 132, 133, 140, 142, 144, 147, 148, 149, 150, 159, 172, 178, 180, 181, 183, 188, 195, 197, 198, 291, 338, 341, 342, 365, 368, 382, 385, 388], "between": [5, 9, 26, 38, 56, 57, 67, 68, 69, 71, 73, 75, 79, 80, 81, 97, 101, 103, 104, 107, 108, 110, 111, 113, 116, 124, 140, 144, 150, 152, 171, 172, 179, 182, 183, 184, 291, 322, 338, 346, 354, 358, 364, 372, 382], "variabl": [5, 9, 57, 67, 73, 75, 77, 86, 93, 108, 110, 111, 113, 114, 115, 116, 131, 132, 133, 136, 150, 159, 164, 166, 168, 178, 198, 213, 214, 260, 261, 263, 264, 291, 338, 354, 365, 368, 382, 388], "joint": [5, 54, 291, 338], "ani": [5, 37, 40, 55, 57, 59, 63, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 79, 80, 83, 86, 87, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 172, 173, 184, 187, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 291, 336, 338, 341, 349, 350, 351, 352, 357, 358, 360, 372, 382], "dimensionless": [5, 291, 338], "while": [5, 9, 55, 57, 64, 65, 66, 67, 75, 86, 101, 106, 117, 118, 119, 173, 180, 181, 182, 191, 192, 193, 291, 338, 346, 373, 382], "unit": [5, 127, 150, 188, 291, 338], "multipli": [5, 32, 59, 291, 338, 382], "anoth": [5, 37, 43, 44, 45, 49, 55, 87, 107, 182, 291, 338, 348, 372, 378, 382], "import": [5, 9, 57, 67, 166, 168, 177, 213, 214, 260, 261, 263, 264, 291, 338, 341, 388], "distinct": [5, 102, 177, 291, 338], "affect": [5, 291, 338, 378], "higher": [5, 9, 55, 71, 91, 102, 291, 338, 389], "varianc": [5, 8, 29, 56, 71, 86, 101, 117, 118, 119, 120, 127, 144, 147, 148, 149, 150, 151, 159, 161, 174, 181, 203, 204, 251, 252, 291, 298, 299, 327, 328, 331, 338, 341, 342, 361, 378], "correal": [5, 291, 338], "remov": [5, 55, 71, 175, 187, 291, 338, 341], "effect": [5, 55, 110, 177, 183, 291, 338], "normal": [5, 56, 58, 59, 60, 67, 72, 83, 113, 114, 126, 127, 147, 150, 151, 174, 177, 180, 291, 331, 338, 378], "squar": [5, 29, 54, 56, 62, 71, 73, 75, 77, 93, 101, 108, 110, 115, 117, 118, 119, 120, 129, 136, 137, 145, 148, 149, 152, 159, 174, 181, 191, 203, 204, 251, 252, 291, 327, 328, 331, 336, 338, 342, 361], "root": [5, 71, 75, 101, 137, 159, 166, 168, 291, 338, 342, 365, 367], "Their": [5, 291, 338], "usag": [5, 36, 39, 46, 52, 56, 58, 59, 60, 62, 71, 73, 76, 77, 91, 95, 101, 111, 114, 121, 123, 166, 168, 177, 180, 191, 192, 291, 331, 338, 371, 374, 378, 387, 388], "follow": [5, 29, 37, 40, 45, 51, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 291, 327, 336, 337, 338, 341, 342, 344, 348, 354, 356, 361, 364, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 388], "get_mean": [5, 8, 29, 203, 204, 207, 208, 251, 252, 254, 255, 299, 328, 341, 361], "set_mean": [5, 8, 29], "cov_matrix": [5, 209, 210, 256, 257], "matrix": [5, 24, 32, 56, 63, 64, 65, 66, 67, 86, 97, 98, 102, 108, 110, 111, 113, 115, 126, 127, 130, 131, 133, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 165, 169, 170, 171, 172, 174, 181, 182, 183, 184, 218, 231, 331, 338, 341, 347, 364, 375, 376, 379, 382, 385], "get_cov_matrix": [5, 209, 210, 256, 257], "set_cov_matrix": 5, "cor_matrix": [5, 207, 208, 254, 255], "get_cor_matrix": [5, 207, 208, 254, 255], "set_cor_matrix": 5, "is_empti": [5, 9, 16, 17, 18, 19, 29, 32], "fals": [5, 9, 16, 17, 18, 19, 29, 32, 37, 55, 68, 69, 71, 72, 75, 76, 77, 91, 92, 93, 104, 106, 113, 116, 131, 132, 138, 139, 147, 158, 159, 160, 236, 292, 365, 372, 381], "princip": [7, 14, 56, 157, 162, 174, 181, 298, 331, 340, 347, 383, 384, 388], "compon": [7, 12, 14, 53, 56, 61, 86, 100, 111, 127, 130, 131, 134, 139, 157, 162, 173, 174, 178, 181, 183, 184, 186, 190, 200, 206, 298, 304, 331, 340, 345, 347, 382, 383, 384, 388], "analysi": [7, 14, 16, 54, 56, 57, 102, 107, 157, 162, 181, 191, 298, 308, 331, 340, 347, 349, 383, 384, 388], "pca": [7, 14, 147, 148, 149, 150, 151, 161, 229, 230, 231, 275, 276, 277, 278, 298, 299, 340, 347, 383, 384, 388], "exploratori": [8, 150, 298, 341], "dimension": [8, 54, 70, 71, 86, 91, 92, 93, 102, 107, 116, 131, 132, 150, 171, 298, 334, 336, 337, 341, 348, 354, 361, 382, 385, 388], "reduct": [8, 51, 71, 86, 91, 150, 171, 298, 341, 342, 382], "transform": [8, 56, 83, 125, 128, 137, 139, 141, 142, 150, 174, 177, 180, 199, 229, 230, 231, 275, 276, 277, 278, 298, 331, 341, 348, 373, 374, 378, 382], "possibli": [8, 55, 150, 298, 341], "uncorrel": [8, 150, 298, 341], "direct": [8, 33, 34, 35, 40, 45, 46, 55, 91, 150, 298, 341, 377, 378, 382], "largest": [8, 101, 104, 150, 161, 173, 298, 341, 344], "mostli": [8, 150, 152, 171, 298, 341], "spread": [8, 150, 298, 341], "out": [8, 9, 45, 47, 48, 49, 51, 55, 150, 159, 177, 180, 184, 262, 265, 274, 298, 341, 372, 378], "covari": [8, 14, 50, 56, 86, 144, 145, 147, 148, 149, 150, 159, 174, 181, 207, 208, 209, 210, 229, 230, 231, 254, 255, 256, 257, 291, 298, 331, 333, 347, 378, 383, 384], "svd": [8, 55, 147, 150, 169, 170, 171, 229, 230, 298], "cov": [8, 67, 209, 210, 229, 230, 256, 257, 338], "dim_reduct": [8, 277, 278], "component_count": [8, 11], "determinist": 8, "whether": [8, 37, 49, 55, 111, 133, 138, 162, 169, 170, 176, 180, 181, 182, 187, 193, 346, 382], "appli": [8, 38, 54, 55, 71, 86, 91, 107, 116, 121, 122, 123, 127, 147, 151, 165, 180, 182, 336, 341, 342, 364, 382], "sign": [8, 54, 58, 82, 147, 150, 172, 364, 385], "flip": [8, 147, 150], "techniqu": [8, 9, 32, 54, 55, 63, 71, 74, 86, 94, 125, 147, 150, 152, 171, 172, 177, 179, 180, 301, 342, 364, 382], "eigenvector": [8, 147, 148, 149, 150, 151, 152, 229, 230, 231, 275, 277, 278, 299, 341, 388], "must": [8, 55, 70, 75, 105, 106, 155, 156, 161, 172, 180, 181, 189, 193, 388], "get_determinist": 8, "set_determinist": [8, 229, 230, 231, 275, 276, 277, 278, 299, 341, 388], "r": [8, 54, 58, 59, 60, 61, 62, 71, 75, 77, 82, 84, 85, 86, 91, 98, 100, 128, 129, 131, 132, 133, 134, 139, 141, 145, 152, 153, 154, 159, 172, 200, 218, 341, 342, 348, 349, 350, 351, 352, 354, 364, 365, 383, 385, 388], "zero": [8, 26, 37, 45, 47, 48, 49, 51, 57, 66, 71, 76, 77, 86, 103, 119, 127, 140, 144, 145, 146, 147, 149, 150, 151, 153, 159, 161, 172, 181, 182, 184, 322, 342, 358, 364, 372, 379, 382], "get_component_count": [8, 11, 206, 299, 341], "set_component_count": [8, 11, 229, 230, 231, 275, 276, 277, 278, 299, 341, 388], "precomput": [8, 129, 136, 150, 174, 192, 231, 277, 278, 341], "contain": [8, 9, 13, 24, 32, 33, 34, 35, 37, 38, 40, 45, 49, 53, 55, 57, 59, 65, 66, 68, 69, 71, 72, 73, 75, 86, 92, 93, 96, 97, 100, 101, 104, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 130, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 156, 158, 159, 160, 161, 164, 165, 166, 170, 172, 173, 179, 180, 184, 187, 192, 195, 341, 342, 346, 368, 372, 377, 378, 379, 381, 382], "get_eigenvector": [8, 229, 230, 231, 275, 277, 278, 299, 341, 388], "set_eigenvector": 8, "first": [8, 9, 32, 33, 37, 38, 51, 53, 54, 55, 65, 69, 75, 96, 97, 104, 105, 106, 107, 108, 110, 113, 114, 116, 118, 119, 122, 139, 140, 141, 148, 156, 170, 172, 180, 184, 211, 215, 216, 293, 337, 341, 369, 378, 379, 382, 387], "get_vari": [8, 29, 203, 204, 251, 252, 299, 328, 341, 361], "set_vari": [8, 29], "eigenvalu": [8, 147, 148, 149, 150, 151, 152, 161, 229, 230, 231, 275, 277, 278, 299, 341], "get_eigenvalu": [8, 229, 230, 231, 275, 277, 278, 299, 341], "set_eigenvalu": 8, "dataset": [8, 9, 21, 29, 32, 38, 54, 61, 71, 72, 73, 75, 77, 98, 101, 107, 183, 274, 327, 338, 341, 342, 355, 356, 361, 364, 373, 382, 385, 387], "x": [8, 9, 11, 13, 16, 17, 18, 19, 21, 32, 55, 57, 59, 60, 62, 63, 67, 70, 71, 72, 73, 82, 84, 85, 86, 91, 92, 93, 97, 98, 102, 107, 108, 110, 113, 115, 116, 120, 124, 126, 127, 129, 131, 132, 133, 139, 141, 142, 144, 145, 146, 150, 151, 153, 154, 155, 158, 159, 160, 164, 165, 169, 171, 172, 200, 224, 232, 233, 235, 271, 279, 334, 336, 337, 338, 341, 342, 348, 349, 350, 351, 352, 354, 355, 356, 361, 364, 385, 389], "transformed_data": 8, "project": [8, 54, 129, 130, 131, 132, 133, 134, 151, 200, 368], "get_transformed_data": [8, 229, 230, 231, 275, 276, 277, 278, 299, 341, 388], "set_transformed_data": 8, "pca_desc": [8, 229, 230, 231, 275, 276, 277, 278, 299, 341, 388], "pca_cor_dense_batch": [8, 150, 201, 250, 297, 340, 341], "pca_dense_batch": [8, 150, 201, 202, 297, 340, 341], "ensembl": [9, 14, 50, 61, 74, 75, 91, 92, 93, 94, 301, 331, 333, 342, 347, 365], "tree": [9, 21, 54, 56, 72, 73, 74, 166, 168, 185, 191, 262, 265, 301, 316, 331, 333, 366, 383, 384], "structur": [9, 37, 45, 54, 55, 72, 74, 75, 91, 92, 93, 101, 107, 176, 177, 179, 180, 181, 182, 183, 184, 186, 191, 192, 301, 342, 365, 372, 378, 382], "classifi": [9, 14, 31, 54, 56, 61, 71, 72, 74, 75, 76, 92, 116, 125, 158, 160, 166, 191, 301, 331, 342, 347, 363, 365, 383, 384], "known": [9, 55, 71, 72, 74, 75, 144, 146, 182, 301, 342, 354, 365], "built": [9, 71, 74, 75, 301, 342], "gener": [9, 32, 54, 57, 58, 59, 60, 62, 65, 66, 68, 69, 72, 73, 74, 76, 77, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 104, 105, 106, 111, 114, 116, 118, 119, 121, 123, 137, 139, 140, 141, 142, 148, 149, 166, 168, 172, 173, 176, 179, 180, 181, 183, 187, 192, 199, 301, 330, 331, 336, 342, 364, 374, 382, 387, 388, 389], "bag": [9, 74, 75, 301, 365], "bootstrap": [9, 71, 91, 301, 342], "aggreg": [9, 71, 72, 73, 91, 147, 301, 342], "choic": [9, 74, 101, 107, 128, 301, 341, 342], "For": [9, 11, 21, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 177, 178, 180, 181, 182, 184, 187, 189, 192, 193, 195, 197, 198, 200, 301, 304, 316, 331, 342, 344, 346, 354, 378, 382, 384], "more": [9, 47, 54, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 79, 80, 82, 83, 86, 87, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 113, 114, 116, 117, 118, 119, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 164, 165, 170, 171, 172, 173, 177, 181, 182, 186, 188, 191, 193, 195, 197, 198, 200, 301, 341, 342, 344, 346, 354, 374, 379, 382, 384, 386], "see": [9, 37, 47, 55, 56, 59, 63, 65, 66, 68, 71, 72, 74, 75, 79, 80, 83, 87, 91, 92, 93, 94, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 170, 172, 173, 181, 182, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 301, 342, 344, 346, 354, 364, 372, 378, 382, 383, 388], "breiman84": [9, 54, 72, 73, 74, 75, 76, 77, 94, 301, 342], "breiman2001": [9, 54, 74, 301, 342], "hist": [9, 71, 260, 261, 262, 263, 264, 265, 301], "decision_forest": [9, 213, 214, 260, 261, 262, 263, 264, 265], "do": [9, 60, 62, 72, 76, 77, 92, 93, 101, 103, 104, 111, 128, 131, 132, 144, 145, 146, 150, 151, 152, 158, 160, 163, 170, 171, 173, 176, 180, 182, 187, 188, 192, 218, 344, 371, 378, 382, 387], "error": [9, 54, 56, 57, 59, 60, 64, 65, 66, 68, 75, 76, 77, 106, 107, 108, 110, 113, 116, 117, 118, 119, 127, 129, 136, 147, 159, 160, 161, 172, 173, 174, 190, 213, 214, 260, 261, 263, 264, 331, 364, 382], "metric": [9, 21, 25, 28, 56, 71, 72, 73, 101, 174, 316, 321, 323, 331, 354, 357, 358, 360, 378], "out_of_bag_error": [9, 213, 214, 260, 263, 264], "produc": [9, 38, 55, 71, 87, 91, 96, 106, 107, 110, 127, 180, 193, 336, 341, 342, 354, 386], "cumul": [9, 82, 83, 84, 85], "predict": [9, 21, 32, 54, 55, 56, 57, 61, 74, 94, 158, 159, 160, 162, 178, 194, 213, 214, 260, 261, 263, 264, 331, 336, 342, 347, 354, 356, 364, 365, 382, 385], "out_of_bag_error_per_observ": [9, 214, 263, 264], "mdi": [9, 71, 72, 213, 260, 263, 264, 342], "decreas": [9, 67, 71, 72, 107, 161, 172, 342, 344, 364], "impur": [9, 71, 262, 265], "sum": [9, 29, 51, 58, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 76, 86, 91, 92, 93, 97, 98, 104, 107, 108, 116, 117, 118, 119, 120, 124, 127, 128, 129, 131, 132, 133, 136, 137, 138, 140, 144, 148, 149, 159, 160, 161, 172, 174, 180, 181, 203, 204, 251, 252, 327, 328, 338, 341, 342, 361, 364], "node": [9, 71, 72, 73, 74, 75, 76, 77, 91, 92, 93, 94, 101, 107, 150, 152, 166, 168, 171, 183, 192, 193, 262, 265, 342, 354, 365, 367, 386], "averag": [9, 21, 71, 72, 116, 128, 136, 140, 160, 174, 316, 336, 342, 354], "over": [9, 55, 71, 75, 86, 91, 182, 342, 354, 372, 382], "mda_raw": [9, 71, 214], "accuraci": [9, 58, 59, 60, 61, 62, 71, 75, 125, 138, 158, 160, 172, 173, 219, 266, 274, 342], "permut": [9, 71, 153, 341, 342], "portion": [9, 164], "rate": [9, 91, 95, 97, 98, 106, 107, 131, 137, 139, 141, 142, 160, 197], "mse": [9, 62, 73, 75, 77, 108, 110, 129, 168], "same": [9, 45, 49, 51, 57, 63, 67, 68, 69, 70, 72, 75, 79, 80, 86, 87, 92, 93, 98, 107, 124, 131, 132, 144, 150, 152, 156, 163, 170, 171, 180, 184, 192, 193, 334, 336, 337, 342, 344, 364, 371, 372, 374, 378, 379, 380, 381, 382, 388], "done": [9, 55, 72, 73, 98, 103, 107, 108, 110, 113, 115, 138, 177, 180, 183, 185, 191, 193, 378], "predictor": [9, 75, 108, 365], "differ": [9, 28, 29, 55, 56, 62, 83, 86, 87, 115, 117, 118, 119, 120, 125, 131, 173, 177, 180, 182, 184, 191, 193, 199, 203, 204, 251, 252, 323, 327, 328, 331, 360, 361, 378, 382, 383], "mda_scal": [9, 71], "scale": [9, 16, 17, 19, 54, 71, 90, 91, 124, 126, 127, 341, 342, 382], "its": [9, 21, 24, 33, 35, 37, 45, 49, 51, 55, 57, 59, 60, 63, 71, 72, 73, 75, 86, 91, 101, 106, 107, 111, 114, 127, 135, 136, 140, 142, 153, 159, 163, 180, 182, 185, 316, 320, 342, 354, 355, 356, 365, 377, 378, 381, 382, 385, 388], "standard": [9, 29, 55, 71, 84, 117, 118, 119, 120, 127, 146, 203, 204, 251, 252, 327, 328, 361, 382, 388], "deviat": [9, 29, 71, 84, 117, 118, 119, 120, 127, 146, 159, 203, 204, 251, 252, 327, 328, 361], "class_label": 9, "math": [9, 54, 124, 355, 356], "class_respons": [9, 213, 260, 261], "deprec": [9, 60, 62, 71, 103, 175, 331], "class_prob": [9, 213, 260, 261], "probabl": [9, 54, 55, 57, 59, 61, 72, 82, 84, 85, 86, 92, 101, 106, 107, 116, 145, 164, 166, 173, 195, 213, 260, 261, 262, 354, 356], "final": [9, 58, 59, 60, 75, 104, 145, 156, 170, 180, 192, 193, 199, 341, 365, 386], "combin": [9, 68, 71, 101, 103, 111, 116, 127, 130, 131, 132, 133, 134, 147, 173, 177, 374, 382], "through": [9, 55, 61, 127, 130, 147, 160, 177, 180, 182, 184, 378], "major": [9, 21, 49, 54, 58, 59, 62, 72, 75, 140, 147, 148, 149, 150, 151, 177, 182, 184, 186, 191, 200, 316, 342, 354, 365, 378, 382], "vote": [9, 21, 72, 101, 173, 268, 316, 342, 354], "unweight": [9, 72, 377, 382], "simpl": [9, 55, 61, 75, 107, 113, 116, 124, 365, 372], "split": [9, 32, 55, 60, 62, 65, 69, 72, 74, 92, 93, 94, 96, 97, 100, 101, 104, 106, 114, 118, 122, 144, 148, 156, 166, 168, 170, 193, 262, 265, 367], "strategi": [9, 54, 107, 139, 173], "build": [9, 55, 58, 59, 60, 61, 62, 72, 73, 75, 76, 77, 91, 92, 93, 101, 113, 116, 172, 173, 186, 191, 199, 331, 333, 354, 364, 384, 389], "among": [9, 32, 53, 67, 69, 107, 172, 177, 330, 342, 364, 387], "histogram": 9, "bin": [9, 71, 91, 342], "subset": [9, 57, 71, 76, 77, 91, 101, 104, 145, 172, 177, 180, 342, 364, 367, 382], "select": [9, 24, 51, 54, 69, 71, 74, 76, 77, 87, 88, 89, 90, 91, 94, 101, 107, 108, 139, 141, 145, 172, 173, 177, 180, 193, 195, 320, 337, 342, 355, 364, 365, 382], "from": [9, 21, 29, 33, 34, 35, 37, 38, 43, 44, 45, 47, 48, 49, 51, 53, 54, 57, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 86, 87, 91, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 171, 173, 176, 177, 179, 180, 182, 184, 185, 186, 187, 191, 192, 193, 195, 197, 198, 199, 203, 204, 211, 218, 251, 252, 258, 292, 294, 316, 327, 328, 332, 334, 336, 337, 341, 342, 344, 348, 354, 361, 364, 365, 367, 371, 372, 373, 374, 378, 381, 382, 385, 387, 388], "features_per_nod": 9, "consid": [9, 13, 55, 68, 69, 70, 71, 146, 159, 161, 334, 342, 382, 388], "when": [9, 33, 34, 35, 37, 45, 47, 48, 49, 51, 55, 59, 61, 62, 63, 64, 65, 66, 67, 71, 79, 80, 82, 83, 86, 87, 91, 92, 101, 103, 104, 106, 107, 111, 116, 124, 131, 132, 137, 138, 139, 147, 150, 151, 152, 159, 162, 163, 171, 173, 177, 178, 180, 181, 182, 184, 185, 187, 191, 192, 193, 195, 199, 262, 265, 342, 371, 372, 378, 382, 386], "look": [9, 55], "sqrt": [9, 60, 67, 71, 79, 80, 84, 86, 107, 120, 137, 144, 145, 159, 338, 341, 342, 358, 361, 385], "3": [9, 17, 33, 34, 35, 37, 54, 60, 66, 71, 86, 91, 96, 105, 114, 119, 123, 144, 145, 146, 149, 155, 169, 172, 180, 184, 193, 205, 211, 217, 228, 243, 244, 253, 258, 292, 293, 294, 296, 344, 346, 364, 369, 370, 372, 379, 381, 388], "total": [9, 55, 57, 68, 70, 71, 95, 96, 97, 99, 100, 106, 124, 140, 159, 173, 334, 342], "get_features_per_nod": 9, "set_features_per_nod": [9, 213, 214, 260, 261, 262, 263, 264, 265], "min_observations_in_leaf_nod": 9, "leaf": [9, 71, 72, 73, 74, 75, 76, 77, 91, 92, 93, 94, 101, 262, 265, 342, 354, 365, 367], "get_min_observations_in_leaf_nod": 9, "set_min_observations_in_leaf_nod": [9, 213, 214, 260, 261, 262, 263, 264, 265], "onli": [9, 13, 21, 32, 33, 34, 35, 37, 38, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 142, 146, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 172, 173, 177, 184, 185, 188, 191, 193, 195, 197, 198, 218, 331, 334, 336, 338, 341, 342, 344, 346, 354, 355, 356, 361, 364, 369, 370, 371, 378, 382, 389], "enable_if_classification_t": [9, 21, 32], "get_infer_mod": 9, "set_infer_mod": [9, 213, 260, 261], "max_tree_depth": 9, "maxim": [9, 56, 57, 58, 59, 60, 62, 71, 72, 91, 92, 172, 173, 174, 331, 336, 342], "depth": [9, 75, 76, 77, 91], "expand": [9, 344], "until": [9, 55, 60, 71, 75, 86, 101, 107, 128, 140, 142, 145, 192, 336, 337, 342], "leav": [9, 55, 91, 166, 168], "pure": [9, 55], "less": [9, 55, 71, 101, 111, 145, 147, 161, 342, 354, 374], "min": [9, 29, 51, 62, 71, 98, 120, 125, 140, 172, 184, 218, 361, 364], "get_max_tree_depth": 9, "set_max_tree_depth": [9, 262], "min_weight_fraction_in_leaf_nod": 9, "fraction": [9, 71, 72, 75, 76, 77, 91, 101, 105, 106, 342, 354, 364, 382], "minimum": [9, 29, 57, 69, 71, 75, 76, 77, 103, 117, 118, 119, 120, 126, 128, 136, 138, 139, 181, 203, 204, 251, 252, 327, 328, 342, 361], "requir": [9, 13, 36, 37, 57, 61, 62, 65, 68, 69, 71, 72, 73, 76, 82, 83, 86, 91, 92, 93, 96, 97, 102, 103, 104, 105, 106, 107, 113, 114, 116, 118, 121, 122, 123, 124, 127, 130, 131, 132, 133, 140, 142, 148, 150, 152, 153, 154, 156, 161, 169, 170, 171, 172, 173, 177, 179, 181, 182, 188, 191, 192, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 336, 342, 373, 374, 378, 385, 388], "get_min_weight_fraction_in_leaf_nod": 9, "set_min_weight_fraction_in_leaf_nod": [9, 213, 260, 261, 262], "observations_per_tree_fract": 9, "get_observations_per_tree_fract": 9, "set_observations_per_tree_fract": 9, "class_count": [9, 21, 32, 262, 317, 354], "count": [9, 37, 45, 49, 51, 55, 212, 219, 220, 259, 266, 267, 274, 292, 372, 377, 381, 382], "get_class_count": [9, 21, 32], "set_class_count": [9, 21, 32, 213, 237, 238, 260, 261, 262], "get_error_metric_mod": 9, "set_error_metric_mod": [9, 213, 214, 260, 263, 264], "max_leaf_nod": 9, "limit": [9, 25, 55, 57, 71, 92, 93, 101, 116, 128, 136, 144, 146, 159, 174, 185, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 321, 331, 342, 354, 357], "get_max_leaf_nod": 9, "set_max_leaf_nod": 9, "max_bin": 9, "discret": [9, 54, 71, 83, 91, 382], "bucket": [9, 71, 91, 101, 367], "continu": [9, 71, 72, 75, 83, 91, 92, 93, 107, 128, 176, 177, 180, 342, 354, 378, 382], "increas": [9, 55, 67, 71, 75, 91, 173, 342, 382], "cost": [9, 71, 91, 98, 101, 111], "256": [9, 71, 91], "get_max_bin": 9, "set_max_bin": 9, "get_variable_importance_mod": 9, "set_variable_importance_mod": [9, 213, 214, 260, 263, 264], "impurity_threshold": 9, "induc": [9, 13, 71, 101, 342, 346, 367, 382], "greater": [9, 57, 69, 71, 105, 106, 107, 108, 110, 111, 151, 165, 172, 184, 342, 379, 382], "than": [9, 57, 60, 61, 63, 67, 69, 71, 79, 80, 86, 91, 101, 105, 106, 107, 108, 110, 111, 124, 131, 144, 145, 147, 150, 151, 161, 165, 172, 173, 181, 191, 342, 354], "get_impurity_threshold": 9, "set_impurity_threshold": 9, "min_bin_s": 9, "get_min_bin_s": 9, "set_min_bin_s": 9, "whole": [9, 33, 71, 182, 293, 369], "get_bootstrap": 9, "set_bootstrap": 9, "min_observations_in_split_nod": 9, "get_min_observations_in_split_nod": 9, "set_min_observations_in_split_nod": [9, 213, 260, 261, 262], "tree_count": 9, "splitter": [9, 342], "randomli": [9, 71, 75, 91, 139, 337, 342], "get_splitter_mod": 9, "set_splitter_mod": [9, 261, 264], "min_impurity_decrease_in_split_nod": 9, "growth": 9, "earli": 9, "abov": [9, 59, 76, 83, 87, 106, 108, 110, 138, 145, 164, 180, 344, 346], "otherwis": [9, 33, 34, 35, 37, 75, 113, 116, 127, 140, 141, 159, 161, 172, 173, 182, 346, 356, 382, 388], "get_min_impurity_decrease_in_split_nod": 9, "set_min_impurity_decrease_in_split_nod": [9, 213, 260, 261, 262], "get_tree_count": [9, 262, 265], "set_tree_count": [9, 213, 214, 260, 261, 262, 263, 264, 265], "memory_saving_mod": 9, "get_memory_saving_mod": 9, "set_memory_saving_mod": 9, "get_voting_mod": [9, 21], "set_voting_mod": [9, 21, 213, 260, 261, 268, 269], "visitor": [9, 262, 265], "traverse_depth_first": [9, 262, 265], "tree_idx": 9, "travers": [9, 101, 234, 262, 265, 354], "th": [9, 13, 54, 57, 60, 62, 65, 71, 86, 91, 96, 97, 100, 101, 104, 106, 114, 118, 122, 124, 126, 127, 137, 139, 144, 145, 146, 148, 150, 153, 156, 159, 164, 165, 170, 173, 180, 184, 336, 341, 342, 354, 385, 388], "index": [9, 33, 34, 37, 40, 46, 47, 57, 69, 71, 72, 75, 76, 87, 91, 92, 93, 97, 102, 107, 124, 139, 140, 141, 173, 180, 184, 211, 262, 265, 294, 336, 342, 379, 381, 382], "functor": 9, "get": [9, 40, 41, 42, 49, 55, 57, 63, 67, 68, 70, 71, 72, 75, 79, 80, 82, 86, 92, 93, 98, 100, 101, 107, 111, 113, 116, 124, 127, 128, 144, 150, 152, 162, 171, 172, 173, 180, 181, 185, 186, 188, 191, 192, 334, 342, 382, 388], "notifi": 9, "visit": [9, 200], "split_node_info": [9, 262, 265], "leaf_node_info": [9, 262, 265], "visitor_arrai": 9, "arrai": [9, 33, 34, 35, 46, 47, 48, 49, 50, 57, 60, 71, 129, 131, 140, 161, 177, 181, 182, 183, 184, 189, 211, 258, 292, 294, 331, 342, 369, 370, 378, 379, 381, 382, 388], "traverse_breadth_first": 9, "breadth": 9, "w": [9, 32, 54, 72, 73, 86, 91, 107, 342, 355, 356, 364, 385], "y": [9, 16, 17, 18, 19, 21, 32, 37, 54, 57, 58, 59, 60, 62, 70, 71, 72, 73, 75, 76, 77, 84, 86, 91, 92, 93, 97, 98, 101, 102, 108, 110, 113, 115, 116, 126, 127, 129, 131, 132, 133, 140, 151, 158, 160, 165, 172, 173, 224, 232, 233, 235, 271, 279, 334, 342, 348, 349, 350, 351, 352, 354, 355, 356, 364, 385], "oob_err_predict": 9, "out_of_bag_error_predict": 9, "get_oob_err_predict": 9, "set_oob_err_predict": 9, "oob_err_r2": 9, "r2": 9, "out_of_bag_error_r2": 9, "get_oob_err_r2": 9, "set_oob_err_r2": 9, "oob_err_decision_funct": 9, "out_of_bag_error_decision_funct": 9, "get_oob_err_decision_funct": 9, "set_oob_err_decision_funct": 9, "oob_err": 9, "get_oob_err": [9, 213, 214, 260, 261, 263, 264], "set_oob_err": 9, "oob_err_accuraci": 9, "out_of_bag_error_accuraci": 9, "get_oob_err_accuraci": 9, "set_oob_err_accuraci": 9, "var_import": 9, "get_var_import": [9, 213, 214, 260, 261, 263, 264], "set_var_import": 9, "oob_err_per_observ": 9, "get_oob_err_per_observ": [9, 214, 263, 264], "set_oob_err_per_observ": 9, "get_prob": [9, 213, 260, 261, 262], "set_prob": 9, "decis": [10, 14, 32, 54, 56, 61, 92, 93, 94, 162, 166, 168, 172, 173, 185, 191, 199, 237, 238, 239, 240, 245, 246, 247, 248, 262, 280, 301, 331, 333, 343, 347, 364, 366, 383, 384], "forest": [10, 14, 54, 56, 75, 185, 191, 262, 301, 331, 343, 347, 365, 383, 384], "classif": [10, 14, 20, 23, 24, 32, 54, 58, 59, 60, 61, 62, 71, 74, 75, 77, 78, 91, 94, 101, 116, 121, 123, 124, 157, 162, 167, 172, 173, 178, 191, 194, 196, 222, 245, 246, 260, 261, 262, 274, 301, 316, 319, 320, 330, 343, 347, 353, 355, 356, 364, 382, 383, 384], "regress": [10, 14, 21, 32, 54, 56, 61, 62, 71, 72, 74, 75, 78, 91, 92, 94, 101, 108, 110, 111, 131, 132, 157, 162, 167, 172, 178, 191, 194, 196, 214, 243, 244, 263, 264, 265, 269, 301, 316, 330, 331, 343, 347, 353, 363, 365, 382, 383, 384], "df": [10, 14, 74, 213, 214, 260, 261, 262, 263, 264, 265, 301, 343, 347, 383, 384], "undirect": [11, 40, 45, 46, 218, 304, 344, 377, 378, 382], "graph": [11, 13, 14, 46, 50, 54, 74, 75, 94, 206, 215, 216, 217, 218, 228, 234, 236, 249, 304, 306, 331, 333, 344, 346, 347, 365, 385], "g": [11, 13, 40, 45, 55, 75, 86, 91, 128, 129, 137, 140, 141, 142, 144, 146, 185, 218, 304, 306, 336, 344, 346, 378, 381, 382, 385, 388], "vertex": [11, 13, 40, 41, 42, 43, 44, 45, 218, 304, 344, 346, 382, 385], "belong": [11, 32, 58, 59, 60, 62, 70, 72, 76, 86, 92, 101, 116, 124, 131, 132, 144, 145, 146, 158, 160, 166, 172, 173, 178, 304, 330, 334, 342, 344, 364, 367], "vertic": [11, 13, 40, 41, 42, 45, 215, 216, 218, 304, 306, 344, 346, 378, 382], "afforest": [11, 304], "vertex_partitioning_input": [11, 304, 344], "vertex_partitioning_result": [11, 304, 344], "connected_compon": [11, 206], "alloc": [11, 13, 33, 34, 35, 37, 43, 44, 45, 57, 83, 87, 135, 172, 180, 182, 189, 192, 258, 292, 294, 364, 372], "char": [11, 13, 38, 43, 44, 55, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "custom": [11, 13, 177, 180, 181, 354, 382], "manag": [11, 13, 50, 54, 55, 56, 180, 182, 183, 187, 190, 331, 333, 372], "insid": [11, 13, 37, 55, 141, 182, 292, 372, 381, 382], "get_alloc": [11, 13], "copi": [11, 13, 33, 34, 35, 37, 101, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 294, 371, 372, 378, 381, 382, 388], "intern": [11, 13, 37, 54, 55, 71, 72, 74, 75, 86, 92, 93, 94, 99, 100, 101, 105, 106, 137, 139, 140, 141, 142, 180, 182, 292, 342, 365, 372, 382, 387], "construct": [11, 13, 37, 43, 44, 45, 75, 82, 92, 101, 180, 182, 378, 382], "constant": [11, 13, 32, 45, 60, 72, 75, 92, 93, 107, 129, 130, 131, 132, 133, 134, 141, 145, 159, 365], "get_graph": 11, "set_graph": 11, "empti": [11, 13, 37, 43, 44, 45, 49, 55, 57, 71, 107, 111, 128, 133, 139, 142, 182, 336, 342, 381, 382], "size": [11, 13, 24, 32, 33, 34, 35, 37, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 73, 75, 76, 77, 83, 86, 87, 88, 89, 90, 97, 98, 100, 101, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 145, 150, 151, 153, 154, 155, 156, 161, 166, 171, 172, 173, 177, 180, 182, 189, 195, 218, 337, 342, 355, 356, 364, 372, 382], "vertex_count": [11, 218], "id": [11, 13, 37, 47, 48, 49, 55, 57, 59, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 83, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 134, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 187, 192, 195, 197, 198, 292, 344, 346, 368, 372, 381, 389], "connected_components_batch": [11, 201, 202, 303, 344, 345], "subgraph": [12, 14, 54, 306, 345, 347, 382], "isomorph": [12, 14, 54, 306, 345, 347], "connect": [12, 14, 54, 144, 146, 158, 160, 162, 166, 168, 206, 304, 345, 347, 378, 382], "target": [13, 21, 60, 201, 306, 316, 346, 354, 368, 384], "pattern": [13, 16, 40, 45, 54, 102, 181, 306, 308, 346, 349], "h": [13, 54, 55, 58, 59, 64, 65, 66, 86, 91, 117, 118, 119, 129, 133, 140, 145, 159, 218, 306, 346, 355, 356, 382], "map": [13, 55, 91, 100, 102, 106, 306, 346], "onto": [13, 306, 346, 381], "fast": [13, 54, 61, 150, 306], "graph_matching_input": [13, 306, 346], "graph_matching_result": [13, 306, 346], "subgraph_isomorph": [13, 236], "max_match_count": 13, "match": [13, 55, 236, 388], "get_max_match_count": 13, "set_max_match_count": [13, 236], "kind": [13, 47, 48, 49, 76, 77, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 381], "non_induc": [13, 236], "get_kind": [13, 47, 48, 49, 381], "set_kind": [13, 236], "semantic_match": 13, "semant": [13, 55], "get_semantic_match": 13, "set_semantic_match": [13, 236], "exist": [13, 151, 182, 200, 346], "edg": [13, 40, 41, 42, 43, 44, 45, 71, 199, 215, 216, 344, 346, 378, 382, 385], "target_graph": [13, 236], "pattern_graph": [13, 236], "bigger": 13, "smaller": [13, 55, 69, 71, 91, 101, 150, 152, 171, 191, 342], "get_pattern_graph": 13, "set_pattern_graph": 13, "get_target_graph": 13, "set_target_graph": 13, "vertex_match": 13, "match_count": 13, "pattern_vertex_count": 13, "sort": [13, 55, 56, 57, 71, 75, 174, 331, 341, 342], "e": [13, 54, 55, 60, 62, 71, 75, 86, 92, 116, 131, 132, 137, 161, 172, 185, 260, 261, 262, 263, 264, 265, 269, 336, 341, 342, 346, 364, 378, 381, 382, 385], "j": [13, 29, 54, 55, 62, 67, 71, 73, 75, 79, 80, 86, 91, 96, 98, 100, 101, 102, 108, 110, 111, 113, 114, 115, 116, 120, 124, 126, 127, 128, 131, 132, 133, 139, 140, 146, 150, 159, 165, 173, 180, 184, 215, 216, 218, 336, 338, 341, 342, 350, 351, 352, 354, 356, 357, 358, 360, 361, 379, 382, 388], "element": [13, 29, 33, 37, 40, 47, 48, 49, 54, 55, 71, 73, 86, 87, 88, 89, 90, 97, 98, 100, 101, 106, 113, 116, 121, 122, 123, 127, 130, 139, 144, 147, 153, 159, 160, 161, 172, 181, 182, 184, 292, 293, 341, 342, 367, 369, 372, 378, 379, 382, 385], "wa": [13, 55, 71, 75, 139, 141, 173, 388], "get_vertex_match": [13, 236], "set_vertex_match": 13, "get_match_count": [13, 236], "set_match_count": 13, "big": [13, 33, 34, 35, 331, 336, 342, 354, 382], "small": [13, 55, 60, 107, 124, 150, 152, 171], "subgraph_isomorphism_batch": [13, 201, 202, 305, 345, 346], "mathemat": [14, 54, 331, 333, 347, 384], "descript": [14, 37, 40, 41, 42, 45, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 173, 181, 182, 185, 186, 187, 192, 193, 195, 197, 198, 292, 364, 371, 372, 374, 377, 378, 381, 385, 387], "decomposit": [14, 50, 54, 56, 113, 114, 174, 331, 333, 341, 347], "kernel": [14, 32, 50, 54, 55, 56, 172, 174, 308, 310, 312, 314, 331, 333, 347, 364, 382], "polynomi": [14, 15, 180, 310, 347, 348], "radial": [14, 15, 312, 347, 348], "basi": [14, 15, 151, 152, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 312, 347, 348], "rbf": [14, 15, 102, 312, 347, 348], "sigmoid": [14, 15, 314, 347, 348, 356], "knn": [14, 21, 50, 56, 191, 221, 222, 223, 268, 269, 270, 317, 331, 333, 347, 354, 382], "nn": [14, 20, 101, 316, 347, 353, 382, 383, 384], "descriptor": [14, 53, 182, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 289, 299, 317, 324, 325, 328, 334, 336, 337, 341, 354, 361, 374, 378, 388], "pairwis": [14, 50, 54, 331, 333, 347, 354], "minkowski": [14, 25, 26, 27, 321, 323, 347, 354, 357, 359], "chebyshev": [14, 27, 321, 347, 354, 359], "cosin": [14, 27, 81, 322, 347, 354, 359], "basic": [14, 30, 37, 64, 65, 66, 117, 118, 119, 120, 127, 145, 180, 181, 184, 192, 327, 347, 362, 372, 378, 383, 384, 388], "support": [14, 21, 33, 34, 35, 38, 45, 46, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 107, 111, 114, 116, 117, 118, 119, 121, 126, 129, 133, 139, 145, 146, 150, 153, 155, 156, 158, 159, 160, 164, 165, 166, 168, 169, 170, 173, 177, 180, 181, 182, 183, 184, 185, 191, 192, 193, 199, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280, 315, 330, 331, 333, 334, 336, 338, 341, 342, 346, 347, 348, 353, 354, 356, 361, 371, 372, 373, 378, 379, 382, 388, 389], "machin": [14, 50, 54, 56, 173, 188, 191, 330, 331, 333, 347, 383, 384], "svm": [14, 31, 54, 172, 173, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280, 330, 347, 348, 363, 382, 383, 384, 388], "simplest": [16, 102, 107, 308, 349], "linear_kernel": [16, 32, 224, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 271, 280], "shift": [16, 17, 19], "coeffici": [16, 17, 18, 19, 28, 32, 102, 108, 110, 111, 113, 115, 116, 120, 131, 132, 133, 139, 142, 144, 146, 159, 172, 191, 217, 218, 225, 226, 272, 273, 274, 355, 356, 361, 364], "b": [16, 17, 19, 54, 55, 71, 72, 73, 74, 85, 102, 107, 126, 128, 140, 141, 142, 172, 274, 342, 349, 350, 352, 364, 385], "get_shift": [16, 17, 19], "set_shift": [16, 17, 19, 224, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 271, 280], "get_scal": [16, 17, 19], "set_scal": [16, 17, 19, 224, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 271, 280], "so": [16, 17, 18, 19, 55, 57, 58, 60, 62, 65, 66, 72, 73, 75, 76, 77, 84, 86, 92, 93, 95, 97, 98, 101, 103, 104, 111, 116, 118, 119, 148, 149, 156, 158, 159, 160, 164, 170, 173, 176, 177, 178, 181, 184, 336, 344, 365, 368], "get_x": [16, 17, 18, 19], "set_x": [16, 17, 18, 19], "get_i": [16, 17, 18, 19], "set_i": [16, 17, 18, 19], "get_valu": [16, 17, 18, 19, 24, 224, 227, 232, 233, 235, 271, 279], "set_valu": [16, 17, 18, 19, 24], "popular": [17, 18, 19, 32, 58, 59, 61, 75, 102, 107, 172, 180, 191, 310, 312, 314, 330, 350, 351, 352, 364], "learn": [17, 18, 19, 21, 47, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 91, 92, 93, 98, 101, 102, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 124, 126, 127, 131, 137, 139, 140, 141, 142, 144, 145, 146, 150, 151, 152, 153, 154, 164, 165, 166, 168, 171, 172, 173, 186, 188, 191, 310, 312, 314, 315, 350, 351, 352, 353, 354, 379, 388], "similar": [17, 54, 71, 81, 101, 107, 108, 110, 115, 217, 218, 310, 350, 388], "origin": [17, 37, 75, 87, 102, 103, 104, 126, 150, 211, 258, 292, 310, 348, 350, 372, 382], "allow": [17, 40, 55, 71, 87, 91, 111, 310, 342, 350, 354, 374, 378], "fit": [17, 62, 75, 108, 110, 113, 171, 177, 180, 181, 274, 310, 350, 365, 378, 382, 386], "model": [17, 24, 45, 50, 54, 58, 59, 60, 61, 62, 71, 72, 73, 75, 76, 77, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 108, 110, 111, 113, 114, 115, 116, 121, 122, 123, 124, 159, 162, 166, 168, 172, 173, 177, 179, 191, 192, 194, 199, 262, 265, 274, 289, 299, 310, 317, 320, 324, 325, 331, 333, 336, 341, 342, 347, 348, 350, 354, 355, 364, 365, 382, 388], "polynomial_kernel": [17, 32, 232], "degre": [17, 28, 40, 41, 42, 67, 145, 215, 216, 323, 354, 360], "d": [17, 21, 38, 54, 55, 57, 60, 64, 65, 66, 71, 72, 73, 76, 77, 98, 107, 117, 118, 119, 128, 137, 139, 140, 141, 142, 172, 180, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 316, 331, 333, 336, 337, 342, 350, 364, 366, 385], "get_degre": [17, 28], "set_degre": [17, 28, 232], "rbf_kernel": [18, 32, 233, 237, 279], "sigma": [18, 71, 84, 86, 92, 98, 102, 116, 132, 159, 169, 170, 171, 341, 342, 351, 356], "get_sigma": 18, "set_sigma": [18, 233, 237, 279], "sigmoid_kernel": [19, 32, 235], "identifi": [21, 57, 69, 70, 101, 110, 143, 144, 145, 146, 180, 187, 192, 316, 334, 344, 354, 367], "chosen": [21, 75, 101, 107, 316, 342, 354, 373], "brute": [21, 54, 68, 69, 316], "forc": [21, 54, 68, 69, 139, 316], "voting_mod": [21, 213, 260, 261, 268, 269], "uniform": [21, 54, 83, 101, 268, 269, 382], "invers": [21, 55, 60, 84, 101, 140, 152, 171], "constexpr": [21, 24, 33, 34, 35, 37, 38, 40, 205, 211, 219, 253, 258, 266, 292, 293, 294, 296, 369, 370, 372], "result_option_id_bas": [21, 24], "minkowski_dist": [21, 28], "kd_tree": [21, 222], "chebyshev_dist": [21, 25], "neighbor_count": [21, 317, 354], "enable_if_brute_force_t": 21, "distance_t": 21, "enable_if_not_classification_t": 21, "calcul": [21, 24, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 75, 76, 77, 79, 80, 83, 86, 87, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 116, 117, 118, 119, 122, 124, 126, 127, 130, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 172, 173, 191, 195, 197, 198, 211, 320, 336, 355, 356, 364], "get_dist": [21, 223, 234], "set_dist": 21, "dist": 21, "get_neighbor_count": 21, "set_neighbor_count": 21, "enable_if_not_search_t": 21, "get_indic": [21, 223, 270], "set_indic": 21, "knn_desc": [21, 221, 222, 223, 270, 317, 354], "python": [21, 56, 57, 58, 60, 62, 63, 67, 70, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 92, 93, 98, 101, 107, 113, 114, 116, 120, 124, 126, 127, 131, 137, 140, 141, 142, 144, 145, 146, 150, 151, 153, 154, 164, 165, 166, 168, 171, 172, 173, 182, 315, 353, 354], "knn_cls_brute_force_dense_batch": [21, 101, 201, 202, 250, 315, 353, 354], "knn_cls_kd_tree_dense_batch": [21, 101, 201, 202, 315, 353, 354], "knn_search_brute_force_dense_batch": [21, 201, 202, 250, 315, 353, 354], "distribut": [21, 50, 54, 56, 60, 67, 70, 72, 86, 87, 98, 101, 107, 112, 116, 120, 124, 144, 145, 146, 154, 159, 164, 174, 177, 192, 194, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 315, 331, 333, 347, 353, 378, 384], "scikit": [21, 57, 58, 60, 62, 63, 67, 70, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 92, 93, 98, 101, 107, 113, 114, 116, 120, 124, 126, 127, 131, 137, 140, 141, 142, 144, 145, 146, 150, 151, 153, 154, 164, 165, 166, 168, 171, 172, 173, 315, 353, 354], "intelex": [21, 57, 58, 60, 62, 63, 67, 70, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 92, 93, 98, 101, 107, 113, 114, 116, 120, 124, 126, 127, 131, 137, 140, 141, 142, 144, 145, 146, 150, 151, 153, 154, 164, 165, 166, 168, 171, 172, 173, 315, 353, 354], "logist": [22, 54, 56, 62, 129, 131, 136, 174, 191, 227, 331, 355, 383, 384], "loss": [22, 59, 62, 91, 92, 93, 129, 136, 174, 227, 355], "logisticloss": [23, 319, 356], "common": [23, 45, 49, 76, 82, 83, 84, 85, 93, 111, 128, 162, 217, 236, 319, 356, 381], "binari": [23, 58, 59, 60, 61, 71, 72, 74, 75, 76, 77, 92, 93, 94, 101, 103, 104, 107, 116, 157, 162, 172, 173, 319, 332, 342, 356, 365, 367, 382, 388], "dense_batch": [23, 24, 227, 274, 319, 320], "oper": [23, 25, 26, 28, 37, 39, 43, 44, 45, 46, 47, 48, 49, 52, 53, 101, 129, 130, 131, 132, 133, 134, 139, 151, 177, 180, 181, 184, 187, 188, 191, 262, 265, 282, 286, 288, 291, 298, 301, 304, 306, 308, 310, 312, 314, 316, 319, 320, 321, 322, 323, 327, 330, 331, 333, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 371, 373, 378, 381, 382, 386, 388, 389], "logloss_object": [23, 24, 227], "l1_regularization_coeffici": 23, "l2_regularization_coeffici": 23, "fit_intercept": 23, "l1": [23, 108, 111, 116, 131, 132, 133, 160, 227, 356], "regular": [23, 54, 86, 91, 95, 97, 98, 108, 110, 111, 116, 131, 132, 133], "strength": 23, "get_l1_regularization_coeffici": 23, "set_l1_regularization_coeffici": 23, "intercept_flag": 23, "get_intercept_flag": 23, "set_intercept_flag": [23, 227], "l2": [23, 91, 108, 111, 116, 131, 132, 133, 227, 356], "get_l2_regularization_coeffici": 23, "set_l2_regularization_coeffici": 23, "design": [24, 180, 201, 320, 337, 355, 382, 383], "On": [24, 55, 68, 97, 101, 129, 130, 150, 152, 171, 320, 355, 386, 388], "gradient": [24, 54, 56, 111, 116, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 174, 185, 191, 227, 320, 331], "sometim": [24, 55, 320, 355, 385], "hessian": [24, 111, 129, 130, 131, 132, 133, 134, 135, 139, 227, 320], "updat": [24, 33, 34, 35, 58, 59, 60, 71, 86, 91, 101, 103, 111, 113, 116, 128, 139, 141, 142, 172, 186, 320, 336, 354, 355, 364, 372, 386], "inform": [24, 37, 49, 54, 55, 56, 57, 63, 64, 65, 66, 67, 69, 71, 72, 75, 76, 79, 80, 82, 86, 92, 93, 98, 107, 117, 118, 119, 124, 144, 150, 152, 153, 166, 171, 172, 179, 180, 181, 183, 187, 188, 190, 200, 292, 320, 331, 355, 372, 378, 382], "objective_funct": [24, 227], "objective_t": 24, "obj": [24, 33, 35], "get_object": 24, "set_object": 24, "valuea": 24, "train": [24, 53, 54, 55, 56, 57, 61, 94, 96, 100, 131, 132, 139, 159, 162, 178, 194, 213, 214, 219, 220, 221, 222, 223, 225, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 277, 278, 280, 288, 298, 301, 310, 316, 324, 325, 330, 331, 337, 347, 350, 367, 382, 385, 388], "get_paramet": 24, "set_paramet": 24, "correct": [24, 54, 55, 140, 355, 356], "get_gradi": [24, 227], "set_gradi": 24, "get_hessian": [24, 227], "set_hessian": 24, "infti": [25, 84, 86, 91, 139, 141, 321, 357], "inner": [26, 142, 322, 358], "product": [26, 57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 97, 98, 107, 117, 118, 119, 124, 144, 148, 149, 150, 152, 171, 172, 186, 188, 322, 348, 358, 382], "cosine_dist": [26, 223], "wide": [28, 63, 110, 180, 200, 323, 331, 360], "commonli": [28, 115, 323, 360], "euclidean": [28, 101, 103, 104, 107, 323, 336, 354, 360], "also": [28, 55, 57, 63, 71, 72, 74, 75, 86, 101, 102, 107, 108, 110, 127, 139, 150, 152, 163, 172, 176, 177, 178, 180, 182, 192, 323, 341, 342, 360, 365, 368, 382, 389], "extern": [28, 37, 47, 48, 49, 55, 72, 75, 92, 93, 200, 365, 372, 378], "quantit": [29, 67, 120, 327, 361, 382], "characterist": [29, 40, 59, 68, 101, 102, 103, 111, 116, 117, 120, 127, 129, 130, 131, 132, 133, 134, 136, 147, 162, 173, 174, 327, 361, 382], "second": [29, 32, 34, 35, 54, 65, 69, 91, 97, 104, 106, 108, 110, 114, 117, 118, 119, 120, 122, 140, 148, 156, 170, 203, 204, 215, 216, 251, 252, 258, 294, 296, 327, 328, 361, 370], "order": [29, 54, 56, 57, 65, 69, 75, 91, 102, 104, 126, 127, 147, 148, 149, 150, 151, 156, 161, 164, 165, 170, 174, 180, 181, 184, 185, 192, 203, 204, 251, 252, 327, 328, 331, 341, 354, 361, 374, 382], "raw": [29, 49, 71, 117, 118, 119, 120, 176, 177, 180, 182, 203, 204, 251, 252, 327, 328, 342, 361, 372, 378], "moment": [29, 49, 56, 65, 126, 127, 174, 177, 181, 203, 204, 251, 252, 327, 328, 331, 361, 386], "variat": [29, 82, 83, 117, 118, 119, 120, 203, 204, 251, 252, 327, 328, 361], "basic_statist": [29, 203, 204, 251, 252, 328, 361], "descriptor_bas": 29, "float_t": [29, 269, 277, 278], "method_t": [29, 269, 274, 277, 278], "task_t": [29, 269, 274, 277, 278], "second_order_raw_mo": 29, "get_second_order_raw_mo": [29, 203, 204, 251, 252, 328, 361], "set_second_order_raw_mo": 29, "max": [29, 51, 55, 62, 71, 120, 124, 125, 128, 131, 132, 133, 139, 141, 145, 219, 266, 361, 389], "get_max": [29, 203, 204, 251, 252, 328, 361], "set_max": 29, "get_min": [29, 203, 204, 251, 252, 328, 361], "set_min": 29, "standard_devi": 29, "get_standard_devi": [29, 203, 204, 251, 252, 328, 361], "set_standard_devi": 29, "sum_squar": 29, "get_sum_squar": [29, 203, 204, 251, 252, 328, 361], "set_sum_squar": 29, "sum_squares_cent": 29, "get_sum_squares_cent": [29, 203, 204, 251, 252, 328, 361], "set_sum_squares_cent": 29, "full": [29, 37, 45, 86, 100, 111, 140, 153, 161, 192, 292, 372, 382], "get_sum": [29, 203, 204, 251, 252, 328, 361], "set_sum": 29, "bs_desc": [29, 203, 204, 251, 252, 328, 361], "cout": [29, 33, 34, 35, 37, 40, 55, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 328, 361, 369, 370, 372, 381, 388], "endl": [29, 33, 34, 35, 37, 40, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 328, 361, 369, 370, 372, 381, 388], "basic_statistics_dense_batch": [29, 201, 202, 250, 326, 361, 362], "famili": [32, 71, 87, 172, 330, 364, 389], "thunder": [32, 172, 239, 240, 241, 242, 243, 244, 330], "smo": [32, 245, 246, 330], "nu_classif": [32, 239, 240], "nu_regress": [32, 241, 242], "kernel_t": 32, "enable_if_epsilon_available_t": 32, "upper": [32, 126, 152, 153, 154, 155, 156, 172, 181, 184, 218, 364, 382], "bound": [32, 69, 85, 124, 126, 172, 364, 382], "constraint": [32, 55, 136, 364], "quadrat": [32, 172, 364], "optim": [32, 54, 56, 63, 64, 65, 66, 91, 111, 116, 117, 118, 119, 128, 131, 139, 141, 172, 181, 183, 186, 200, 201, 331, 342, 344, 364, 382], "enable_if_c_available_t": 32, "get_c": 32, "set_c": [32, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 280], "100000": 32, "shrink": [32, 59, 172, 364], "enabl": [32, 38, 57, 71, 82, 101, 103, 104, 107, 116, 127, 141, 150, 152, 156, 170, 171, 172, 173, 177, 180, 181, 182, 184, 185, 186, 188, 191, 193, 195, 378, 382], "get_shrink": 32, "set_shrink": [32, 245, 246], "cache_s": 32, "cach": [32, 55, 172, 217, 218, 364], "megabyt": 32, "200": [32, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 264, 280], "get_cache_s": 32, "set_cache_s": [32, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280], "get_kernel": 32, "set_kernel": 32, "tau": [32, 76, 77, 172], "6": [32, 33, 35, 54, 57, 91, 158, 172, 205, 223, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 270, 280, 293, 296, 344, 346, 369, 370], "get_tau": 32, "set_tau": [32, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280], "nu": [32, 364, 382], "enable_if_nu_task_t": 32, "get_nu": 32, "set_nu": [32, 239, 240, 241, 242], "get_support_vector_count": 32, "support_vector": 32, "nsv": 32, "get_support_vector": 32, "set_support_vector": 32, "bias": [32, 54, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280], "get_bias": [32, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280], "set_bias": 32, "first_class_label": 32, "uniqu": [32, 47, 48, 49, 57, 69, 70, 75, 150, 163, 180, 334, 341, 381, 382], "get_first_class_label": 32, "set_first_class_label": 32, "coeff": [32, 217, 237, 238], "lagrang": 32, "get_coeff": [32, 217, 237, 238], "set_coeff": 32, "second_class_respons": 32, "get_second_class_respons": 32, "set_second_class_respons": 32, "second_class_label": 32, "get_second_class_label": 32, "set_second_class_label": 32, "bia": [32, 172, 364, 382], "get_bia": 32, "set_bia": 32, "first_class_respons": 32, "get_first_class_respons": 32, "set_first_class_respons": 32, "support_indic": 32, "get_support_indic": [32, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280], "set_support_indic": 32, "decision_funct": 32, "get_decision_funct": [32, 237, 238, 239, 240, 245, 246, 247, 248, 280], "set_decision_funct": 32, "svm_two_class_thunder_dense_batch": [32, 172, 173, 201, 202, 250, 329, 363, 364], "svm_two_class_smo_dense_batch": [32, 172, 201, 202, 329, 363, 364], "svm_reg_thunder_dense_batch": [32, 201, 202, 329, 363, 364], "svm_multi_class_thunder_dense_batch": [32, 173, 201, 202, 329, 363, 364], "svm_nu_cls_thunder_dense_batch": [32, 201, 202, 329, 363, 364], "svm_nu_reg_thunder_dense_batch": [32, 201, 202, 329, 363, 364], "column_accessor": [33, 205, 253, 293, 369], "provid": [33, 34, 35, 37, 53, 55, 56, 57, 59, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 172, 173, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 331, 342, 369, 370, 371, 372, 373, 378, 381, 382, 384, 387, 388], "read": [33, 34, 35, 37, 39, 46, 55, 150, 152, 171, 180, 182, 184, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 295, 369, 370, 371, 373, 378, 388], "access": [33, 34, 35, 37, 40, 45, 47, 51, 57, 59, 63, 64, 65, 66, 68, 69, 71, 79, 80, 83, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 122, 124, 126, 127, 130, 138, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 188, 192, 195, 197, 198, 293, 294, 296, 369, 370, 371, 373, 377, 378, 382, 388], "contigu": [33, 35, 47, 48, 181, 182, 184, 369, 370, 371, 372, 378, 380, 381, 382], "homogen": [33, 35, 46, 49, 57, 63, 67, 71, 79, 80, 82, 86, 98, 107, 111, 124, 144, 150, 152, 171, 172, 177, 181, 182, 183, 205, 218, 253, 293, 296, 342, 369, 370, 371, 372, 378, 381, 382], "includ": [33, 34, 35, 37, 53, 55, 57, 61, 70, 86, 97, 101, 107, 127, 140, 158, 160, 171, 177, 185, 187, 190, 191, 193, 195, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 324, 325, 347, 354, 368, 369, 370, 372, 378, 382, 387, 388], "sycl": [33, 34, 35, 37, 51, 54, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 331, 368, 369, 370, 372, 374, 382, 383, 388, 389], "iostream": [33, 34, 35, 37, 205, 211, 215, 216, 217, 218, 219, 221, 222, 227, 236, 253, 258, 259, 266, 267, 275, 276, 277, 278, 292, 293, 294, 296, 369, 370, 372, 388], "main": [33, 34, 35, 37, 55, 57, 71, 97, 102, 124, 140, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 342, 369, 370, 372, 378, 386], "queue": [33, 34, 35, 37, 51, 53, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 293, 294, 296, 324, 325, 369, 370, 372, 374, 381, 388], "default_selector": [33, 34, 35, 37, 292, 293, 294, 296, 369, 370, 372], "host_data": [33, 34, 35, 293, 294, 296, 369, 370], "0f": [33, 34, 35, 37, 211, 258, 292, 293, 294, 296, 369, 370, 372], "5f": [33, 35, 293, 296, 369, 370], "1f": [33, 35, 293, 296, 369, 370], "2f": [33, 35, 293, 296, 369, 370], "7f": [33, 35, 293, 296, 369, 370], "9f": [33, 35, 293, 296, 369, 370], "shared_data": [33, 34, 35, 293, 294, 296, 369, 370], "malloc_shar": [33, 34, 35, 253, 258, 293, 294, 296, 369, 370], "event": [33, 35, 293, 296, 369, 370, 382], "memcpi": [33, 34, 35, 253, 258, 293, 294, 296, 369, 370], "sizeof": [33, 34, 35, 55, 172, 253, 258, 293, 294, 296, 369, 370], "homogen_t": [33, 35, 48, 205, 228, 249, 253, 293, 296, 369, 370, 380, 381], "wrap": [33, 34, 35, 37, 47, 48, 205, 211, 228, 292, 293, 294, 296, 369, 370, 372, 381], "acc": [33, 34, 35, 205, 211, 253, 258, 274, 293, 294, 296, 369, 370, 388], "block": [33, 34, 35, 37, 47, 48, 49, 54, 65, 66, 69, 96, 97, 100, 104, 106, 114, 118, 119, 122, 123, 144, 148, 149, 150, 152, 155, 156, 169, 170, 171, 180, 181, 182, 184, 193, 199, 217, 218, 292, 293, 296, 331, 369, 370, 371, 372, 378, 380, 381, 382, 386, 387, 389], "pull": [33, 34, 35, 205, 211, 253, 258, 274, 293, 294, 296, 369, 370, 371, 388], "get_count": [33, 34, 35, 37, 49, 205, 211, 253, 258, 292, 293, 294, 296, 369, 370, 372, 388], "free": [33, 34, 35, 37, 45, 47, 48, 49, 51, 53, 153, 293, 294, 296, 369, 370, 372, 387], "qualifi": [33, 34, 35], "least": [33, 34, 35, 47, 48, 54, 56, 62, 70, 108, 115, 144, 146, 150, 152, 161, 171, 191, 193, 331, 382], "int32_t": [33, 34, 35, 43, 44, 47, 48, 215, 218, 228, 234, 274, 382], "u": [33, 34, 35, 40, 54, 98, 128, 129, 137, 139, 140, 141, 142, 169, 170, 171, 341, 357, 358, 360, 382, 385], "enable_if_t": [33, 34, 35], "is_const_v": [33, 34, 35], "table_build": [33, 35], "builder": [33, 35, 72, 92, 93, 113, 116, 172, 173, 191, 217, 218, 378, 382], "method": [33, 34, 35, 37, 43, 44, 45, 47, 48, 49, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 138, 139, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 186, 187, 188, 192, 193, 195, 197, 198, 214, 219, 222, 223, 227, 229, 230, 231, 234, 239, 240, 241, 242, 243, 244, 245, 246, 249, 260, 261, 262, 263, 264, 265, 266, 269, 270, 274, 277, 278, 282, 286, 287, 288, 291, 298, 301, 304, 306, 308, 310, 312, 314, 316, 319, 320, 321, 322, 323, 327, 330, 334, 368, 371, 382, 383], "data_t": [33, 35], "column_index": 33, "rang": [33, 34, 35, 37, 40, 41, 42, 45, 49, 55, 71, 91, 126, 171, 180, 191, 217, 218, 292, 331, 371, 372], "row_rang": [33, 34, 35], "directli": [33, 34, 35, 55, 70, 378], "within": [33, 34, 35, 37, 47, 48, 49, 62, 70, 71, 107, 146, 176, 199, 342, 371, 375, 376, 378, 379, 380], "possibl": [33, 34, 35, 47, 48, 55, 57, 70, 71, 75, 76, 77, 91, 101, 124, 176, 180, 182, 185, 188, 193, 341, 342, 371, 372, 382, 388], "case": [33, 34, 35, 55, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 71, 72, 73, 75, 82, 85, 86, 87, 92, 93, 98, 107, 111, 113, 116, 117, 118, 119, 124, 127, 131, 132, 137, 139, 140, 141, 142, 150, 152, 153, 154, 161, 171, 172, 173, 177, 180, 182, 184, 192, 211, 336, 341, 342, 346, 364, 371, 382, 385, 388], "immut": [33, 34, 35, 37, 292, 372, 377, 378, 381, 382], "convert": [33, 34, 35, 55, 180, 181, 237, 239, 241, 243, 245, 247, 378], "mutabl": [33, 34, 35, 37, 292, 372], "reus": [33, 34, 35], "reset": [33, 34, 35, 37], "either": [33, 34, 35, 37, 55, 60, 88, 89, 90, 97, 100, 140, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 341, 378, 382], "enough": [33, 34, 35, 55], "pointer": [33, 34, 35, 37, 45, 47, 48, 49, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 76, 77, 79, 80, 83, 86, 87, 88, 89, 90, 91, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 117, 118, 119, 122, 123, 126, 127, 130, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 172, 173, 182, 185, 187, 188, 189, 192, 193, 195, 197, 198, 292, 371, 372, 388], "push": [33, 35], "csr_accessor": [34, 201, 202, 250, 294], "storag": [34, 86, 183, 184, 211, 258, 294, 372, 378], "format": [34, 49, 97, 113, 131, 132, 133, 134, 169, 170, 180, 181, 183, 184, 211, 258, 294, 371, 373, 375, 377, 378, 379, 382], "offset": [34, 47, 69, 97, 100, 106, 211, 258, 294], "host": [34, 51, 56, 190, 258, 294, 331, 374, 382], "11": [34, 54, 58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 101, 102, 107, 108, 110, 111, 113, 115, 120, 124, 126, 127, 131, 132, 144, 145, 146, 150, 160, 164, 172, 173, 180, 205, 211, 253, 258, 294, 334, 342, 344, 349, 350, 351, 352, 357, 358, 360, 361, 364, 389], "8": [34, 54, 107, 160, 205, 211, 213, 253, 258, 260, 261, 262, 294, 344], "host_column_indic": [34, 294], "host_row_offset": [34, 294], "7": [34, 55, 113, 116, 172, 205, 211, 228, 253, 258, 294, 344, 356, 389], "element_count": [34, 211, 258, 294], "share": [34, 37, 45, 47, 48, 49, 51, 258, 292, 294, 372, 378, 381, 387], "shared_column_indic": [34, 294], "shared_row_offset": [34, 294], "data_ev": [34, 258, 294], "column_indices_ev": [34, 258, 294], "row_offsets_ev": [34, 258, 294], "csr_tabl": [34, 47, 211, 258, 294, 379], "sparse_index": [34, 47, 49, 258, 294], "one_bas": [34, 47, 49, 258, 294], "third": [34, 35, 55, 97, 106, 108, 258, 294, 296, 370, 382], "block_data": [34, 258, 294], "block_column_indic": [34, 258, 294], "block_row_offset": [34, 258, 294], "input": [34, 37, 38, 40, 55, 58, 59, 60, 62, 67, 70, 71, 72, 73, 77, 84, 85, 88, 89, 90, 91, 95, 98, 101, 107, 108, 110, 113, 115, 116, 124, 129, 139, 142, 150, 152, 162, 163, 166, 168, 171, 172, 179, 180, 181, 184, 193, 194, 207, 208, 209, 210, 218, 254, 255, 256, 257, 286, 304, 306, 334, 337, 341, 342, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 360, 373, 378, 382, 387], "tupl": 34, "array_d": 34, "array_i": 34, "those": [34, 53, 71, 72, 73, 75, 76, 77, 91, 92, 93, 101, 116, 172, 184, 342, 354, 364, 382], "scheme": [34, 47, 58, 59, 62, 71, 86, 87, 107, 172, 180, 364], "layout": [34, 46, 47, 48, 63, 67, 79, 80, 86, 97, 107, 111, 124, 144, 150, 153, 155, 156, 170, 177, 181, 182, 183, 184, 378, 381, 382], "zero_bas": [34, 47, 49], "column_indic": [34, 47, 211, 258], "row_offset": [34, 47, 211, 258, 379, 382], "thei": [34, 37, 55, 61, 149, 162, 192, 193, 292, 331, 342, 348, 372, 382, 387], "row_accessor": [35, 274, 296, 370, 388], "exampl": [36, 39, 46, 52, 71, 75, 87, 110, 112, 125, 152, 167, 191, 200, 331, 335, 339, 340, 343, 345, 348, 353, 355, 362, 363, 365, 371, 374, 377, 381, 382, 384, 387, 389], "compress": [36, 46, 49, 110, 177, 331, 378, 382], "spars": [36, 46, 98, 110, 150, 177, 181, 183, 184, 211, 258, 294, 375, 376, 377, 378, 381, 382], "csr": [36, 46, 49, 64, 65, 66, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 117, 118, 119, 121, 122, 123, 177, 181, 182, 183, 211, 237, 239, 241, 243, 245, 247, 258, 294, 375, 376, 377, 378, 381, 382], "divid": [37, 54, 62, 71, 97, 164, 337, 342, 382], "sever": [37, 145, 177, 180, 182, 184, 192, 193, 371, 372, 378, 386], "re": [37, 55, 61, 97, 98, 181, 182, 211], "static": [37, 47, 48, 368, 388], "simplifi": [37, 54], "wai": [37, 40, 55, 71, 72, 92, 93, 107, 150, 178, 180, 183, 184, 341, 342, 364, 371, 377, 378, 388], "doe": [37, 47, 48, 55, 71, 83, 87, 91, 101, 107, 113, 116, 119, 124, 127, 128, 141, 147, 172, 173, 177, 180, 181, 182, 183, 192, 342, 355, 356, 374, 386, 387], "pass": [37, 57, 59, 61, 63, 64, 65, 66, 68, 69, 71, 79, 80, 83, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 114, 116, 117, 118, 119, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 138, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 180, 182, 195, 197, 198, 341, 374, 388], "own": [37, 47, 48, 61, 163, 180, 185, 192, 372, 378], "ownership": [37, 47, 48, 292, 378], "fill": [37, 82, 83, 84, 85, 87, 140, 153, 292, 372], "scalar": [37, 55, 88, 89, 90, 378], "nullptr": [37, 47, 48, 130, 141, 372], "without": [37, 49, 55, 71, 72, 73, 91, 128, 140, 152, 181, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 292, 342, 372, 378, 382, 387], "mutable_data": [37, 372], "other": [37, 43, 44, 47, 48, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 79, 80, 82, 86, 98, 106, 107, 117, 118, 119, 124, 143, 144, 150, 152, 153, 171, 172, 181, 182, 183, 186, 188, 357, 358, 360, 373, 374, 378, 381, 382, 383, 388], "move": [37, 43, 44, 45, 49, 75, 153, 365], "delet": [37, 47, 48, 269, 372], "member": [37, 87, 382], "constdelet": [37, 48], "shared_ptr": [37, 55], "user": [37, 47, 48, 55, 96, 97, 98, 100, 135, 139, 141, 162, 180, 182, 192, 200, 292, 336, 372, 374, 378, 382, 387], "ref": [37, 55], "alias": [37, 40], "referenc": 37, "unmanag": 37, "hold": [37, 49, 51, 55, 57, 83, 87, 97, 100, 124, 184, 372], "is_same_v": 37, "impl_t": 37, "impl": 37, "replac": [37, 49, 71, 75, 91, 107, 128, 140, 150, 342], "swap": [37, 43, 44, 45, 49], "get_mutable_data": [37, 292, 372], "has_mutable_data": [37, 292, 372], "othewis": 37, "throw": [37, 55, 185, 187], "domain_error": 37, "noexcept": [37, 40, 49], "need_mutable_data": [37, 292, 372], "get_siz": 37, "byte": [37, 172, 189, 378, 382], "current": [37, 55, 59, 66, 69, 72, 87, 92, 93, 107, 114, 119, 122, 123, 139, 145, 149, 150, 152, 155, 166, 168, 169, 171, 180, 182, 185, 331, 336, 342, 348, 354, 355, 356, 378, 388], "boundari": [37, 60, 189], "check": [37, 47, 48, 72, 92, 93, 113, 116, 128, 137, 139, 140, 141, 142, 172, 173, 187, 188, 193], "get_slic": 37, "last": [37, 47, 48, 86, 103, 104, 106, 113, 116, 140, 142, 172, 180, 184, 193, 200, 379, 382, 386], "slice": 37, "list": [37, 45, 53, 55, 105, 113, 114, 116, 159, 172, 173, 180, 187, 192, 193, 195, 197, 198, 201, 371, 372, 378, 381], "brief": [37, 53, 55, 372], "introduct": [37, 53, 54, 269, 331, 333, 372], "api": [37, 45, 47, 87, 113, 116, 172, 173, 199, 331, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 369, 370, 372, 373, 375, 376, 379, 380, 381, 382, 389], "scenario": [37, 177, 180, 182, 191, 192, 193, 372, 378, 386, 387, 388], "string": [37, 38, 55, 180, 187, 219, 229, 230, 231, 262, 265, 266, 292, 372, 374, 382], "print_properti": [37, 292, 372], "data_count": [37, 292, 372], "arr_data": [37, 292, 372], "ones": [37, 116, 144, 145, 146, 172, 292, 364, 372], "arr_on": [37, 292, 372], "arr_mdata": [37, 292, 372], "still": [37, 55, 292, 372], "submit": [37, 292, 372], "handler": [37, 292, 372], "cgh": [37, 292, 372], "mdata": [37, 292, 372], "cone": [37, 292, 372], "parallel_for": [37, 218, 292, 372], "array_addit": [37, 292, 372], "idx": [37, 55, 292, 372], "wait": [37, 180, 253, 292, 372], "io": [38, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "enum": [38, 49, 382], "read_opt": 38, "uint64_t": 38, "parse_head": 38, "default_delimit": 38, "default_read_opt": 38, "data_sourc": [38, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 295, 373, 374, 388], "file_nam": 38, "delimit": [38, 373, 382], "opt": 38, "get_file_nam": 38, "get_delimit": 38, "get_read_opt": 38, "name": [38, 45, 176, 180, 182, 185, 186, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 373, 374, 388], "get_filenam": 38, "charact": [38, 55, 382], "separ": [38, 55, 75, 102, 172, 191, 348, 357, 358, 360, 364, 382], "get_delimt": 38, "dure": [38, 55, 71, 75, 86, 101, 107, 139, 153, 180, 182, 187, 192, 193, 342, 354, 365, 378, 382], "line": [38, 55, 382], "record": [38, 72, 382], "read_arg": [38, 374], "attribut": [38, 40, 43, 44, 45, 177, 182, 378, 382], "datasourc": [38, 176, 180, 374], "result": [38, 53, 55, 57, 59, 60, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 79, 80, 83, 86, 87, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 114, 116, 117, 118, 122, 126, 127, 128, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 172, 173, 180, 182, 188, 192, 193, 195, 197, 198, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 260, 261, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 283, 286, 287, 289, 299, 304, 317, 324, 325, 328, 334, 336, 337, 341, 342, 344, 354, 361, 364, 365, 378, 382, 386, 387, 388], "csv": [39, 46, 180, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 295, 374, 378, 382, 388], "arg": [39, 46, 124, 336, 337, 354, 378], "preview": [40, 43, 44, 45, 51, 53, 206, 215, 216, 217, 218, 228, 234, 236, 249, 324, 325], "service_funct": [40, 215, 216, 218], "you": [40, 55, 56, 57, 59, 61, 63, 64, 65, 66, 68, 69, 71, 72, 76, 77, 79, 80, 86, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 113, 114, 116, 117, 118, 119, 122, 123, 126, 127, 128, 130, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 186, 188, 191, 192, 193, 195, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 331, 336, 368, 378, 382, 389], "introduc": [40, 55, 371], "graph_trait": [40, 45, 377], "shown": [40, 75, 111, 150, 180, 365, 378, 388], "below": [40, 45, 55, 57, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 79, 80, 83, 86, 87, 92, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 134, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 182, 195, 197, 198, 334, 342, 365, 371, 378, 383, 388], "shorter": 40, "notat": [40, 159, 331, 333, 344, 346, 384], "graph_alloc": 40, "allocator_typ": [40, 45], "graph_user_value_typ": [40, 45], "vertex_user_value_typ": [40, 45], "edge_user_value_typ": [40, 45], "vertex_typ": [40, 45, 215, 228, 234], "vertex_size_typ": [40, 45], "edge_size_typ": [40, 45], "vertex_edge_size_typ": [40, 45, 216], "vertex_outward_edge_size_typ": [40, 45, 215], "vertex_edge_iterator_typ": [40, 45], "const_vertex_edge_iterator_typ": [40, 45], "vertex_edge_range_typ": 40, "const_vertex_edge_range_typ": 40, "const_vertex_outward_edge_range_typ": 40, "ha": [40, 48, 49, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 110, 113, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 180, 192, 354, 367, 378, 382, 385], "return_typ": 40, "get_": [40, 374], "graph_el": 40, "get_vertex_count": [40, 41, 42, 215, 216, 218], "get_edge_count": [40, 41, 42, 215, 216], "get_vertex_degre": [40, 42, 216], "get_vertex_neighbor": [40, 42, 216], "get_vertex_outward_degre": [40, 41, 215], "outward": [40, 41, 45], "get_vertex_outward_neighbor": [40, 41, 215], "get_edge_valu": [40, 41, 215], "v": [40, 54, 55, 56, 71, 76, 77, 106, 120, 142, 169, 170, 171, 341, 342, 346, 357, 358, 360, 361, 378, 382, 385], "sourc": [40, 41, 46, 50, 55, 71, 150, 152, 171, 176, 177, 184, 193, 199, 331, 332, 382, 388], "destin": [40, 41, 55], "graph_typ": [40, 45], "my_graph_typ": 40, "valid": [40, 55, 178, 199, 331], "concept": [40, 45, 49, 51, 177, 199, 331, 333, 372, 374, 375, 376, 377, 381, 382, 387], "adjac": [40, 45, 46, 346, 377, 382], "directed_adjacency_vector_graph": [43, 45, 215, 234, 375], "vertexvalu": [43, 44, 45], "empty_valu": [43, 44, 45], "edgevalu": [43, 44, 45], "graphvalu": [43, 44, 45], "indextyp": [43, 44, 45, 55], "destruct": [43, 44, 182], "undirected_adjacency_vector_graph": [44, 45, 206, 216, 217, 218, 228, 236, 249, 376], "_graph": 45, "suffix": 45, "them": [45, 47, 55, 56, 86, 107, 127, 131, 132, 133, 142, 144, 146, 156, 170, 180, 337, 346, 378, 382, 388], "topologi": [45, 188, 378, 382], "how": [45, 49, 51, 53, 55, 92, 93, 177, 180, 372, 388], "increment": [45, 49, 51, 54, 200, 372, 386], "decrement": [45, 49, 51, 55, 372], "goe": [45, 49, 51, 55, 152, 171, 372, 378], "scope": [45, 47, 48, 49, 51, 372], "graph_nam": 45, "int32": 45, "17": 45, "iso": [45, 113, 116, 172], "iec": [45, 113, 116, 172], "14882": [45, 113, 116, 172], "2017": [45, 54], "compliant": 45, "tag": [45, 51, 55], "absenc": [45, 382], "well": [45, 49, 55, 58, 59, 124, 177, 180, 182, 347], "servic": [45, 46, 50, 55, 56, 106, 182, 185, 186, 187, 331], "associ": [45, 54, 56, 60, 64, 65, 66, 75, 101, 110, 114, 117, 118, 119, 122, 123, 127, 174, 176, 177, 180, 181, 182, 331, 341, 347, 354, 365, 367, 372], "special": [45, 72, 73, 92, 93, 108, 137, 139, 140, 141, 142, 177, 181, 184, 382], "const_graph_user_value_typ": 45, "vertex_iter": 45, "const_vertex_iter": 45, "edge_typ": 45, "edge_iter": 45, "Not": [45, 62, 65, 66, 68, 69, 72, 76, 82, 86, 89, 90, 92, 96, 97, 100, 103, 104, 105, 106, 114, 116, 118, 119, 121, 122, 123, 127, 131, 132, 133, 138, 141, 142, 147, 148, 149, 153, 156, 170, 173, 383], "const_edge_iter": 45, "vertex_outward_edge_iterator_typ": 45, "const_vertex_outward_edge_iterator_typ": 45, "vertex_edge_rang": 45, "pair": [45, 55, 96, 98, 102, 127, 140, 147, 151, 173, 342, 349, 350, 351, 352, 354, 357, 358, 360, 382], "const_vertex_edge_rang": 45, "vertex_outward_edge_rang": 45, "const_vertex_outward_edge_rang": 45, "accessor": [46, 50, 55, 331, 382], "trait": [46, 375, 376, 377], "relat": [46, 55, 172, 180, 364, 374, 377, 378, 381], "metadata": [46, 47, 48, 176, 381, 382], "data_point": [47, 48], "column_indices_point": 47, "row_offsets_point": 47, "remain": [47, 48, 60, 131, 132, 140, 153, 336], "side": [47, 48, 55, 57, 374], "columns_indic": [47, 379, 382], "ordin": [47, 48, 49, 72, 75, 92, 93, 176, 177, 180, 378, 382], "integ": [47, 48, 55, 57, 59, 68, 70, 71, 82, 88, 89, 90, 92, 93, 101, 103, 104, 107, 111, 116, 124, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 145, 147, 173, 176, 187, 334, 336, 337, 342, 382], "cast": [47, 48, 55], "equival": [47, 48, 55, 73, 342], "constdatadelet": 47, "constcolumnindicesdelet": 47, "constrowoffsetsdelet": 47, "data_delet": [47, 48], "column_indices_delet": 47, "row_offsets_delet": 47, "get_non_zero_count": 47, "get_index": 47, "No": [47, 48, 54, 181, 200, 348, 354], "actual": [47, 48, 62, 103, 158, 160, 178, 181], "get_column_indic": 47, "get_row_offset": 47, "data_layout": [48, 49], "row_major": [48, 49], "column_major": [48, 49], "subtyp": [49, 51, 379, 380], "get_column_count": [49, 205, 253, 260, 261, 388], "get_row_count": [49, 249, 274, 382], "table_metadata": [49, 381], "get_metadata": 49, "addit": [49, 53, 54, 55, 59, 62, 68, 69, 72, 73, 76, 82, 84, 85, 91, 92, 93, 101, 104, 111, 116, 137, 139, 140, 141, 142, 159, 163, 173, 180, 181, 187, 368, 374, 378, 382], "about": [49, 54, 55, 69, 75, 107, 124, 159, 180, 181, 183, 186, 187, 199, 200, 372, 378, 382], "runtim": [49, 55, 113, 116, 172, 173, 381, 383, 388], "sub": [49, 55, 140, 178, 381], "get_data_layout": 49, "feature_count": 49, "data_typ": 49, "feature_typ": 49, "dtype": 49, "ftype": 49, "get_feature_count": 49, "get_feature_typ": 49, "feature_index": 49, "get_data_typ": 49, "bulk": 49, "unknown": [49, 181, 182], "undefin": [49, 55], "logic": [49, 55, 183, 184, 378, 382], "nomin": [49, 54, 145, 378, 382], "interv": [49, 57, 60, 71, 77, 85, 98, 159, 342, 356, 378, 382], "ratio": [49, 161, 378, 382], "multipl": [50, 55, 88, 113, 140, 172, 177, 188, 192, 331, 333, 364, 382], "spmd": [50, 51, 52, 324, 325, 331, 333, 334, 336, 354, 361, 382, 384], "commun": [50, 52, 53, 54, 193, 199, 228, 324, 325, 331, 382, 387], "backend": [51, 53, 324, 325, 331, 333, 382], "There": [51, 55, 71, 107, 178, 342, 357, 358, 360], "both": [51, 55, 62, 70, 75, 101, 102, 108, 111, 114, 127, 172, 176, 180, 181, 334, 346, 364, 365, 372, 382, 383], "device_memory_access": 51, "assum": [51, 65, 66, 69, 75, 86, 96, 97, 100, 104, 106, 114, 118, 119, 122, 123, 144, 145, 146, 148, 149, 155, 156, 169, 170, 180, 193, 341], "collect": [51, 53, 55, 65, 69, 86, 97, 100, 104, 106, 107, 114, 118, 122, 127, 130, 147, 148, 151, 156, 159, 161, 162, 163, 170, 177, 180, 331, 333, 378, 382], "control": [51, 111, 183, 382], "obligatori": 51, "asynchron": [51, 55, 180, 193, 387], "usm": [52, 388], "request": [52, 68, 71, 101, 103, 111, 116, 127, 130, 131, 132, 133, 134, 147, 162, 173, 181, 182], "reducion": 52, "consist": [53, 55, 57, 72, 92, 93, 166, 168, 180, 182, 336, 344, 347, 382], "infer": [53, 54, 213, 214, 220, 221, 222, 223, 225, 226, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 263, 264, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 288, 298, 301, 316, 330, 374, 382, 385, 388], "accept": [53, 57, 63, 64, 65, 66, 68, 69, 76, 79, 80, 83, 86, 87, 96, 97, 99, 100, 102, 103, 104, 105, 106, 114, 117, 118, 119, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 180, 192, 195, 197, 198, 374, 382], "expect": [53, 56, 158, 159, 160, 174, 180, 331, 354, 387], "rank": [53, 98], "start": [53, 55, 57, 62, 75, 86, 91, 97, 100, 101, 106, 107, 138, 140, 177, 180, 200, 211, 218, 332, 336, 365, 368, 378, 382], "simul": [53, 54, 63, 90], "ccl": [53, 324], "mpi": [53, 193, 325], "particular": [53, 55, 72, 87, 107, 141, 142, 176, 177, 180, 181, 183, 193, 199, 382], "ifndef": [53, 55, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 324, 325], "onedal_data_parallel": [53, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 324, 325], "endif": [53, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 324, 325], "comm": [53, 324, 325], "make_commun": [53, 324, 325], "rank_id": [53, 324, 325], "get_rank": [53, 249, 324, 325], "result_train": [53, 213, 214, 219, 220, 229, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 266, 267, 275, 277, 278, 280, 324, 325], "local_input": [53, 324, 325], "adams2003": [54, 139], "adam": 54, "robert": 54, "john": 54, "jf": 54, "fournier": 54, "sobolev": 54, "vol": 54, "140": 54, "elsevi": 54, "2003": 54, "agrawal94": [54, 57], "rakesh": 54, "agraw": 54, "ramakrishnan": 54, "srikant": 54, "mine": [54, 57, 99, 100, 197, 199, 347], "rule": [54, 56, 60, 75, 76, 125, 174, 331, 336, 347, 364, 365], "proceed": 54, "20th": 54, "vldb": 54, "confer": 54, "santiago": 54, "chile": 54, "1994": 54, "arthur2007": [54, 105, 106, 107], "arthur": 54, "vassilvitskii": 54, "advantag": [54, 55, 108, 124], "care": [54, 55], "eighteenth": 54, "annual": 54, "acm": 54, "siam": 54, "symposium": 54, "societi": 54, "industri": 54, "philadelphia": 54, "pa": 54, "usa": 54, "2007": 54, "pp": 54, "1027": 54, "1035": 54, "http": [54, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "ilpub": 54, "stanford": 54, "edu": 54, "8090": 54, "778": 54, "2006": 54, "13": 54, "pdf": 54, "bahmani2012": [54, 105, 106, 107], "bahmani": 54, "moselei": 54, "vattani": 54, "kumar": 54, "scalabl": [54, 389], "endow": 54, "2012": 54, "org": [54, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "pvldb": 54, "vol5": 54, "p622_bahmanbahmani_vldb2012": 54, "ben2005": [54, 144, 146], "ben": 54, "gal": 54, "detect": [54, 55, 56, 174, 187, 188, 331, 382], "maimon": 54, "o": [54, 68, 69, 71, 76, 77, 107, 152, 171, 342], "rockach": 54, "l": [54, 63, 71, 86, 91, 92, 93, 105, 106, 107, 116, 128, 133, 140, 141, 142, 160, 336, 342, 354, 355, 356, 357, 358, 360, 368], "ed": 54, "knowledg": 54, "discoveri": [54, 57, 347], "handbook": 54, "complet": [54, 71, 72, 86, 92, 93, 113, 116, 172, 173, 182, 201, 378, 382, 387], "practition": 54, "research": 54, "kluwer": 54, "academ": 54, "publish": 54, "2005": 54, "isbn": 54, "387": 54, "24435": 54, "bentley80": [54, 367], "bentlei": 54, "multidimension": [54, 101], "conquer": 54, "23": 54, "214": 54, "229": 54, "1980": 54, "billor2000": [54, 145], "nedret": 54, "billor": 54, "ali": 54, "hadib": 54, "paul": 54, "f": [54, 55, 71, 72, 75, 86, 91, 92, 93, 97, 98, 116, 128, 129, 130, 131, 132, 133, 134, 139, 140, 142, 158, 159, 160, 205, 253, 342, 365], "velleman": 54, "bacon": [54, 143], "adapt": [54, 58, 59, 116, 128, 136, 174], "computation": [54, 150, 152, 171, 191, 371], "effici": [54, 55, 63, 124, 125, 181], "34": 54, "279": 54, "298": 54, "2000": 54, "bishop2006": [54, 116], "christoph": 54, "bishop": 54, "recognit": 54, "198": 54, "springer": 54, "scienc": 54, "busi": 54, "media": 54, "llc": 54, "31073": 54, "boser92": [54, 172, 364], "boser": [54, 172], "guyon": 54, "vapnik": 54, "marginclassi\ufb01": 54, "fifth": [54, 106], "workshop": 54, "theori": 54, "144": 54, "152": 54, "press": 54, "1992": 54, "leo": 54, "breiman": 54, "volum": 54, "45": [54, 212, 259], "issu": [54, 55, 187], "32": [54, 82, 104, 137, 138, 140, 141, 142, 189], "2001": 54, "jerom": 54, "friedman": [54, 62], "richard": 54, "olshen": 54, "charl": 54, "stone": 54, "chapman": 54, "hall": 54, "1984": 54, "bro07": [54, 150, 341], "bro": 54, "acar": 54, "kolda": 54, "resolv": 54, "ambigu": [54, 55, 150, 341], "singular": [54, 56, 174, 331, 341], "sandia": 54, "report": [54, 113, 116, 130, 172, 173], "sand2007": 54, "6422": 54, "unlimit": [54, 71, 76, 77, 91], "releas": [54, 55, 71, 180, 200, 388, 389], "octob": 54, "byrd2015": [54, 140], "byrd": 54, "hansen": 54, "jorg": 54, "noced": 54, "singer": 54, "stochast": [54, 91, 94, 116, 128, 136, 137, 140, 174], "quasi": 54, "newton": [54, 60], "larg": [54, 55, 57, 90, 110, 116, 344], "2015": 54, "arxiv": 54, "1401": 54, "7020v2": 54, "oc": 54, "ab": 54, "chen2016": [54, 91], "chen": 54, "guestrin": 54, "xgboost": 54, "boost": [54, 56, 58, 59, 60, 62, 75, 185, 191, 331, 365], "system": [54, 55, 63, 90, 95, 98, 113, 188, 194, 196, 200, 388], "kdd": 54, "16": [54, 213, 260, 261, 262], "22nd": 54, "sigkdd": 54, "carletti2021": [54, 346], "carletti": 54, "vincenzo": 54, "et": 54, "al": [54, 95, 96, 97, 98, 99, 100], "multi": [54, 55, 56, 58, 59, 60, 62, 90, 157, 162, 172, 188, 191, 193, 331, 384, 389], "architectur": [54, 55], "comparison": [54, 63, 382], "four": [54, 55, 97], "iapr": 54, "spr": 54, "syntact": 54, "sspr": 54, "cham": 54, "2021": [54, 203, 206, 207, 209, 223, 225, 228, 232, 234, 235, 238, 240, 242, 244, 251, 254, 256, 262, 265, 269, 270, 272, 388], "defazio2014": [54, 141], "defazio": 54, "aaron": 54, "franci": 54, "bach": 54, "simon": 54, "lacost": 54, "julien": 54, "saga": [54, 108, 110, 116, 141], "strongli": [54, 200], "convex": [54, 91, 128, 364], "composit": [54, 128], "advanc": 54, "neural": 54, "2014": 54, "demmel90": [54, 341], "demmel": 54, "kahan": 54, "accur": [54, 57, 75], "bidiagon": 54, "matric": [54, 56, 63, 86, 97, 98, 147, 148, 149, 150, 159, 171, 174, 181, 184, 331, 338, 341, 349, 350, 351, 352, 378], "sci": 54, "stat": 54, "1990": 54, "873": 54, "912": 54, "dempster77": [54, 86], "dempster": 54, "laird": 54, "rubin": 54, "likelihood": [54, 86, 116], "incomplet": [54, 86, 178], "em": 54, "royal": 54, "soc": 54, "ser": 54, "39": 54, "1977": 54, "duchi2011": [54, 137], "elad": 54, "hazan": 54, "duchi": 54, "yoram": 54, "subgradi": [54, 116, 128, 136, 174], "onlin": [54, 55, 67, 112, 120, 124, 154, 177, 194, 331, 333, 378, 382, 384], "journal": 54, "12": [54, 173, 344], "21212159": 54, "2011": [54, 113, 116, 172], "martin": 54, "ester": 54, "han": 54, "peter": 54, "kriegel": 54, "j\u00f6rg": 54, "sander": 54, "xiaowei": 54, "xu": 54, "discov": [54, 57, 365], "databas": [54, 177, 180, 187, 378], "2nd": 54, "226": 54, "231": 54, "1996": 54, "fan05": [54, 172, 364], "rong": 54, "en": 54, "fan": 54, "pai": [54, 55], "hsuen": 54, "chih": 54, "jen": 54, "lin": 54, "work": [54, 62, 97, 124, 150, 152, 162, 171, 172, 177, 182, 195, 198, 331, 364, 378, 383, 386], "1889": 54, "1918": 54, "fleischer2008": [54, 98], "rudolf": 54, "fleischer": 54, "jinhui": 54, "aspect": [54, 162], "4th": 54, "aaim": 54, "2008": 54, "shanghai": 54, "china": 54, "june": 54, "25": 54, "freund99": [54, 58, 60], "yoav": 54, "freund": [54, 58, 60], "schapir": 54, "view": [54, 177, 378], "japanes": 54, "artifici": 54, "intellig": 54, "14": [54, 389], "771": 54, "780": 54, "1999": 54, "friedman98": [54, 59], "trevor": 54, "hasti": 54, "tibshirani": 54, "1998": 54, "friedman00": [54, 62], "annal": 54, "28": 54, "337": 54, "407": 54, "friedman2010": [54, 108, 111], "rob": 54, "path": [54, 70, 101, 188, 234, 367, 388], "coordin": [54, 108, 110, 111, 128, 136, 137, 145, 172, 174, 364], "descent": [54, 91, 108, 110, 111, 116, 128, 136, 174], "softwar": [54, 183, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "33": 54, "2010": 54, "friedman2017": [54, 166, 168], "freund01": [54, 60], "version": [54, 55, 56, 59, 72, 73, 87, 101, 150, 152, 166, 168, 171, 180, 184, 185, 190, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 331, 332, 336, 368, 384, 388, 389], "43": 54, "293": 54, "318": 54, "gross2014": [54, 346, 382], "gross": 54, "yellen": 54, "zhang": 54, "edit": 54, "hastie2009": [54, 86, 108, 110, 113, 116, 131, 132, 159], "seri": 54, "2009": 54, "corr": 54, "7th": 54, "print": [54, 55, 211, 258, 262, 265, 388], "2013": 54, "decemb": 54, "hoerl70": [54, 108, 110, 115], "hoerl": 54, "kennard": 54, "ridg": [54, 56, 108, 110, 111, 191, 331], "estim": [54, 57, 59, 71, 72, 86, 101, 107, 108, 110, 113, 115, 117, 118, 119, 121, 122, 123, 124, 128, 130, 140, 144, 146, 162, 178, 191, 342, 354], "nonorthogon": 54, "technometr": 54, "feb": 54, "1970": 54, "55": 54, "67": 54, "hsu02": [54, 173], "wei": 54, "hsu": 54, "multiclass": [54, 61, 173], "ieee": 54, "transact": [54, 57], "network": [54, 150, 152, 171], "415": 54, "425": 54, "2002": 54, "hu2008": [54, 98], "yifan": 54, "hu": 54, "yehuda": 54, "koren": 54, "chri": 54, "volinski": 54, "collabor": [54, 98], "filter": [54, 98, 177, 180, 378], "implicit": [54, 55, 56, 191, 331], "feedback": 54, "icdm": 54, "08": [54, 137], "eighth": 54, "james2013": [54, 101, 115, 125], "gareth": 54, "jame": 54, "daniela": 54, "witten": 54, "joachims99": [54, 172, 364], "thorsten": 54, "joachim": 54, "make": [54, 55, 61, 91, 102, 107, 162, 182, 185, 191, 199, 331, 336, 374, 388, 389], "practic": [54, 55], "sch\u00f6lkopf": 54, "burg": 54, "smola": 54, "169": 54, "184": 54, "mit": 54, "cambridg": 54, "ma": 54, "lang87": [54, 341], "lang": 54, "algebra": [54, 184], "verlag": 54, "york": 54, "1987": 54, "li2015": [54, 101], "li": [54, 160], "shengren": 54, "nina": 54, "amenta": 54, "gpu": [54, 56, 64, 68, 71, 101, 102, 103, 105, 116, 117, 129, 130, 133, 142, 147, 148, 149, 172, 201, 331, 333, 334, 336, 338, 341, 342, 348, 354, 361, 368, 382, 384, 388, 389], "259": 54, "270": 54, "lloyd82": [54, 107, 336], "stuart": 54, "quantiz": 54, "pcm": 54, "1982": 54, "1982pp": 54, "129": 54, "137": 54, "matsumoto98": [54, 89], "matsumoto": 54, "nishimura": 54, "mersenn": [54, 89, 90], "twister": [54, 89, 90], "623": 54, "equidistribut": 54, "pseudo": 54, "30": [54, 75], "januari": 54, "matsumoto2000": [54, 90], "dynam": [54, 55, 368], "creation": [54, 55, 179, 374, 378, 382], "pseudorandom": [54, 89, 90], "mont": [54, 63, 90], "carlo": [54, 63, 90], "niederreit": 54, "spanier": 54, "56": 54, "69": 54, "www": [54, 57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 186, 188, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "hiroshima": 54, "ac": 54, "jp": 54, "7em": 54, "mat": 54, "mt": 54, "dc": 54, "html": 54, "mitchell97": [54, 75, 76], "tom": 54, "mitchel": 54, "mcgraw": 54, "hill": 54, "educ": 54, "1997": 54, "mu2014": [54, 142], "mu": [54, 142, 160], "tong": 54, "yuqiang": 54, "alexand": 54, "mini": 54, "cmu": 54, "muli": 54, "minibatch_sgd": 54, "openclspec": [54, 382], "khrono": [54, 382], "opencl": [54, 368, 382, 388], "specif": [54, 55, 61, 67, 71, 87, 89, 91, 114, 127, 128, 129, 131, 132, 133, 137, 138, 139, 140, 141, 142, 158, 162, 177, 180, 181, 182, 183, 192, 193, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 331, 332, 333, 341, 371, 375, 376, 378, 382, 383], "document": [54, 55, 56, 61, 124, 195, 388], "revis": [54, 57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 186, 188], "24": [54, 113, 116, 172], "patwary2016": [54, 101], "md": 54, "mostofa": 54, "patwari": 54, "nadathur": 54, "rajagopalan": 54, "satish": 54, "narayanan": 54, "sundaram": 54, "jialin": 54, "liu": 54, "sadowski": 54, "evan": 54, "racah": 54, "suren": 54, "byna": 54, "craig": 54, "tull": 54, "wahid": 54, "bhimji": 54, "prabhat": 54, "pradeep": 54, "dubei": 54, "panda": [54, 101], "extrem": [54, 55], "2016": 54, "1607": 54, "08220": 54, "ping14": [54, 341], "ping": 54, "tak": 54, "eric": 54, "polizzi": 54, "feast": 54, "subspac": 54, "eigensolv": 54, "acceler": [54, 116, 128, 136, 174, 378], "approxim": [54, 91, 140, 344], "spectral": 54, "platt98": [54, 172], "platt": [54, 172], "sequenti": [54, 75, 364], "microsoft": [54, 368, 389], "com": [54, 57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 186, 188], "wp": 54, "content": [54, 55, 111, 114, 140, 142, 388], "upload": 54, "02": 54, "tr": 54, "98": 54, "quinlan86": [54, 75, 76], "quinlan": 54, "induct": [54, 72, 75, 92, 93, 365], "81": 54, "106": 54, "1986": 54, "quinlan87": [54, 75], "man": 54, "studi": 54, "27": 54, "221": 54, "234": 54, "renie03": [54, 124], "jason": 54, "renni": 54, "lawrenc": 54, "shih": 54, "jaim": 54, "teevan": 54, "david": 54, "karget": 54, "tackl": 54, "poor": 54, "assumpt": [54, 55, 124, 159], "na\u00efv": [54, 56, 191, 331], "bay": [54, 56, 191, 331], "text": [54, 60, 61, 62, 66, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 86, 107, 111, 114, 116, 119, 120, 121, 122, 123, 124, 128, 129, 136, 137, 142, 144, 145, 146, 151, 152, 153, 155, 158, 159, 160, 161, 166, 169, 171, 172, 180, 193, 195, 334, 342, 361, 373, 374, 382], "twentieth": 54, "icml": 54, "washington": 54, "rumelhart86": [54, 142], "rumelhart": 54, "geoffrei": 54, "hinton": 54, "ronald": 54, "william": 54, "represent": [54, 177, 178, 184, 373, 378, 382], "back": [54, 156, 170, 177, 180, 182, 262, 265, 378], "propag": [54, 55], "natur": [54, 55, 173, 184], "323": 54, "533": 54, "536": 54, "sokolova09": [54, 158, 160], "marina": 54, "sokolova": 54, "gui": 54, "lapalm": 54, "systemat": 54, "task": [54, 108, 110, 214, 222, 223, 234, 239, 240, 241, 242, 243, 244, 245, 246, 249, 260, 261, 262, 263, 264, 265, 269, 270, 274, 277, 278, 348, 354], "427": 54, "437": 54, "atour": 54, "iro": 54, "umontr": 54, "ca": 54, "rali": 54, "site": 54, "publi": 54, "sokolovalapalm": 54, "jipm09": 54, "syclspec": [54, 382], "subgroup": 54, "integr": [54, 173, 368, 378], "devic": [54, 179, 191, 193, 199, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 348, 354, 378, 382, 384, 386, 388], "modern": [54, 200], "sutton2018": [54, 344], "michael": 54, "sutton": 54, "tal": 54, "nun": 54, "amnon": 54, "barak": 54, "ipdp": 54, "2018": 54, "tan2005": [54, 107], "pang": 54, "ning": 54, "tan": 54, "steinbach": 54, "vipin": 54, "addison": 54, "weslei": 54, "longman": 54, "co": [54, 67, 80, 358], "inc": [54, 55], "boston": 54, "032132136": 54, "verma2014": [54, 101], "verma": 54, "deepika": 54, "namita": 54, "kakkar": 54, "neha": 54, "mehan": 54, "kd": 54, "engin": [54, 56, 71, 77, 83, 86, 91, 99, 100, 101, 105, 137, 139, 140, 141, 142, 174, 331], "5291": 54, "5294": 54, "wen2018": [54, 172, 364], "wen": 54, "zeyi": 54, "jiashuai": 54, "shi": 54, "qinbin": 54, "bingsheng": 54, "he": 54, "jian": 54, "thundersvm": 54, "cpu": [54, 56, 57, 58, 59, 60, 62, 63, 64, 67, 70, 71, 72, 73, 76, 77, 79, 80, 86, 92, 93, 98, 101, 102, 103, 105, 107, 113, 114, 116, 117, 120, 124, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 153, 154, 158, 159, 160, 161, 164, 165, 166, 168, 171, 172, 173, 201, 269, 331, 333, 348, 354, 382, 384, 389], "19": [54, 389], "wu04": [54, 173], "ting": 54, "wu": [54, 173], "rubi": 54, "weng": 54, "coupl": [54, 180], "975": 54, "1005": 54, "2004": 54, "zhu2005": [54, 59], "zhu": 54, "ji": [54, 98], "hui": 54, "zou": 54, "saharon": 54, "rosset": 54, "adaboost": [54, 61, 62], "As": [55, 178], "effort": [55, 200], "spent": 55, "mainten": 55, "rather": [55, 63, 67, 71, 79, 80, 86, 107, 111, 124, 144, 150, 181], "essenti": [55, 179, 183], "keep": [55, 156, 170], "abl": [55, 180], "quickli": 55, "understand": 55, "written": [55, 180, 382, 388], "By": [55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 79, 80, 86, 96, 101, 102, 103, 104, 105, 106, 108, 110, 111, 116, 117, 118, 119, 126, 127, 128, 130, 133, 138, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 169, 170, 172, 173, 180, 187, 188, 192, 195, 197, 198, 341, 382], "ensur": [55, 150, 152, 171, 188, 189, 192], "yourself": 55, "These": [55, 87, 97, 118, 122, 123, 140, 173, 176, 179, 182, 201, 347, 371, 388], "cover": [55, 109, 112, 172, 182, 192, 199], "our": 55, "along": [55, 101, 180], "To": [55, 57, 62, 63, 67, 69, 71, 72, 73, 75, 76, 79, 80, 82, 86, 91, 92, 93, 98, 100, 101, 103, 104, 107, 109, 111, 112, 113, 116, 124, 128, 144, 150, 152, 163, 171, 172, 173, 176, 180, 181, 182, 187, 188, 189, 192, 341, 342, 367, 378, 388, 389], "contribut": [55, 59, 91, 107], "trail": [55, 105], "end": [55, 59, 60, 62, 82, 85, 98, 129, 131, 132, 139, 140, 150, 153, 154, 161, 191, 199, 218, 331, 341, 364, 368, 382, 385], "alwai": [55, 104, 378], "put": [55, 71, 342], "surround": 55, "prefer": [55, 95, 97, 98], "tab": [55, 111], "indent": 55, "configur": [55, 57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 180, 186, 188, 388], "your": [55, 57, 59, 61, 63, 64, 65, 66, 68, 69, 71, 79, 80, 83, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 116, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 134, 138, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 169, 170, 172, 173, 177, 182, 189, 191, 192, 195, 197, 198, 200, 368], "editor": 55, "instead": [55, 60, 62, 71, 86, 102, 103, 140, 163, 165, 181, 382, 388], "guarante": [55, 87], "fine": 55, "regardless": [55, 77, 182], "output": [55, 58, 60, 62, 91, 92, 95, 107, 123, 139, 142, 152, 166, 168, 171, 172, 179, 180, 193, 194, 354, 382], "begin": [55, 59, 82, 85, 98, 129, 131, 132, 139, 140, 150, 153, 154, 161, 218, 331, 336, 341, 364, 382, 385], "copyright": [55, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "notic": [55, 57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 186, 188, 331], "warn": [55, 187], "need": [55, 60, 88, 89, 90, 101, 114, 116, 128, 131, 132, 137, 160, 170, 173, 177, 180, 182, 192, 193, 378, 382, 385, 388, 389], "whenev": [55, 57, 124], "forward": 55, "suffici": [55, 150, 152, 155, 156, 171], "give": [55, 71, 72, 73, 75, 91, 92, 93, 116, 135, 342], "meaning": [55, 382], "abbrivi": 55, "word": [55, 107, 124], "letter": 55, "meaningless": 55, "nerr": 55, "abbrevi": 55, "ncompconn": 55, "wgcconnect": 55, "pcreader": 55, "pc": [55, 159], "thing": 55, "cstmrid": 55, "miss": [55, 86, 177, 178, 378], "pricecountread": 55, "numerror": 55, "num": 55, "widespread": 55, "lowercas": 55, "mai": [55, 68, 69, 97, 106, 107, 108, 110, 113, 125, 127, 150, 152, 153, 171, 177, 180, 191, 192, 193, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 336, 368, 378, 382, 385], "underscor": 55, "_": [55, 58, 60, 62, 67, 71, 72, 73, 75, 76, 77, 84, 86, 91, 92, 98, 102, 107, 113, 116, 124, 126, 128, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 150, 159, 160, 161, 165, 172, 338, 341, 342, 351, 357, 360], "kmeans_assign": 55, "capit": 55, "have": [55, 57, 68, 69, 71, 72, 83, 92, 93, 101, 107, 111, 114, 127, 131, 133, 150, 152, 155, 156, 159, 171, 173, 176, 179, 180, 181, 182, 184, 191, 192, 193, 211, 258, 342, 344, 348, 365, 371, 378, 379, 380, 382, 388], "myclass": 55, "mystruct": 55, "mytyp": 55, "myenum": 55, "addtableentri": 55, "deletet": 55, "numblock": 55, "privat": [55, 382], "colsint": 55, "_tablenam": 55, "daysinaweek": 55, "mytabletyp": 55, "inttyp": 55, "doubletyp": 55, "numer": [55, 57, 59, 63, 64, 65, 66, 67, 68, 69, 71, 76, 79, 80, 82, 83, 84, 85, 86, 87, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 192, 195, 197, 198, 373, 378, 382], "inputid": [55, 162], "add": [55, 72, 91, 92, 93, 107, 113, 116, 163, 172, 173, 180, 181, 187, 192, 193, 368], "step": [55, 58, 59, 62, 71, 72, 75, 86, 92, 93, 99, 107, 113, 116, 137, 140, 141, 142, 145, 172, 173, 180, 182, 192, 193, 336, 337, 341, 342, 344, 354, 378, 388], "prefix": 55, "sbjname": 55, "master": [55, 107, 150, 152, 171, 193], "etc": 55, "partialresult": [55, 65, 107, 118, 148], "renam": 55, "masterinputid": 55, "step2masterinputid": 55, "distributedpartialresultstep3id": 55, "step3localpartialresultid": 55, "partialsvdtableresultid": 55, "localsvdpartialresultid": 55, "step3localnumerictableinputid": 55, "step3localinputid": 55, "step3localcollectioninputid": 55, "step3localinputcollectionid": 55, "distributedinput": 55, "distributedpartialresult": 55, "step1": 55, "step2mast": [55, 65, 97, 104, 106, 114, 118, 122, 148, 156, 170], "step3loc": [55, 97, 156, 170], "1st": 55, "protect": 55, "omit": [55, 192, 374], "destructor": [55, 182], "friend": 55, "improv": [55, 71, 101, 125, 188, 189, 342], "readabl": 55, "hash_map": 55, "urltableproperti": 55, "propertiesmap": 55, "dal_my_defin": 55, "__my_defin": 55, "__file_name_h__": 55, "pragma": 55, "__x86_64__": 55, "linux": [55, 388, 389], "64bit": 55, "maco": [55, 331, 389], "os": 55, "__linux__": 55, "__apple__": 55, "_win64": 55, "winddow": 55, "_win32": 55, "32bit": 55, "__icl": 55, "__intel_compil": 55, "__intel_llvm_compil": 55, "llvm": 55, "daal_intel_cpp_compil": 55, "_msc_ver": 55, "readili": 55, "itself": [55, 71, 342, 382], "linu": 55, "torvald": 55, "sai": 55, "never": [55, 71], "try": [55, 172, 260, 261, 262, 263, 264, 265, 269, 364, 382], "explain": [55, 96, 97, 161, 195, 197, 198], "much": [55, 191], "better": [55, 61, 68, 69, 111, 378], "_working_": 55, "obviou": 55, "wast": 55, "badli": 55, "want": [55, 180], "tell": 55, "what": [55, 260, 261, 262, 263, 264, 265, 269, 382], "bodi": 55, "complex": [55, 91, 116, 150, 152, 171, 177, 191, 342, 378, 386], "someth": 55, "particularli": [55, 108], "clever": 55, "ugli": 55, "excess": 55, "head": [55, 382], "peopl": 55, "why": 55, "clarif": 55, "idea": [55, 71, 87], "certain": [55, 111, 127, 130, 131, 134, 139, 181, 191], "sentinel": 55, "track": [55, 156, 170, 183], "entri": [55, 106, 341], "we": [55, 180, 346], "go": [55, 388], "don": 55, "yet": [55, 182, 382], "know": 55, "_nentri": 55, "everi": [55, 71, 75, 101, 180, 371, 378, 382], "preced": [55, 382], "daal_deprec": 55, "virtual": [55, 180], "daal_deprecated_virtu": 55, "func": 55, "classmemb": 55, "daal_deprecated_us": 55, "newfunct": 55, "phrase": 55, "doxygen": 55, "removedfunct": 55, "old": 55, "oldfunct": 55, "appropri": [55, 61, 75, 101, 111, 158, 160, 177, 180, 182, 183, 192, 193, 195, 197, 198, 341, 365, 368], "doc": 55, "classnam": 55, "pars": [55, 180], "correctli": [55, 158, 160, 161], "quotat": 55, "command": [55, 368], "easier": 55, "reader": 55, "place": [55, 83, 87, 153], "narrowest": 55, "push_back": [55, 180], "brace": 55, "confin": 55, "strchr": 55, "str": 55, "outsid": 55, "loop": [55, 97, 106, 128, 140, 142, 180, 382], "invok": 55, "enter": 55, "ineffici": 55, "1000000": [55, 172], "foo": 55, "my": 55, "ctor": 55, "dtor": 55, "dosometh": 55, "hard": 55, "bar": 55, "hardcodedstr": 55, "caus": [55, 180, 187], "bug": 55, "due": [55, 101, 107, 110, 150], "partial": [55, 65, 91, 96, 97, 100, 106, 114, 122, 129, 131, 132, 133, 140, 148, 192, 193, 355, 356, 386], "even": [55, 182], "chang": [55, 75, 145, 180, 182, 192, 372, 382], "difficult": 55, "termin": [55, 62, 74, 86, 91, 94, 103, 138, 145, 166, 168], "destroi": 55, "revers": [55, 180], "were": [55, 72, 158, 160, 201], "sinc": [55, 185, 388], "undertermin": 55, "At": [55, 57, 58, 59, 60, 62, 71, 76, 77, 91, 95, 96, 97, 101, 111, 114, 116, 121, 122, 161, 166, 168, 172, 173, 195, 197, 198, 378], "run": [55, 83, 128, 140, 141, 150, 185, 187, 188, 219, 225, 226, 229, 230, 231, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 331, 337, 382, 383], "thread": [55, 87, 185, 188, 218, 368, 378, 389], "tri": [55, 71, 91], "therefor": [55, 57, 101, 104, 124, 177, 184, 191, 199, 378], "fail": [55, 180], "might": [55, 101, 103, 111], "prior": [55, 68, 69, 121, 122, 123, 124], "occur": [55, 75, 107, 187, 386], "reccomend": 55, "sure": [55, 61, 182, 336], "happen": [55, 180], "singletonclass": 55, "inst": 55, "bad": [55, 107], "getinst": [55, 188], "impli": [55, 70, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "level": [55, 57, 75, 86, 101, 159, 166, 168, 183, 193, 195, 262, 265, 342, 382, 388], "help": [55, 201, 331, 341], "self": [55, 382], "modifi": [55, 135, 150, 180, 182, 188, 192, 341], "len": 55, "respect": [55, 75, 86, 88, 89, 90, 98, 101, 103, 104, 130, 131, 133, 145, 147, 150, 159, 171, 172, 176, 179, 180, 182, 187, 188, 191, 354, 367, 378], "state": [55, 69, 71, 88, 89, 90, 182, 346, 372, 382], "clearli": 55, "almost": 55, "getvalu": 55, "setvalu": 55, "val": 55, "_val": 55, "viral": 55, "appear": [55, 172, 364], "But": 55, "excel": 55, "_isiniti": 55, "_valu": 55, "calcvalu": 55, "symmetri": 55, "dealloc": [55, 101, 182, 189], "bookkeep": 55, "ti": 55, "lifetim": [55, 180], "properli": [55, 382], "leak": 55, "filehold": 55, "_file": 55, "fclose": 55, "instruct": [55, 368], "prioriti": 55, "lost": 55, "ptr": 55, "idiom": 55, "act": 55, "like": [55, 61, 75, 180, 365], "overload": [55, 374], "automat": [55, 57, 107, 113, 116, 141, 172, 177, 180, 181, 182, 378, 382], "autom": 55, "emphas": 55, "unwant": 55, "inexplicit": 55, "printm": 55, "deriv": [55, 57, 59, 61, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 83, 86, 87, 96, 97, 99, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 177, 182, 185, 192, 195, 197, 198, 381], "forgotten": 55, "polymorph": 55, "behavior": [55, 182, 381], "Be": [55, 60, 378], "veri": [55, 61, 192], "cautiou": 55, "inlin": 55, "unexpect": 55, "especi": [55, 378], "unsign": 55, "max_capac": 55, "1000": [55, 219, 245, 246, 266, 274], "enumer": [55, 75, 184, 381], "mynet": 55, "emaxus": 55, "255": 55, "emaxserv": 55, "prevent": [55, 187], "conflict": 55, "befor": [55, 125, 153, 182, 331], "lea": 55, "confict": 55, "anywher": 55, "client_cod": 55, "nest": 55, "focus": 55, "promot": 55, "clariti": 55, "long": [55, 182], "length": [55, 137, 140, 141, 142], "longer": [55, 145, 200], "40": [55, 95, 97], "break": 55, "maintain": [55, 180], "piec": 55, "harm": 55, "sweet": 55, "just": [55, 382], "proport": [55, 107], "conceptu": 55, "lot": 55, "ok": [55, 187], "shouldn": 55, "exce": [55, 86, 336], "wrong": 55, "think": 55, "human": 55, "brain": 55, "easili": [55, 102], "anyth": 55, "confus": 55, "brilliant": 55, "mayb": 55, "did": 55, "week": 55, "now": [55, 274], "reli": [55, 161, 373], "evalu": [55, 75, 158, 159, 160, 161, 342], "tmp": 55, "express": [55, 72, 75, 92, 93, 116, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 336, 365], "decid": 55, "pre": [55, 64, 65, 66, 72, 75, 92, 93, 111, 113, 116, 117, 118, 119, 127, 133, 172, 173, 191], "post": [55, 76, 77], "ignor": [55, 68, 75, 137, 140, 142, 365], "form": [55, 57, 71, 75, 102, 108, 110, 115, 128, 134, 166, 177, 180, 192, 365], "often": [55, 75, 124, 181, 192, 341, 365], "becaus": [55, 57, 63, 71, 150, 172, 173, 177, 180, 191, 192, 341], "made": [55, 382], "could": [55, 108, 110, 348, 383], "expens": 55, "behav": [55, 180], "power": [55, 71, 124, 128, 137, 139, 140, 141, 142, 150, 189, 191, 342], "tool": 55, "qualiti": [55, 56, 157, 174, 331, 382], "paradigm": 55, "debug": 55, "strictli": 55, "purpos": [55, 178, 185, 188, 189, 190], "fat": 55, "suppos": 55, "nor": 55, "absolut": [55, 172, 364, 385], "necessari": [55, 183, 191, 337, 382, 388], "field": [55, 110, 186, 192, 382], "being": [55, 71, 103, 104, 114, 122, 132, 182, 195, 198, 342], "inappropri": 55, "_string": 55, "aaa": 55, "_foo": 55, "_ptra": 55, "_ptrb": 55, "easi": 55, "signal": 55, "indetermin": 55, "dispatch": [55, 188], "subclass": 55, "futur": [55, 71, 200], "modif": [55, 59, 107, 111, 180, 182, 192], "quietli": 55, "someon": 55, "against": [55, 173], "rais": 55, "fatal": 55, "failur": [55, 113, 116, 172, 173, 179, 187], "factori": 55, "explicit": [55, 107, 374], "duplic": [55, 181], "param": [55, 218, 227], "open": [55, 331, 368], "complic": 55, "flexibl": 55, "high": [55, 67, 101, 150, 152, 171, 382], "obscur": 55, "consider": [55, 181, 183], "isol": 55, "tricki": 55, "carefulli": 55, "extra": [55, 59, 68, 71, 97, 101, 103, 111, 116, 173, 383, 384], "attent": 55, "messag": [55, 187], "emit": 55, "mistak": 55, "tweak": 55, "value_typ": 55, "three": [55, 156, 170, 180, 181, 184, 191, 341, 374, 378, 382], "some_namespac": 55, "everyth": 55, "modelintern": 55, "fooimpl": 55, "here": [55, 108, 110, 113, 115, 218, 341], "unifi": [55, 378], "impltyp": 55, "modelimpl": 55, "daal_c11_overrid": 55, "stand": 55, "secur": 55, "lifecycl": [55, 182], "discuss": [55, 181], "explicitli": [55, 86, 130, 162, 182, 367, 374, 382], "catch": [55, 260, 261, 262, 263, 264, 265, 269], "upon": 55, "invalid": [55, 382], "statu": [55, 113, 116, 130, 172, 173, 180, 185, 186, 187], "recurs": [55, 71, 75, 342], "indefinit": 55, "error_handl": 55, "daal_assert": 55, "nrow": [55, 182], "di": 55, "ncol": 55, "numerictablefeatur": [55, 176], "_ddict": 55, "_arrai": 55, "types": 55, "getvectorupcast": 55, "getconversiondatatyp": 55, "lbuf": 55, "would": [55, 75, 101, 388], "justifi": 55, "converst": 55, "solut": [55, 172, 364], "context": [55, 176, 180, 385], "blockindex": [55, 69], "daal_check": 55, "int_max": 55, "unrel": 55, "1024": 55, "un": 55, "ragn": 55, "cannot": [55, 63, 381, 382], "workflow": [55, 58, 59, 60, 62, 71, 72, 73, 76, 77, 91, 92, 93, 101, 111, 114, 116, 121, 123, 162, 166, 168, 172, 173, 195, 196, 197, 198, 388], "getmaxel": 55, "elementsarrai": 55, "nelement": 55, "newdata": 55, "static_cast": [55, 249], "daal_malloc": [55, 189], "_size": 55, "errormemoryallocationfail": 55, "daal_fre": [55, 189], "olddata": 55, "doubt": 55, "race": 55, "alreadi": [55, 86, 107, 180, 182], "been": [55, 72, 92, 93, 161], "unnot": 55, "outcom": [55, 75, 76, 77, 191, 365], "bear": 55, "mind": 55, "environ": [55, 56, 190, 193, 331, 368, 388], "accord": [55, 61, 72, 75, 83, 92, 93, 101, 107, 173, 182, 190, 336, 341, 342, 364, 382, 387], "daal_check_malloc": 55, "daal_memcpy_": 55, "numberofel": 55, "errormemorycopyfailedintern": 55, "daal_calloc": 55, "service_scalable_calloc": 55, "overflow": 55, "daal_overflow_check_by_multipl": 55, "multiplier1": 55, "multiplier2": 55, "vulner": 55, "verifi": 55, "parti": 55, "overli": 55, "malform": 55, "printabl": 55, "symbol": [55, 200], "encount": [55, 113, 116, 172, 173], "insert": 55, "somewher": 55, "els": 55, "choleski": [56, 174, 331], "qr": [56, 113, 114, 174, 331], "quantil": [56, 71, 145, 174, 331], "solver": [56, 108, 110, 111, 116, 131, 135, 137, 139, 140, 141, 142, 331, 341, 364], "stump": [56, 58, 59, 60, 61, 62, 191, 331], "lasso": [56, 108, 191, 331], "elast": [56, 191, 331], "net": [56, 191, 331], "altern": [56, 139, 200, 331, 336, 382], "extract": [56, 180, 190, 206, 217, 234, 236, 249, 331, 373, 378, 382], "handl": [56, 180, 190, 331, 336], "callback": [56, 190, 331], "uncov": 57, "relationship": [57, 67, 108, 110, 113, 116, 346], "Its": [57, 71, 74, 94, 371], "basket": 57, "aim": [57, 143], "confid": [57, 58, 59, 60, 95, 97, 98, 144, 146, 159, 195], "apriori": 57, "let": [57, 62, 71, 86, 91, 108, 110, 113, 115, 124, 128, 180, 342, 354], "i_1": [57, 128, 131, 132, 133, 134, 140, 180], "i_2": [57, 131, 132, 133, 134, 140], "ldot": [57, 58, 59, 60, 61, 62, 66, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 96, 98, 100, 101, 102, 107, 108, 110, 111, 113, 114, 115, 116, 119, 120, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 137, 140, 141, 142, 144, 145, 146, 149, 150, 155, 158, 159, 160, 164, 165, 169, 172, 173, 180, 184, 193, 334, 336, 337, 338, 341, 342, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364], "i_m": [57, 131, 132, 133, 134], "item": [57, 96, 97, 98, 99, 100, 106, 197], "rightarrow": 57, "intersect": 57, "cap": 57, "emptyset": 57, "left": [57, 58, 59, 60, 67, 71, 72, 73, 76, 77, 85, 86, 91, 92, 98, 102, 116, 124, 129, 131, 132, 133, 139, 140, 141, 142, 159, 169, 170, 171, 180, 338, 341, 342, 351], "hand": [57, 150, 152, 171], "itemset": 57, "anteced": 57, "right": [57, 58, 59, 60, 67, 71, 72, 73, 76, 77, 85, 86, 91, 92, 98, 102, 116, 124, 129, 131, 132, 133, 139, 140, 141, 142, 159, 169, 170, 171, 338, 341, 342, 351, 388], "consequ": 57, "t_1": 57, "t_2": 57, "t_n": 57, "percent": 57, "cup": [57, 337], "decompos": [57, 63, 152, 341], "stage": [57, 74, 86, 94, 95, 96, 97, 111, 114, 121, 122, 123, 158, 159, 160, 166, 168, 180, 191, 199, 331, 336, 341, 342, 354, 378, 382, 388], "involv": [57, 67, 101, 124, 145, 150], "ntransact": 57, "nuniqueitem": 57, "numerict": [57, 59, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 83, 86, 87, 96, 97, 99, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 169, 170, 173, 176, 182, 183, 187, 195, 197, 198], "except": [57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 75, 76, 79, 80, 83, 86, 87, 96, 97, 99, 102, 103, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 118, 119, 126, 127, 130, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 185, 187, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "packedtriangularmatrix": [57, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 83, 86, 87, 96, 97, 99, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 181, 184, 195, 197, 198], "packedsymmetricmatrix": [57, 63, 64, 65, 66, 68, 69, 71, 76, 79, 80, 83, 86, 87, 96, 99, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 126, 127, 130, 131, 132, 133, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 181, 184, 195, 197, 198], "algorithmfptyp": [57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173], "defaultdens": [57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 99, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 165, 166, 168, 169, 170, 172, 173], "minsupport": 57, "01": [57, 58, 59, 60, 62, 86, 95, 97, 137, 141, 219, 266], "minconfid": 57, "determin": [57, 61, 62, 101, 116, 124, 128, 142, 159, 173, 180, 182, 341, 344, 346, 354], "discoverrul": 57, "itemsetsord": 57, "itemsetsunsort": 57, "itemsetssortedbysupport": 57, "descend": [57, 75, 104, 147, 148, 149, 150, 341, 365], "rulesord": 57, "rulesunsort": 57, "rulessortedbyconfid": 57, "minitemsets": 57, "impos": 57, "maxitemsets": 57, "largeitemset": 57, "nlargeitemset": 57, "largeitemsetssupport": 57, "met": [57, 71, 86, 91, 342], "antecedentitemset": 57, "nantecedentitem": 57, "part": [57, 75, 96, 97, 100, 101, 106, 145, 175, 200, 337, 354, 367, 378, 382], "conseqentitemset": 57, "nconsequentitem": 57, "nrule": 57, "posit": [57, 60, 63, 67, 70, 71, 76, 77, 101, 107, 127, 139, 144, 145, 146, 153, 158, 160, 334, 336, 337, 342], "homogennumerict": [57, 59, 63, 64, 65, 66, 68, 69, 71, 86, 88, 89, 90, 96, 101, 102, 103, 104, 105, 106, 116, 117, 118, 119, 126, 127, 130, 138, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 169, 170, 173, 181, 182, 184, 195, 197, 198], "\u0441srnumerict": [57, 63, 146], "ascend": [57, 75, 165], "intend": [57, 61, 90, 107, 125, 191], "avoid": [57, 60, 62, 75, 137, 150, 152, 171, 172, 181, 356, 371, 378], "imposs": 57, "amount": [57, 71, 86, 124, 150, 152, 171, 172, 364], "insuffici": 57, "assoc_rules_apriori_batch": 57, "overal": [57, 63, 67, 79, 80, 82, 86, 98, 106, 107, 111, 124, 144, 150, 152, 171], "soa": [57, 63, 67, 79, 80, 86, 107, 111, 124, 144, 150, 172, 181, 183], "vari": [57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 186, 188], "factor": [57, 58, 59, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 91, 95, 96, 97, 98, 99, 100, 107, 117, 118, 119, 124, 144, 150, 152, 153, 155, 169, 171, 172, 186, 188, 197, 341], "performanceindex": [57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 186, 188], "20201201": [57, 63, 64, 65, 66, 67, 71, 79, 80, 82, 86, 98, 107, 117, 118, 119, 124, 144, 150, 152, 171, 172, 186, 188], "short": [58, 59], "varieti": [58, 59, 182, 192, 193], "noisi": [58, 59, 60, 178], "framework": [58, 60, 71, 72, 73, 75, 76, 77, 91, 92, 93, 128, 137, 139, 140, 141, 142, 172, 199, 342], "x_1": [58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 96, 101, 102, 107, 108, 110, 113, 115, 116, 120, 124, 126, 127, 131, 132, 144, 145, 146, 150, 158, 160, 164, 172, 173, 334, 336, 337, 338, 341, 342, 349, 350, 351, 352, 354, 355, 356, 361, 364, 385], "x_": [58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 96, 101, 102, 107, 108, 110, 113, 115, 120, 124, 126, 127, 131, 132, 133, 144, 145, 146, 150, 159, 164, 165, 172, 173, 334, 338, 341, 342, 349, 350, 351, 352, 356, 361, 364], "1p": [58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 101, 102, 107, 108, 110, 113, 115, 116, 120, 126, 127, 131, 132, 144, 145, 146, 150, 164, 172, 173, 334, 342, 349, 350, 351, 352, 361, 364], "x_n": [58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 101, 102, 107, 120, 124, 126, 127, 131, 132, 144, 145, 146, 150, 158, 160, 164, 172, 173, 334, 336, 337, 338, 341, 342, 349, 350, 351, 352, 354, 355, 356, 361, 364], "n1": [58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 101, 102, 107, 108, 110, 113, 115, 120, 126, 127, 131, 132, 144, 145, 146, 150, 164, 172, 173, 334, 342, 349, 350, 351, 352, 357, 358, 360, 361, 364], "np": [58, 59, 60, 62, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 91, 92, 93, 101, 102, 107, 108, 110, 113, 115, 120, 126, 127, 131, 132, 144, 145, 146, 150, 164, 172, 173, 334, 342, 349, 350, 351, 352, 361, 364], "y_1": [58, 59, 60, 62, 71, 72, 73, 75, 76, 77, 91, 92, 93, 96, 101, 102, 108, 110, 113, 115, 116, 131, 132, 158, 160, 172, 173, 342, 349, 350, 351, 352, 354, 355, 356, 364], "y_n": [58, 59, 60, 62, 71, 72, 73, 75, 76, 77, 91, 92, 93, 101, 113, 116, 131, 132, 158, 160, 172, 173, 342, 354, 355, 356, 364], "weak": [58, 59, 60, 61, 62], "learner": [58, 59, 60, 61, 62], "show": [58, 59, 62, 180, 182, 374, 378], "d_1": [58, 59, 107], "frac": [58, 59, 60, 62, 67, 71, 72, 73, 76, 77, 79, 80, 84, 85, 86, 91, 92, 93, 98, 102, 107, 108, 110, 111, 116, 120, 124, 126, 127, 128, 129, 131, 132, 133, 137, 139, 140, 141, 145, 146, 158, 159, 160, 161, 172, 173, 336, 338, 341, 342, 351, 354, 355, 356, 358, 361, 364], "h_t": [58, 59], "d_t": [58, 59, 71, 342], "alpha_t": [58, 59, 140], "d_": [58, 59, 71, 79, 80, 101, 342, 358], "exp": [58, 59, 60, 84, 86, 102, 351, 356], "z_t": [58, 59], "hypothesi": [58, 59, 60], "mathrm": [58, 59, 60, 62, 71, 73, 75, 76, 77, 86, 91, 92, 96, 97, 98, 100, 101, 104, 106, 116, 124, 131, 132, 133, 137, 139, 140, 141, 149, 172, 336, 337, 341, 342, 354, 364, 382, 385], "x_r": [58, 59, 60, 62, 71, 72, 73, 75, 76, 77, 91, 92, 93, 101, 116, 172, 342, 354, 364], "weaklearnertrain": [58, 59, 60, 62], "weaklearnerpredict": [58, 59, 60, 62], "accuracythreshold": [58, 59, 60, 62, 86, 103, 138, 159, 172, 173], "maxiter": [58, 59, 60, 62, 86, 91, 95, 97, 103, 172, 173], "orient": [58, 59, 60, 62, 63, 64, 65, 66, 71, 79, 80, 82, 84, 85, 86, 88, 89, 90, 95, 96, 97, 99, 100, 102, 111, 114, 117, 118, 119, 121, 122, 123, 126, 127, 131, 132, 133, 137, 139, 140, 141, 144, 146, 153, 155, 156, 158, 159, 160, 164, 166, 168, 169, 170, 172], "adaboost_dense_batch": 58, "samm": [59, 61], "stagewis": 59, "exponenti": [59, 62], "real": [59, 180, 382, 385], "err": 59, "_t": 59, "sum_": [59, 67, 72, 73, 79, 80, 86, 92, 101, 108, 110, 115, 128, 131, 132, 133, 139, 141, 172, 336, 338, 341, 342, 354, 356, 358, 360, 364], "neq": [59, 131, 161], "underset": [59, 62, 76, 77, 98, 131, 132, 133, 139, 141, 172, 364], "argmax": [59, 62, 76, 77], "weigh": [59, 107], "p_k": [59, 131], "prob": 59, "_w": 59, "s_k": [59, 140], "z_i": [59, 159, 364], "z_": [59, 62, 159, 164], "i1": [59, 133, 159, 160], "ic": 59, "ik": [59, 79, 80, 101, 124, 134, 159, 164], "sammer": 59, "learningr": [59, 137], "nclass": [59, 60, 61, 62, 72, 76, 92, 101, 116, 121, 122, 123, 131, 160, 166, 172, 173, 195], "resultstocomput": [59, 68, 71, 101, 116, 127, 130, 131, 132, 133, 134, 147], "64": [59, 68, 71, 101, 103, 111, 116, 130, 131, 132, 133, 134, 147, 173, 189, 388, 389], "bit": [59, 68, 71, 82, 88, 101, 103, 104, 111, 116, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 147, 173, 388, 389], "computeweaklearnerserror": 59, "weaklearnerserror": 59, "adaboost_samme_two_class_batch": 59, "adaboost_sammer_two_class_batch": 59, "adaboost_samme_multi_class_batch": 59, "adaboost_sammer_multi_class_batch": 59, "robust": [60, 144, 146, 342], "erfinv": 60, "erf": 60, "alpha_i": [60, 86, 172, 364], "h_i": [60, 91], "formul": [60, 347], "r_1": [60, 153, 154, 155, 156, 159, 184], "s_1": 60, "s_": [60, 71, 128, 137, 139, 140, 141, 341, 342], "With": [60, 72, 73, 180, 342], "w_i": [60, 73, 91, 107, 342], "r_i": [60, 184], "s_i": [60, 364], "differenti": [60, 91, 128], "equat": [60, 107, 108, 110, 113, 114, 115, 164], "dt": 60, "alpha": [60, 84, 86, 95, 97, 98, 111, 121, 122, 123, 124, 140, 145, 159, 172, 186, 364], "gamma": [60, 91, 103, 104, 107, 131, 132, 133, 142], "t_i": [60, 150, 341], "\u03bd": 60, "degener": [60, 62, 137], "r_": [60, 96, 98], "gini": [60, 71, 72, 75, 76, 166, 342], "newtonraphsonaccuracythreshold": 60, "raphson": 60, "underneath": [60, 375, 376], "newtonraphsonmaxiter": 60, "degeneratecasesthreshold": [60, 137], "brownboost_dense_batch": 60, "strong": 61, "slightli": 61, "guess": [61, 91], "usual": [61, 382], "focu": [61, 158, 160, 200], "logitboost": 61, "brownboost": 61, "getnumberofweaklearn": [61, 62], "sens": [62, 110], "wherea": 62, "y_": [62, 73, 96, 98, 102, 108, 110, 115, 126, 127, 129, 133, 159, 165, 342, 349, 350, 351, 352, 364], "w_": [62, 73, 86, 342], "ij": [62, 67, 79, 80, 86, 96, 101, 108, 110, 113, 115, 120, 126, 127, 131, 132, 133, 159, 165, 172, 338, 341, 355, 356, 361, 364], "f_j": [62, 75, 108, 110, 141, 159, 180], "p_j": 62, "p_i": [62, 72, 76, 342], "thr1": 62, "thr2": 62, "f_": [62, 84, 85, 180], "mj": 62, "approach": [62, 101, 102, 145], "mk": [62, 357, 358, 360], "f_k": [62, 91, 159], "weightsdegeneratecasesthreshold": 62, "responsesdegeneratecasesthreshold": 62, "achiev": [62, 138, 150, 183, 382], "reach": [62, 71, 72, 73, 75, 76, 91, 101, 107, 337, 342], "logitboostmodel": 62, "logitboost_dense_batch": 62, "symmetr": [63, 79, 80, 131, 172, 181, 183, 184, 364], "definit": [63, 67, 70, 71, 91, 106, 120, 138, 140, 144, 146, 159, 161, 334, 338, 361, 377, 378, 381, 382, 385], "lower": [63, 126, 181, 184, 364, 382], "triangular": [63, 152, 153, 154, 155, 156, 181, 183, 184, 218], "conjug": [63, 341], "transpos": [63, 97, 100, 341], "stabil": 63, "superior": 63, "kalman": 63, "filtrat": 63, "ll": [63, 160], "choleskyfactor": 63, "upperpackedtriangularmatrix": [63, 181, 184], "cholesky_dense_batch": 63, "ao": [63, 67, 79, 80, 86, 107, 111, 124, 144, 150, 181, 183], "singlepassdens": [64, 65, 66, 117, 118, 119], "sumdens": [64, 65, 66, 117, 118, 119, 127], "fastcsr": [64, 65, 66, 95, 97, 99, 100, 102, 117, 118, 119, 121, 122, 123], "singlepasscsr": [64, 65, 66, 117, 118, 119], "sumcsr": [64, 65, 66, 117, 118, 119], "csrnumerict": [64, 65, 66, 68, 69, 79, 80, 83, 86, 87, 96, 100, 102, 103, 104, 105, 106, 111, 114, 117, 118, 119, 126, 127, 130, 131, 132, 137, 138, 140, 141, 144, 145, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 181, 184, 195, 197], "west": [64, 65, 66, 117, 118, 119], "outputmatrixtyp": [64, 65, 66], "covariancematrix": [64, 65, 66], "correlationmatrix": [64, 65, 66], "nblock": [65, 66, 69, 96, 97, 100, 104, 106, 114, 118, 119, 122, 123, 148, 149, 152, 155, 156, 169, 170, 171, 193, 204, 208, 210, 226, 230, 252, 255, 257, 273, 276], "across": [65, 69, 72, 96, 97, 100, 104, 106, 114, 118, 122, 148, 150, 152, 156, 170, 171, 193, 378, 386], "valud": [65, 66, 68, 69, 106, 117, 118, 119, 122, 156, 170], "computestep": [65, 96, 97, 104, 106, 114, 118, 122, 148, 156, 170, 193], "step1loc": [65, 96, 97, 104, 106, 114, 118, 122, 148, 156, 170], "schema": [65, 66, 69, 96, 100, 104, 106, 114, 118, 119, 122, 148, 149, 156, 170, 191, 193], "n_i": [65, 66, 100, 104, 106, 114, 118, 119, 122, 123, 148, 149, 155, 156, 169, 170, 193], "nobserv": [65, 66, 104, 118, 119], "crossproduct": [65, 66], "cross": [65, 66, 92, 97, 129, 136, 148, 149, 174, 178, 193, 199], "arriv": [66, 114, 119, 123, 149, 155, 169, 180, 193], "initializationprocedur": [66, 119, 149], "procedur": [66, 71, 75, 87, 91, 101, 111, 115, 116, 119, 149, 180, 192, 336, 342], "extent": 67, "fluctuat": 67, "simultan": [67, 382, 387], "neg": [67, 71, 72, 73, 76, 77, 91, 116, 144, 146, 158, 160, 171, 341, 342, 364], "dimens": [67, 79, 80, 86, 101, 102, 120, 126, 127, 144, 145, 146, 150, 177, 189, 338, 341, 349, 350, 351, 352, 355, 356, 357, 358, 360], "v_": [67, 161, 338, 357, 358, 360], "ki": [67, 98, 338, 341], "kj": [67, 116, 338, 341], "overlin": [67, 71, 72, 73, 79, 80, 127, 140, 161, 338, 341, 342, 355, 356], "cor": [67, 79, 207, 208, 254, 255, 338], "c_": [67, 98, 145, 160, 337, 338, 341], "ii": [67, 160, 338, 341], "cdot": [67, 92, 98, 107, 129, 131, 140, 142, 150, 152, 153, 154, 171, 172, 336, 338, 341, 342, 356], "jj": [67, 139, 338, 341], "cov_dense_batch": [67, 201, 202, 250, 290, 339], "cov_csr_batch": 67, "neighborhood": [68, 69, 344], "ly": [68, 69], "minobserv": [68, 69, 70, 334], "memorysavingmod": [68, 69, 91], "up": [68, 69, 200, 331, 388], "worst": [68, 69], "howev": [68, 69, 79, 80, 153, 172, 177, 181], "bitwis": [68, 71, 101, 103, 116, 127, 130, 131, 132, 133, 134, 147, 173], "OR": [68, 71, 101, 103, 116, 127, 130, 131, 132, 133, 134, 147, 173, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "computecoreindic": 68, "computecoreobserv": 68, "ncluster": [68, 103, 104, 105, 106], "coreindic": 68, "arbitrari": [68, 69, 180, 187, 336, 341, 387], "coreobserv": 68, "step1data": 69, "partialord": 69, "reconstruct": [69, 179], "transfer": [69, 100, 150, 152, 171, 193, 378, 382], "partialdata": [69, 97], "datacollect": [69, 86, 106, 159], "boundingbox": 69, "box": 69, "leftblock": 69, "rightblock": 69, "step3partialboundingbox": 69, "particip": 69, "geometr": 69, "repartit": 69, "step4partialord": 69, "step4partialsplit": 69, "partitioneddata": 69, "next": [69, 72, 75, 92, 93, 101, 106, 140, 150, 152, 171, 180, 378], "larger": [69, 111, 172, 182], "step5partialboundingbox": 69, "partitionedhalodata": 69, "halo": 69, "partitionedhalodataindic": 69, "halodata": 69, "halodataindic": 69, "halodatablock": 69, "step6clusterstructur": 69, "step6finishedflag": 69, "finish": [69, 354], "step6nclust": 69, "step6queri": 69, "queri": [69, 71, 72, 73, 91, 101, 187, 342], "partialfinishedflag": 69, "finishedflag": 69, "step8inputclusterstructur": 69, "step8inputnclust": 69, "step8partialqueri": 69, "step8clusterstructur": 69, "step8finishedflag": 69, "step8nclust": 69, "step8queri": 69, "partialnclust": 69, "step9nclust": 69, "clusteroffset": 69, "step10inputclusterstructur": 69, "step10clusteroffset": 69, "step10clusterstructur": 69, "step10finishedflag": 69, "step10queri": 69, "step11inputclusterstructur": 69, "step11partialqueri": 69, "step11clusterstructur": 69, "step11finishedflag": 69, "step11queri": 69, "step12inputclusterstructur": 69, "step12partialord": 69, "assignmentqueri": 69, "partialassignmentqueri": 69, "step13assign": 69, "step13assignmentsqueri": 69, "further": [70, 75, 91, 135, 158, 160, 334, 346], "reachabl": [70, 334], "said": 70, "x_m": [70, 75, 336, 354], "z": [70, 86, 125, 131, 132, 159, 334, 349, 350, 351, 352, 364], "dbscan_dense_batch": 70, "dbscan_dense_distr": 70, "d_b": [71, 72, 73, 342], "t_b": [71, 73, 342], "test": [71, 72, 76, 77, 92, 93, 101, 221, 222, 225, 226, 268, 269, 272, 273, 274, 342, 365], "x_t": [71, 342], "t_l": [71, 342], "t_r": [71, 342], "children": [71, 72, 92, 93, 342], "substitut": [71, 342, 374], "reflect": [71, 342], "delta": [71, 75, 77, 127, 342], "predefin": [71, 86, 91, 101, 172, 180, 342, 354, 364], "grow": [71, 75, 91, 101, 342], "fashion": [71, 342], "rel": [71, 342, 388], "j_t": [71, 342], "s_t": [71, 128, 137, 139, 140, 141, 142, 342], "maxleafnod": [71, 342], "capabl": [71, 180], "sequenc": [71, 87, 140, 141, 142, 172, 378, 382], "onc": [71, 101, 140, 188, 354, 378], "retriev": [71, 176, 180, 181, 192, 374], "earlier": [71, 135, 189], "individu": [71, 159, 181, 341], "leapfrog": [71, 87, 88, 89, 90], "rightmost": 71, "demonstr": [71, 87, 180, 378, 388], "subsequ": [71, 87, 88, 89, 90], "skipahead": [71, 87, 88, 89, 90], "independ": [71, 77, 87, 98, 108, 110, 113, 115, 124, 146, 159, 178, 382], "setminu": 71, "oob": [71, 72, 73, 213, 214, 260, 261, 263, 264, 342], "hat": [71, 72, 73, 91, 150, 341, 342], "x_j": [71, 79, 101, 107, 172, 336, 342, 354, 364], "mda": [71, 342], "reason": [71, 180, 187, 200, 342, 378], "latter": [71, 116, 342], "pi": [71, 84, 86, 342], "e_b": [71, 342], "e_": [71, 75, 342], "Then": [71, 101, 337, 342, 355, 356], "binningstrategi": 71, "width": [71, 382], "maxbin": [71, 91], "shareptr": [71, 83, 86, 91, 99, 100, 101, 105, 137, 139, 140, 142], "mt2203": [71, 87], "featurespernod": [71, 91], "impuritythreshold": 71, "anymor": 71, "disabl": [71, 101, 188], "maxtreedepth": [71, 76, 77, 91], "minbins": [71, 91], "minimpuritydecreaseinsplitnod": 71, "minobservationsinleafnod": [71, 76, 77, 91], "minobservationsinsplitnod": 71, "minweightfractioninleafnod": 71, "ntree": 71, "observationspertreefract": [71, 91], "computeoutofbagerror": 71, "computeoutofbagerrorperobserv": 71, "777": [71, 88, 89, 90], "varimport": [71, 166, 168], "outofbagerror": 71, "computeoutofbagerroropt": 71, "variableimport": 71, "null": [71, 116, 127, 130, 137, 140, 147, 151, 169, 170, 173], "outofbagerrorperobserv": 71, "updatedengin": 71, "w_1": [72, 73, 342, 364], "w_n": [72, 73, 342, 364], "y_d": [72, 342], "w_d": [72, 342], "take": [72, 75, 108, 116, 131, 132, 144, 179, 180, 348, 355, 356], "misclassif": [72, 342], "ne": [72, 98, 342], "bigcup": [72, 73, 342], "createtre": [72, 92, 93], "addsplitnod": [72, 92, 93], "addleafnod": [72, 92, 93], "note": [72, 92, 93, 106, 107, 116, 139, 140, 147, 155, 156, 180, 356], "proce": [72, 92, 93], "getmodel": [72, 92, 93, 113, 116, 172, 173], "boolean": [72, 75, 92, 93, 139, 365], "featurevalu": [72, 92, 93], "categor": [72, 75, 92, 93, 103, 104, 107, 116, 176, 177, 180, 378, 382], "exactli": [72, 75, 92, 93, 156, 170, 336, 365], "branch": [72, 75, 76, 77, 92, 93, 365], "featureindex": [72, 92, 93], "classlabel": [72, 92, 93], "df_cls_dense_batch_model_build": 72, "df_cls_traversed_model_build": 72, "votingmethod": 72, "df_cls_hist_batch": [72, 201, 250, 300, 343], "df_cls_dense_batch": [72, 201, 202, 300, 343], "df_cls_default_dense_batch": 72, "df_cls_hist_dense_batch": 72, "df_cls_traverse_model": [72, 201, 250], "i_": [73, 140, 180, 342], "y_j": [73, 96, 102, 108, 110, 113, 115, 140, 172, 336, 342, 350, 352, 354, 364], "w_j": [73, 91, 342, 356], "b_i": [73, 342], "ib": [73, 342], "df_reg_hist_batch": [73, 201, 250, 302, 343], "df_reg_dense_batch": [73, 201, 202, 302, 343], "df_reg_default_dense_batch": 73, "df_reg_hist_dense_batch": 73, "df_reg_traverse_model": [73, 201, 250], "ootstrap": 74, "agg": 74, "regat": 74, "child": [74, 94], "hypercub": [75, 365], "frequent": [75, 365], "figur": [75, 365], "mention": [75, 365], "down": [75, 152, 171, 365], "repeat": [75, 86, 107, 180, 337, 365], "subtre": [75, 365], "gain": [75, 76, 91, 166], "midwai": 75, "m1": [75, 102, 349, 350, 351, 352, 357, 358, 360], "mp": [75, 102, 349, 350, 351, 352], "y_m": [75, 102, 349, 350, 351, 352], "exclud": [75, 107], "entir": [75, 101, 107, 144, 145, 155, 169, 180, 181, 386], "account": [75, 144, 384], "examin": [75, 76, 91], "accomplish": 75, "reduc": [75, 76, 77, 102, 107, 159, 161, 184, 364, 387, 388], "rep": 75, "overfit": 75, "unprun": 75, "mispredict": 75, "fewer": [75, 382], "le": [75, 98], "smallest": [75, 145, 173], "disallow": 75, "\u03b4": [76, 77], "\u03c4": [76, 77], "phantom": 76, "0ex": 76, "d_v": [76, 77], "entropi": [76, 92, 129, 136, 174], "similarli": [76, 180, 181, 182, 378], "infogain": [76, 166], "prune": [76, 77], "dataforprun": [76, 77], "labelsforprun": 76, "splitcriterion": [76, 166], "reducederrorprun": [76, 77], "dt_cls_dense_batch": 76, "dependentvariablesforprun": 77, "pruningfract": 77, "rest": [77, 86, 173, 344], "sharedptr": [77, 126, 127, 141, 147, 148, 149], "mt19937": [77, 83, 86, 87, 91, 99, 100, 101, 105, 137, 139, 140, 141, 142], "dt_reg_dense_batch": 77, "jk": [79, 80, 101, 124], "correlationdist": 79, "lowerpackedsymmetricmatrix": [79, 80], "cor_dist_dense_batch": 79, "cosinedist": 80, "cos_dist_dense_batch": 80, "success": [82, 187], "f_p": [82, 180], "mathbb": [82, 85, 134, 342, 348, 349, 350, 351, 352, 354, 364, 385], "geq": [82, 85, 86, 108, 115, 128, 131, 132, 164, 341], "uniformli": [83, 85, 87, 98], "cdf": 83, "bernoulli": 83, "tabletofil": [83, 87], "mergednumerict": [83, 87, 181, 184], "randomnumb": [83, 87], "gaussian": [84, 159], "\u03b1": [84, 172, 364], "\u03c3": 84, "dy": 84, "icdf": 84, "notin": 85, "posteriori": 86, "typic": [86, 162, 172, 177, 180, 191, 192, 193, 195, 196, 197, 198, 382, 385, 387, 388], "hidden": [86, 382, 387], "serv": [86, 152, 382], "area": [86, 158], "underli": [86, 144, 145, 146, 176, 193, 378], "theta": [86, 91, 124, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142], "latent": 86, "l_0": 86, "q": [86, 91, 108, 110, 115, 131, 152, 153, 154, 172, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 341, 364], "dummi": 86, "argument": [86, 128, 129, 130, 131, 132, 133, 134, 136, 138, 140, 142, 161, 182, 187, 192, 195, 198, 374], "converg": [86, 128, 137, 139, 140, 141, 142], "gmm": 86, "multivari": [86, 143], "pd": 86, "theta_i": 86, "m_i": [86, 96, 100, 107], "sigma_i": 86, "alpha_1": 86, "alpha_k": [86, 124, 172, 364], "theta_1": [86, 129], "theta_k": [86, 132, 140], "ir": 86, "nxk": 86, "hg": [86, 140], "sigma_": [86, 341], "n_r": [86, 342], "lr": 86, "lh": 86, "m_": [86, 100], "lg": 86, "biernacki2003": 86, "maitra2009": 86, "ntrial": [86, 105], "niter": [86, 103, 128, 137, 138, 140, 141, 142], "regard": 86, "skip": [86, 87, 103, 107, 131, 132, 139, 344], "ncompon": [86, 147, 151, 161], "20": [86, 219, 220, 266, 267], "0e": [86, 172, 173], "04": [86, 212, 259, 389], "covariancestorag": 86, "diagon": [86, 130, 131, 134, 139, 144, 159, 169, 170, 171, 218, 341], "inputweight": 86, "inputmean": 86, "inputcovari": 86, "inputvalu": 86, "batchifac": 86, "regularizationfactor": 86, "ill": 86, "goalfunct": 86, "logarithm": [86, 116, 195], "em_gmm_dense_batch": 86, "precis": [87, 128, 158, 160], "nskip": [87, 88, 89, 90], "nthread": [87, 88, 89, 90], "overlap": 87, "stride": 87, "threadidx": [87, 88, 89, 90], "mcg59": 87, "59": 88, "congruenti": 88, "na": [88, 89, 90], "size_t": [88, 89, 90, 182, 223, 270], "period": [89, 90], "19937": 89, "6024": 90, "22203": 90, "processor": [90, 186, 188, 382, 389], "score": [91, 125, 158, 159, 160], "omega": 91, "twice": 91, "lambda": [91, 95, 97, 98, 111, 116, 139], "penal": [91, 108, 110, 115, 116], "norm": [91, 108, 110, 116, 139, 145, 336, 385], "approx": [91, 98], "g_i": [91, 137, 141], "shrinkag": 91, "g_j": [91, 141], "h_j": 91, "criteria": [91, 166, 168, 382], "exact": [91, 103, 144, 146, 180, 346], "inexact": [91, 103], "restrict": [91, 111, 188, 331, 333, 377, 381], "border": 91, "splitmethod": 91, "minsplitloss": 91, "slower": 91, "multinomi": [92, 116, 124], "devianc": 92, "ln": [92, 132], "p_": [92, 98, 131, 354], "highest": [92, 354], "gbt_cls_traversed_model_build": 92, "crossentropi": 92, "numiter": [92, 93], "gbt_cls_dense_batch": 92, "gbt_reg_traversed_model_build": 93, "gbt_reg_dense_batch": 93, "recommend": [95, 96, 97, 98, 107, 140, 141, 145, 185, 194, 196], "nfactor": [95, 96, 97, 99, 100], "preferencethreshold": [95, 97], "illustr": [96, 97, 100, 114, 122, 191, 193, 381], "graphic": [96, 97, 389], "x_2": [96, 385], "y_2": 96, "userspartialmodel": 96, "itemspartialmodel": 96, "n_j": [96, 124, 180], "step4loc": [97, 106], "fourth": 97, "previous": [97, 192, 336], "execut": [97, 107, 140, 187, 334, 336, 338, 341, 342, 354, 355, 356, 361, 374, 382, 387, 388], "partialmodel": [97, 100, 114, 122], "outputofstep1forstep2": [97, 100, 156, 170], "inputofstep2fromstep1": [97, 100, 156, 170], "lowerpackedtriangularmatrix": [97, 153, 155, 156, 170, 181, 184], "outputofstep2forstep4": 97, "merg": [97, 386], "previou": [97, 100, 106, 107, 128, 140, 192, 374], "Of": [97, 181, 183, 184], "kei": [97, 100, 106, 127, 147, 151, 156, 163, 170, 177, 181, 183, 331, 333], "outputofinitforcomputestep3": [97, 100], "global": [97, 249, 346], "outputofstep3forstep4": [97, 106], "inputofstep4fromstep2": 97, "outputofstep4forstep1": 97, "outputofstep4forstep3": 97, "ui": 98, "1i": [98, 160, 164], "uj": 98, "impl_als_dense_batch": 98, "impl_als_csr_batch": 98, "impl_als_csr_distr": 98, "fullnus": 100, "diagram": [100, 182, 193, 378], "datacolumnslic": 100, "m_j": [100, 127], "m_1": 100, "datarowslic": 100, "x_0": 101, "n_0": 101, "closest": [101, 107, 336, 354, 382], "cut": [101, 367], "hyperplan": [101, 172, 364, 367], "deal": [101, 180, 181, 184], "ever": 101, "heurist": 101, "median": [101, 145], "explor": [101, 201, 354], "progress": [101, 185, 354], "_metric": 101, "datauseinmodel": 101, "donotus": [101, 111], "dous": [101, 111], "reorder": 101, "computeindicesofneighbor": 101, "computedist": 101, "voteweight": 101, "voteuniform": 101, "votedist": 101, "closer": [101, 107], "computeindicesofneigtbor": 101, "kdtree_knn_dense_batch": 101, "bf_knn_dense_batch": 101, "computationmod": 102, "matrixmatrix": 102, "vectorvector": 102, "matrixvector": 102, "rowindexx": 102, "rowindexi": 102, "rowindexresult": 102, "locat": [102, 120, 144, 146, 180, 388], "linear_kernel_dense_batch": [102, 201, 202, 250, 307, 348], "kernel_func_lin_dense_batch": 102, "kernel_func_lin_csr_batch": 102, "rbf_kernel_dense_batch": [102, 201, 202, 250, 311, 348], "kernel_func_rbf_dense_batch": 102, "kernel_func_rbf_csr_batch": 102, "inputcentroid": [103, 104, 106], "lloydcsr": [103, 104], "distancetyp": [103, 104], "assignflag": [103, 104], "resultstoevalu": [103, 166, 173], "computecentroid": 103, "computeassign": 103, "computeexactobjectivefunct": 103, "objectivefunct": [103, 104], "partialsum": [104, 118, 119], "partialobjectivefunct": 104, "partialcandidatesdist": 104, "partialcandidatescentroid": 104, "partialresut": [104, 106], "step2comput": 104, "step1comput": 104, "finalizecomput": [104, 192, 193], "deterministiccsr": [105, 106], "randomdens": [105, 106], "randomcsr": [105, 106], "plusplusdens": [105, 106], "pluspluscsr": [105, 106], "parallelplusdens": [105, 106], "parallelpluscsr": [105, 106], "oversamplingfactor": [105, 106, 107], "nround": [105, 106, 107], "round": [105, 106, 107], "step2loc": 106, "step3mast": 106, "forth": [106, 378], "step5mast": 106, "nrowstot": 106, "firstiter": 106, "outputforstep5requir": 106, "parrallelplu": 106, "partialcentroid": 106, "inputofstep2": 106, "internalinput": 106, "outputofstep2forstep3": [106, 156, 170], "accumul": [106, 137, 183], "outputofstep2forstep5": 106, "candid": [106, 107], "inputofstep3fromstep2": [106, 156, 170], "outputofstep3forstep5": 106, "inputofstep4fromstep3": 106, "outputofstep4": 106, "ad": [106, 150, 176, 180, 191, 382], "inputofstep5fromstep2": 106, "inputofstep5fromstep3": 106, "radiu": 107, "c_1": [107, 158, 159, 160, 180, 336, 337], "c_k": [107, 159, 180, 336, 337], "\u03c6": 107, "center": [107, 127, 151, 341], "draw": 107, "resum": [107, 128], "desir": [107, 180, 378, 388], "c_i": [107, 160], "i\u03f5x": 107, "goal": [107, 382], "d_2": 107, "\u03b3": 107, "impact": 107, "p_1": 107, "p_2": 107, "x_k": [107, 172, 364], "distant": [107, 143, 354], "gather": [107, 150, 152, 171, 387], "local": [107, 150, 152, 171, 249, 378], "flow": [107, 140, 182, 378, 382, 387], "kmeans_dense_batch": 107, "kmeans_csr_batch": 107, "kmeans_dense_distr": 107, "kmeans_csr_distr": 107, "x_p": [108, 110, 113, 115, 116], "explanatori": [108, 110, 113, 116], "penalti": [108, 110, 111], "situat": [108, 150, 152, 171, 177], "y_k": [108, 110, 113, 115, 140, 172, 364], "l_1": [108, 110, 111], "l_2": [108, 336, 385], "beta_": [108, 110, 113, 114, 115, 159], "0j": [108, 110, 113, 114, 115, 131, 132, 159], "1j": [108, 110, 111, 113, 115], "pj": [108, 110, 113, 115], "1k": [108, 110, 111, 115, 357, 358, 360], "nk": [108, 110, 115, 160, 357, 358, 360], "beta": [108, 110, 113, 116, 158, 160, 164, 186, 191], "2n": [108, 110, 133, 364], "qj": [108, 110, 115], "iq": [108, 110, 115, 131], "lambda_": [108, 110, 111], "2j": [108, 111], "beta_j": [108, 110], "relev": [110, 161], "few": 110, "overcom": [110, 115], "multicollinear": [110, 115], "grammatrix": [111, 133], "gram": [111, 133], "choss": 111, "interceptflag": [111, 113, 114, 116, 131, 132, 133, 159], "lassoparamet": 111, "lambda_i": 111, "lambda_j": [111, 114, 115], "lambda_1": [111, 114, 116, 131, 132], "lambda_k": [111, 114, 341], "optimizationsolv": [111, 116], "optresulttocomput": 111, "computegrammatrix": 111, "datauseincomput": 111, "permiss": [111, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 388], "overwrit": [111, 140, 192], "penaltyl1": [111, 116, 131, 132, 133], "umer": 111, "veriabl": 111, "penaltyl2": [111, 116, 131, 132, 133], "lambda_2": [111, 116, 131, 132], "21": 111, "2k": 111, "compromis": 111, "lasso_reg_dense_batch": 111, "elastic_net_dense_batch": 111, "residu": [111, 159], "gg": [113, 115], "setbeta": [113, 116], "intercept": [113, 116, 133, 225, 226, 272, 273, 274], "getstatu": [113, 116, 172, 173, 180, 193], "daal_nothrow_except": [113, 116, 172, 173], "macro": [113, 116, 160, 172, 173], "lin_reg_model_build": 113, "qrdens": 114, "ridgeparamet": 114, "dependentvari": [114, 131, 132, 133, 198], "0_j": 114, "lin_reg_norm_eq_dense_batch": 114, "lin_reg_qr_dense_batch": 114, "ridge_reg_norm_eq_dense_batch": 114, "lin_reg_norm_eq_dense_onlin": 114, "lin_reg_qr_dense_onlin": 114, "ridge_reg_norm_eq_dense_onlin": 114, "lin_reg_norm_eq_dense_distr": 114, "lin_reg_qr_dense_distr": 114, "ridge_reg_norm_eq_dense_distr": 114, "x_ij": [115, 131, 132], "\u03bb_j": 115, "posterior": 116, "00": [116, 131], "dot": [116, 348, 385], "0p": 116, "k0": 116, "iterative_solv": 116, "formula": [116, 161, 338, 356], "log_reg_model_build": 116, "theta_j": [116, 124, 131, 132, 133], "sgd": [116, 142], "adagrad": [116, 137], "lbfg": [116, 140], "broyden": [116, 128, 136, 174], "fletcher": [116, 128, 136, 174], "goldfarb": [116, 128, 136, 174], "shanno": [116, 128, 136, 174], "computeclasseslabel": 116, "computeclassesprob": 116, "computeclasseslogprob": 116, "logprob": [116, 195], "log_reg_dense_batch": 116, "log_reg_binary_dense_batch": 116, "estimatestocomput": [117, 118, 119], "estimatesal": [117, 118, 119], "estimatesminmax": [117, 118, 119], "estimatesmeanvari": [117, 118, 119], "sumsquar": [117, 118, 119, 181], "sumsquarescent": [117, 118, 119], "secondorderrawmo": [117, 118, 119], "standarddevi": [117, 118, 119], "partialminimum": [118, 119], "partialmaximum": [118, 119], "partialsumsquar": [118, 119], "partialsumsquarescent": [118, 119], "six": 118, "dispers": 120, "smash": [120, 361], "displaystyl": [120, 361], "min_i": [120, 361], "max_i": [120, 361], "sum_i": [120, 361], "s_2": [120, 361], "a_2": [120, 361], "sdm": [120, 361], "k_2": [120, 361], "stdev": [120, 361], "low_order_moms_dense_batch": 120, "low_order_moms_csr_batch": 120, "low_order_moms_dense_onlin": 120, "low_order_moms_csr_onlin": 120, "low_order_moms_dense_distr": 120, "low_order_moms_csr_distr": 120, "priorclassestim": [121, 122, 123], "imagin": [121, 122, 123, 124], "occurr": [121, 122, 123, 124, 146], "trainin": 122, "medic": 124, "diagnosi": 124, "spite": 124, "ip": [124, 133, 159], "frequenc": [124, 140], "n_": 124, "mn_naive_bayes_dense_batch": 124, "mn_naive_bayes_csr_batch": 124, "mn_naive_bayes_dense_onlin": 124, "mn_naive_bayes_csr_onlin": 124, "mn_naive_bayes_dense_distr": 124, "mn_naive_bayes_csr_distr": 124, "feed": [125, 341], "linearli": 126, "_j": [126, 127, 139, 159, 165, 356], "lowerbound": 126, "upperbound": 126, "low_order_mo": [126, 127], "normalizeddata": [126, 127], "minmax_dense_batch": 126, "omn": 127, "doscal": 127, "sigma_j": [127, 159], "zscore_dense_batch": 127, "theta_": [128, 131, 132, 136, 137, 138, 139, 140, 141], "argmin": [128, 129, 136], "f_i": [128, 131, 132, 133, 134, 141, 180], "smooth": [128, 129, 130, 131, 132, 133, 134, 139, 141], "present": [128, 382], "intrins": [128, 137, 138, 139, 141, 142], "s_0": 128, "i_b": 128, "i_j": 128, "nabla": [128, 129, 131, 132, 133, 134, 140, 142], "_d": 128, "lebesgu": [128, 137, 139, 140, 141, 142], "theta_t": [128, 137, 139, 141], "exit": 128, "optionalresultrequir": [128, 138], "theta_p": [129, 132, 133], "ccc": [129, 131, 140], "ddot": [129, 131, 140], "proxim": [129, 130, 131, 132, 133, 134], "prox": [129, 131, 132, 133, 139, 141], "eta": [129, 137, 139, 141, 142], "_2": [129, 131, 132, 133], "lipschitz": [129, 130, 131, 132, 133, 134, 141], "constantoflipschitz": [129, 130, 141], "nonsmoothtermvalu": [130, 131, 132, 133, 134], "proximalproject": [130, 131, 132, 133, 134], "lipschitzconst": [130, 131, 132, 133, 134, 141], "gradientovercertainfeatur": [130, 131, 134], "hessianovercertainfeatur": [130, 131, 134], "proximalprojectionofcertainfeatur": [130, 131, 134], "valueidx": 130, "nonsmoothtermvalueidx": 130, "gradientidx": 130, "hessianidx": 130, "proximalprojectionidx": 130, "lipschitzconstantidx": 130, "gradientovercertainfeatureidx": 130, "hessianovercertainfeatureidx": 130, "proximalprojectionovercertainfeatureidx": 130, "tj": 131, "p_t": 131, "f_t": 131, "t0": 131, "z_j": 131, "i_r": [131, 132, 133], "g_t": [131, 137, 141], "l_": 131, "vdot": 131, "pq": 131, "g_": [131, 137], "tp": [131, 158, 160], "p_p": 131, "theta_0": [131, 132, 133, 138, 141], "numberofterm": [131, 132, 133], "batchindic": [131, 132, 133, 137, 140, 141, 142], "lbfgs_cr_entr_loss_dense_batch": 131, "z_k": 132, "sgd_log_loss_dense_batch": 132, "2m": [133, 140], "i_k": 133, "ndependentvari": 133, "mse_dense_batch": 133, "nabla_i": 134, "abil": [135, 372, 378], "presenc": 136, "g_0": [137, 141], "equiv": [137, 141, 142, 348, 354], "g_1": 137, "g_p": 137, "optionaldataid": [137, 140, 141], "gradientsquaresum": 137, "batchsiz": [137, 140, 142], "128": [137, 142], "adagrad_dense_batch": 137, "adagrad_opt_res_dense_batch": 137, "inputargu": 138, "optionalargu": 138, "statement": 138, "e5": 138, "optionalresult": 138, "remaind": 139, "divis": [139, 189, 382], "mod": 139, "steplengthsequ": [139, 140], "ep": 139, "nfeatur": [139, 161], "infin": 139, "cyclic": [139, 140], "skipthefirstcompon": 139, "cd_dense_batch": 139, "curvatur": 140, "s_j": [140, 336], "buffer": [140, 180, 182, 189, 387], "2l": 140, "i_h": 140, "b_h": 140, "i_l": 140, "correctionpairbatchs": 140, "lk": 140, "unchang": 140, "rho": 140, "bfg": 140, "correctionpair": 140, "correctionindic": 140, "averageargumentliter": 140, "correctionpairindic": 140, "lbfgs_dense_batch": 140, "lbfgs_opt_res_dense_batch": 140, "w_t": 141, "eta_j": 141, "gradientt": 141, "learningratesequ": [141, 142], "diminish": 141, "saga_dense_batch": 141, "saga_logistic_loss_dense_batch": 141, "minibatch": 142, "eta_t": 142, "conserv": 142, "gamma_t": 142, "v_t": [142, 159, 171], "conservativesequ": 142, "innerniter": 142, "9": [142, 205, 253, 344], "sgd_dense_batch": 142, "sgd_mini_dense_batch": 142, "sgd_moment_dense_batch": 142, "sgd_moment_opt_res_dense_batch": 142, "abnorm": [143, 146], "univari": 143, "alpha_n": [144, 146], "m_n": [144, 146], "sigma_n": [144, 146], "scatter": [144, 146], "out_detect_mult_dense_batch": 144, "benefit": [144, 152, 171], "5p": 145, "med": 145, "wise": 145, "mahalanobi": 145, "d_i": 145, "discrep": 145, "npr": 145, "chi_": 145, "percentil": [145, 159], "chi": 145, "freedom": 145, "hr": 145, "3p": 145, "initializationmethod": 145, "baconmedian": 145, "05": [145, 159], "One": [145, 173, 177, 382], "tail": [145, 382], "tolerancetoconverg": 145, "005": 145, "out_detect_bacon_dense_batch": 145, "adjust": [146, 180], "out_detect_uni_dense_batch": 146, "svddens": [147, 148, 149, 150, 151], "zscore": [147, 159], "p_r": [147, 150, 151, 161], "isdeterminist": 147, "datafortransform": [147, 151], "whiten": [147, 151], "pleas": [147, 180], "nobservationscorrel": [148, 149], "crossproductcorrel": [148, 149], "sumcorrel": [148, 149], "sumsvd": [148, 149], "sumsquaressvd": [148, 149], "auxiliarydatasvd": 148, "transmit": [148, 156, 170], "nobservationssvd": [148, 149], "orthogon": [150, 152, 153, 154, 171, 367], "redund": [150, 344], "hoc": 150, "paper": 150, "sgn": [150, 341, 385], "max_": [150, 336, 337, 341, 354], "signum": [150, 341], "pca_cor_csr_batch": 150, "pca_svd_dense_batch": 150, "pca_cor_dense_onlin": [150, 201, 250], "pca_cor_csr_onlin": 150, "pca_svd_dense_onlin": 150, "pca_cor_dense_distr": 150, "pca_cor_csr_distr": 150, "pca_svd_dense_distr": 150, "setnormalizationflag": 150, "numerictableifac": [150, 181], "auxiliari": [150, 152, 171], "hide": [150, 152, 171, 382], "latenc": [150, 152, 171], "slow": [150, 152, 171], "load": [150, 152, 171, 180, 193, 218, 274, 378, 388], "prefetch": [150, 152, 171], "becom": [150, 152, 171, 177, 193, 382], "bottleneck": [150, 152, 171], "pr": 151, "ncolumn": [151, 182], "transformeddata": 151, "pca_transform_dense_batch": 151, "pivot": 152, "xp": 153, "rectangular": [153, 154, 171], "q_1": [153, 154, 155, 156], "q_2": [153, 154], "bmatrix": [153, 154], "permutedcolumn": 153, "matrixq": [153, 155, 156], "matrixr": [153, 155, 156], "permutationmatrix": 153, "pivoted_qr_dense_batch": 153, "qr_dense_batch": 154, "qr_dense_onlin": 154, "qr_dense_distr": 154, "submatrix": [155, 169], "outputofstep1forstep3": [156, 170], "come": [156, 170, 183], "deliv": [156, 170], "inputofstep3fromstep1": [156, 170], "conveni": 157, "c2": 158, "recal": [158, 160], "qualitymetricsid": [158, 159, 160, 161, 162], "confusionmatrix": [158, 160], "recogn": [158, 160], "tn": [158, 160], "fp": [158, 160], "incorrectli": [158, 160], "fn": [158, 160], "under": [158, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 331], "curv": 158, "auc": 158, "c_2": [158, 180], "predictedlabel": [158, 160], "groundtruthlabel": [158, 160], "binarymetr": 158, "fscore": 158, "svm_two_class_metrics_dense_batch": 158, "ht": 159, "variou": [159, 187, 331, 377, 378], "singlebeta": 159, "groupofbeta": 159, "around": 159, "erm": 159, "rm": 159, "sigma_1": 159, "sigma_k": [159, 341], "jt": 159, "c_j": [159, 180, 336], "\u03bd_t": 159, "_1": [159, 341], "_k": 159, "erv": 159, "regss": 159, "resss": 159, "tss": 159, "tt": 159, "r_k": [159, 161], "2_j": 159, "f_1": [159, 180], "p_0": 159, "expectedrespons": 159, "linear_regress": [159, 225, 226, 272, 273], "predictedrespons": 159, "signific": [159, 184], "001": [159, 172, 220, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 267, 280], "betacovari": 159, "confidenceinterv": 159, "inverseofxtx": 159, "tx": 159, "predictedreducedmodelrespons": 159, "numbeta": 159, "numbetareducedmodel": 159, "expectedmean": 159, "expectedvari": 159, "determinationcoeff": 159, "fstatist": 159, "lin_reg_metrics_dense_batch": 159, "c_l": [160, 336], "_i": [160, 341, 385], "fn_i": 160, "micro": 160, "_m": [160, 341], "1l": 160, "il": [160, 357, 358, 360], "ni": [160, 164], "usedefaultmetr": [160, 162], "multiclassmetr": 160, "averageaccuraci": 160, "errorr": 160, "microprecis": 160, "microrecal": 160, "microfscor": 160, "macroprecis": 160, "macrorecal": 160, "macrofscor": 160, "svm_multi_class_metrics_dense_batch": 160, "e_i": [161, 382], "radio": 161, "explainedvariancemetr": 161, "meet": [161, 164, 192], "e_0": 161, "e_k": 161, "That": 161, "incorrect": 161, "explainedvari": 161, "explainedvariancesratio": 161, "noisevari": 161, "pca_metrics_dense_batch": 161, "qualit": [162, 382], "resultid": 162, "regist": [163, 185], "inputalgorithm": 163, "inputdata": [163, 192], "analyz": [164, 177], "beta_1": 164, "beta_m": 164, "xi_i": 164, "beta_k": 164, "quantileord": 164, "quantiles_dense_batch": 164, "radix": 165, "sorteddata": 165, "31": 165, "quick": [165, 331, 332], "sorting_dense_batch": 165, "decision_tre": 166, "computeclasslabel": [166, 173], "computeclassprob": [166, 195], "stump_cls_gini_dense_batch": 166, "stump_cls_infogain_dense_batch": 166, "stump_reg_mse_dense_batch": 168, "leftsingularmatrix": [169, 170], "requiredinpackedform": [169, 170], "notrequir": [169, 170], "rightsingularmatrix": [169, 170], "singularvalu": [169, 170], "broad": 171, "svd_dense_batch": 171, "svd_dense_onlin": 171, "svd_dense_distr": 171, "conjunct": 172, "variant": 172, "q_": [172, 341, 364], "wss": [172, 364], "setsupportvector": 172, "setclassificationcoeffici": 172, "setsupportindic": 172, "setbia": 172, "svm_two_class_model_build": 172, "caches": 172, "8000000": 172, "doshrink": 172, "kernelifac": 172, "svm_two_class_boser_dense_batch": 172, "svm_two_class_boser_csr_batch": 172, "svm_two_class_thunder_csr_batch": [172, 201, 202], "greatli": 172, "fulli": [172, 378], "util": [172, 190, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "permit": [173, 192], "turn": 173, "settwoclassclassifiermodel": 173, "svm_multi_class_model_build": 173, "votebas": 173, "pmethod": 173, "tmethod": 173, "oneagainston": 173, "computedecisionfunct": 173, "decisionfunct": 173, "svm_multi_class_boser_csr_batch": 173, "svm_multi_class_boser_dense_batch": 173, "svm_multi_class_thunder_csr_batch": [173, 201, 202], "datasourcefeatur": 176, "datasourcedictionari": 176, "numerictabledictionari": 176, "manipul": 176, "getdictionari": [176, 180, 182], "setdictionari": [176, 180], "dodictionaryfromcontext": 176, "createdictionaryfromcontext": [176, 180], "src": [176, 179, 180, 182, 184, 186, 187, 188], "constitu": 177, "acquisit": [177, 199, 378], "convers": [177, 181, 371, 378], "stream": [177, 180, 183, 378, 386], "customiz": 177, "tabular": [177, 378, 385], "evolv": 177, "rare": 177, "blank": 177, "recoveri": [177, 179], "emul": 177, "ordinari": 177, "mechan": [177, 179, 200], "encod": [177, 180, 184, 379, 382], "mimic": [178, 382], "compact": 178, "unavail": 178, "categori": 178, "popul": 178, "soon": 178, "exchang": [179, 193], "inputdataarch": 179, "archiv": 179, "outputdataarch": 179, "footer": 179, "serializ": 179, "dictionari": [179, 180, 182], "allocatenumerict": 180, "getnumerict": 180, "getnumberofcolumn": [180, 182], "getnumberofavailablerow": 180, "readyforload": 180, "waitingfordata": 180, "later": [180, 182, 386, 388, 389], "endofdata": 180, "loaddatablock": 180, "recalcul": [180, 336], "possiblevalu": 180, "filedatasourc": 180, "csvfeaturemanag": 180, "odbc": 180, "odbcdatasourc": 180, "mysqlfeaturemanag": 180, "stringdatasourc": 180, "kdb": 180, "kdbdatasourc": 180, "kdbfeaturemanag": 180, "addmodifi": 180, "columnfilt": 180, "onehotencod": 180, "hot": 180, "binar": 180, "featureid": 180, "featuremodifi": 180, "featuremodifierifac": 180, "proper": 180, "code": [180, 188, 201, 374, 382, 388], "bellow": 180, "crate": 180, "f1": 180, "f2": 180, "getfeaturemanag": 180, "allrevers": 180, "data_manag": 180, "sql": [180, 187], "f4": 180, "mix": 180, "stl": 180, "idfactori": 180, "fv": 180, "write": [180, 182, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 388], "f_m": 180, "interest": 180, "c_m": 180, "pictur": [180, 378, 382], "f_3": 180, "f_2": 180, "f_5": 180, "inherit": 180, "featuremodifierbas": 180, "overrid": 180, "myfeaturemodifi": 180, "config": 180, "setnumberofoutputfeatur": 180, "carri": 180, "getoutputbuff": 180, "getdatalayout": 181, "csr_arrai": 181, "condens": [181, 184], "lowerpackedsymetricmatrix": [181, 184], "upperpackedsymetricmatrix": [181, 184], "unsupport": 181, "getblockofrow": [181, 182], "getblockofcolumnvalu": [181, 182], "highli": [181, 183, 331], "nativ": 181, "densenumerictableifac": 181, "csrnumerictableifac": 181, "packednumerictableifac": 181, "basicstatist": 181, "getarrai": [181, 182], "setarrai": [181, 182], "getpackedvalu": 181, "releasepackedvalu": 181, "rowindex": [181, 184], "getblockofcsrvalu": 181, "releaseblockofcsrvalu": 181, "addnumerict": 181, "life": 182, "cycl": 182, "transit": 182, "unpredict": 182, "donotalloc": 182, "doalloc": 182, "realloc": 182, "resiz": 182, "releaseblockofrow": 182, "rwflag": 182, "blockdescriptor": 182, "writeonli": 182, "readwrit": 182, "firstreadrow": 182, "nreadrow": 182, "readonli": 182, "getblockptr": 182, "col": [182, 205, 253], "releaseblockofcolumnvalu": 182, "getnumberofrow": 182, "resetdictionari": 182, "getfeaturetyp": 182, "getnumberofcategori": 182, "getdatamemorystatu": 182, "allocatedatamemori": 182, "addition": [182, 341], "complimentari": 182, "serial": 182, "deseri": 182, "resourc": [182, 200], "implicitli": 182, "numpi": 182, "good": 183, "synchron": 183, "heterogen": [183, 378, 382], "guidanc": 183, "laid": 184, "suitabl": 184, "footprint": [184, 191], "datalayout": 184, "offer": [184, 200], "providingonebas": 184, "csrindex": 184, "compris": 184, "join": [184, 382], "r_2": 184, "r_m": 184, "interrupt": 185, "abstract": [185, 193, 382], "sethostapp": 185, "hostappifaceptr": 185, "phost": 185, "hostapp": 185, "iscancel": 185, "cancel": 185, "errorusercancel": 185, "safe": 185, "instal": [186, 331, 368, 388], "libraryversioninfo": 186, "majorvers": 186, "minorvers": 186, "minor": 186, "updatevers": 186, "productstatu": 186, "recover": 187, "unrecover": 187, "unsuccess": 187, "routin": [187, 374], "extend": [187, 381], "getdescript": 187, "clear": 187, "setid": 187, "computenothrow": 187, "setresult": [187, 192], "setpartialresult": [187, 192], "singleton": 188, "getcpuid": 188, "setcpuid": 188, "getnumberofthread": 188, "setnumberofthread": 188, "window": [188, 388, 389], "setdynamiclibrarythreadingtypeonwindow": 188, "pin": 188, "enablethreadpin": 188, "bind": [188, 356], "physic": [188, 378, 382], "improp": 188, "degrad": 188, "align": 189, "lead": 189, "freed": [189, 382], "subdivid": 190, "unlik": [191, 192], "phase": 191, "stricter": 191, "hierarchi": 191, "elsewher": 191, "readi": 191, "algorithmifac": 192, "preset": 192, "getresult": 192, "getpartialresult": 192, "initializationprocedureifac": 192, "technologi": [193, 199], "hadoop": 193, "spark": [193, 200], "protocol": 193, "computeclasslogprob": 195, "preprocess": [199, 331], "consum": 199, "agnost": 199, "page": 200, "ongo": 200, "packag": 200, "oap": 200, "comprehens": 200, "mllib": 200, "2024": 200, "favour": 200, "ipp": 200, "broken": 200, "enforc": 200, "relink": 200, "clean": 200, "newer": 200, "2023": [200, 204, 208, 210, 211, 226, 227, 230, 237, 239, 241, 243, 245, 247, 252, 255, 257, 258, 261, 264, 273, 274, 276], "x86": [200, 389], "basic_statistics_dense_onlin": [201, 202, 250], "column_accessor_homogen": [201, 202, 250], "cor_dense_batch": [201, 202, 250, 290, 339], "cor_dense_onlin": [201, 202, 250], "cov_dense_onlin": [201, 202, 250], "df_cls_hist_batch_random": [201, 250], "df_reg_hist_batch_random": [201, 250], "knn_reg_brute_force_dense_batch": [201, 250], "linear_regression_dense_batch": [201, 202, 250], "linear_regression_dense_onlin": [201, 202, 250], "logistic_regression_dense_batch": [201, 250], "pca_precomputed_cor_dense_batch": [201, 250], "pca_precomputed_cov_dense_batch": [201, 250], "directed_graph": [201, 202], "graph_service_funct": [201, 202], "jaccard_batch": [201, 202], "jaccard_batch_app": [201, 202], "logloss_dense_batch": [201, 202, 318, 355], "louvain_batch": [201, 202], "pca_dense_onlin": [201, 202], "pca_precomputed_dense_batch": [201, 202], "polynomial_kernel_dense_batch": [201, 202, 309, 348], "shortest_paths_batch": [201, 202], "sigmoid_kernel_dense_batch": [201, 202, 313, 348], "svm_nu_cls_thunder_csr_batch": [201, 202], "svm_nu_reg_thunder_csr_batch": [201, 202], "svm_reg_thunder_csr_batch": [201, 202], "svm_two_class_smo_csr_batch": [201, 202], "triangle_counting_batch": [201, 202], "catalog": 201, "offload": 201, "multiarchitectur": 201, "fpga": 201, "corpor": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "licens": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "apach": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "complianc": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "unless": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "law": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "agre": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "AS": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "warranti": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "OF": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "languag": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 382], "govern": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "example_util": [203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "argc": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "argv": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "data_file_nam": [203, 204, 212, 224, 232, 233, 235, 251, 252, 259, 271, 279], "get_data_path": [203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "covcormoments_dens": [203, 204, 207, 208, 209, 210, 251, 252, 254, 255, 256, 257], "partial_compute_result": [204, 208, 210, 252, 255, 257], "partial_result": [204, 208, 210, 226, 230, 252, 255, 257, 273, 276], "input_t": [204, 208, 210, 230, 252, 255, 257, 276], "split_table_by_row": [204, 208, 210, 226, 230, 252, 255, 257, 273, 276], "partial_comput": [204, 208, 210, 252, 255, 257], "finalize_comput": [204, 208, 210, 252, 255, 257], "2020": [205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 229, 233, 236, 246, 248, 249, 253, 259, 260, 263, 266, 267, 268, 271, 275, 279, 280], "col_valu": [205, 253], "filenam": [206, 215, 216, 217, 218, 228, 234, 249], "graph_t": [206, 215, 216, 217, 218, 228, 234, 236, 249], "cc_desc": 206, "result_connected_compon": 206, "vertex_partit": [206, 228, 304, 344], "input_file_nam": [207, 208, 209, 210, 254, 255, 256, 257], "cov_desc": [207, 208, 209, 210, 254, 255, 256, 257], "subtable_data": 211, "subtable_column_indic": 211, "subtable_row_offset": 211, "dbscan_dens": [212, 259], "x_data": [212, 259], "result_comput": [212, 259], "train_data_file_nam": [213, 214, 219, 220, 221, 222, 223, 225, 226, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 280], "df_classification_train_data": [213, 260, 261, 262], "train_response_file_nam": [213, 214, 221, 222, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 268, 269, 272, 273, 280], "df_classification_train_label": [213, 260, 261, 262], "test_data_file_nam": [213, 214, 220, 221, 222, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 280], "df_classification_test_data": [213, 260, 261, 262], "test_response_file_nam": [213, 214, 220, 221, 222, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 280], "df_classification_test_label": [213, 260, 261, 262], "x_train": [213, 214, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280], "y_train": [213, 214, 221, 222, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 268, 269, 272, 273, 274, 280], "x_test": [213, 214, 220, 221, 222, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 274, 280], "y_test": [213, 214, 220, 225, 226, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 274], "df_desc": [213, 214, 260, 261, 262, 263, 264, 265], "variable_importance_mod": [213, 214, 260, 263, 264], "error_metric_mod": [213, 214, 260, 263, 264], "infer_mod": [213, 260, 261], "result_inf": [213, 214, 229, 230, 231, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 261, 263, 264, 275, 276, 277, 278], "ground": [213, 214, 220, 260, 261, 263, 264, 267], "truth": [213, 214, 220, 260, 261, 263, 264, 267], "df_regression_train_data": [214, 263, 264, 265], "df_regression_train_label": [214, 263, 264, 265], "df_regression_test_data": [214, 263, 264, 265], "df_regression_test_label": [214, 263, 264, 265], "weighted_edge_list": [215, 228, 234], "weight_typ": [215, 228, 234], "read_mod": [215, 228, 234], "vertex_id": [215, 216], "neigh": [215, 216], "output_helpers_graph": 217, "jaccard": [217, 218], "row_range_begin": [217, 218], "row_range_end": [217, 218], "column_range_begin": [217, 218], "column_range_end": [217, 218], "jaccard_desc": [217, 218], "set_block": [217, 218], "caching_build": [217, 218], "result_vertex_similar": 217, "vertex_similar": [217, 218], "jaccard_coeff": 217, "vertex_pair": 217, "get_vertex_pair": 217, "nonzero_coeff_count": 217, "get_nonzero_coeff_count": 217, "nonzero": 217, "print_vertex_similarity_result": 217, "tbb": [218, 368], "global_control": 218, "symmet": 218, "block_row_count": 218, "block_column_count": 218, "vertex_similarity_block_process": 218, "tbb_threads_numb": 218, "max_allowed_parallel": 218, "processing_block": 218, "this_task_arena": 218, "max_concurr": 218, "blocked_rang": 218, "column_begin": 218, "inner_r": 218, "current_thread_index": 218, "postprocess": 218, "simple_partition": 218, "iomanip": [219, 221, 222, 259, 266, 267, 275, 276, 277, 278], "method_nam": [219, 229, 230, 231, 266], "kmeans_init_desc": [219, 266], "result_init": [219, 266], "kmeans_dense_train_data": [220, 267], "initial_centroids_file_nam": [220, 267], "kmeans_dense_train_centroid": [220, 267], "kmeans_dense_test_data": [220, 267], "kmeans_dense_test_label": [220, 267], "result_test": [220, 237, 238, 267, 280], "k_nearest_neighbors_train_data": [221, 222, 223, 268, 270], "k_nearest_neighbors_train_label": [221, 222, 268], "k_nearest_neighbors_test_data": [221, 222, 223, 268, 270], "k_nearest_neighbors_test_label": [221, 222, 268], "y_true": [221, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280], "test_result": [221, 222, 223, 225, 226, 270, 272, 273, 274], "query_data_file_nam": [223, 270], "x_queri": [223, 270], "cosine_desc_t": 223, "cosine_desc": 223, "neighbors_count": [223, 270], "kernel_funct": [224, 232, 233, 235, 271, 279], "kernel_desc": [224, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 271, 279, 280], "linear_regression_train_data": [225, 226, 272, 273], "linear_regression_train_respons": [225, 226, 272, 273], "linear_regression_test_data": [225, 226, 272, 273], "linear_regression_test_respons": [225, 226, 272, 273], "lr_desc": [225, 226, 272, 273], "get_coeffici": [225, 226, 272, 273, 274], "get_intercept": [225, 226, 272, 273, 274], "lr_model": [225, 226, 272, 273], "partial_train_result": [226, 230, 273, 276], "input_table_x": [226, 273], "input_table_i": [226, 273], "partial_train": [226, 230, 273, 276], "finalize_train": [226, 230, 273, 276], "data_filenam": 227, "df_binary_classification_train_data": [227, 274], "labels_filenam": 227, "df_binary_classification_train_label": [227, 274], "params_filenam": 227, "logreg_param": 227, "dense_batch_method": 227, "logloss_desc": 227, "louvain": 228, "louvain_desc": 228, "set_resolut": 228, "0001": 228, "col_count": 228, "initial_label": 228, "modular": 228, "get_modular": 228, "get_community_count": 228, "pca_norm": [229, 230, 275, 276], "2022": [231, 277, 278, 389], "cov_data_file_nam": 231, "precomputed_covari": [231, 278], "cor_data_file_nam": 231, "precomputed_correl": [231, 277], "cov_train": 231, "cor_train": 231, "shortest_path": 234, "shortest_paths_desc": 234, "delta_step": 234, "one_to_al": 234, "85": 234, "optional_result": 234, "predecessor": 234, "shortest": 234, "result_shortest_path": 234, "get_predecessor": 234, "target_filenam": 236, "si_target_graph": 236, "pattern_filenam": 236, "si_pattern_graph": 236, "subgraph_isomorphism_desc": 236, "graph_match": [236, 306, 346], "svm_multi_class_train_sparse_data": 237, "svm_multi_class_train_sparse_label": 237, "svm_multi_class_test_sparse_data": 237, "svm_multi_class_test_sparse_label": 237, "x_train_csr": [237, 239, 241, 243, 245, 247], "convert_to_csr": [237, 239, 241, 243, 245, 247], "svm_desc": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 280], "svm_multi_class_train_dense_data": 238, "svm_multi_class_train_dense_label": 238, "svm_multi_class_test_dense_data": 238, "svm_multi_class_test_dense_label": 238, "svm_two_class_train_sparse_data": [239, 245, 247], "svm_two_class_train_sparse_label": [239, 245, 247], "svm_two_class_test_sparse_data": [239, 245, 247], "svm_two_class_test_sparse_label": [239, 245, 247], "svm_two_class_train_dense_data": [240, 246, 248, 280], "svm_two_class_train_dense_label": [240, 246, 248, 280], "svm_two_class_test_dense_data": [240, 246, 248, 280], "svm_two_class_test_dense_label": [240, 246, 248, 280], "svm_reg_train_sparse_data": [241, 243], "svm_reg_train_sparse_label": [241, 243], "svm_reg_test_sparse_data": [241, 243], "svm_reg_test_sparse_label": [241, 243], "svm_reg_train_dense_data": [242, 244], "svm_reg_train_dense_label": [242, 244], "svm_reg_test_dense_data": [242, 244], "svm_reg_test_dense_label": [242, 244], "triangle_count": 249, "tc_desc": 249, "ordered_count": 249, "local_and_glob": 249, "triangl": 249, "result_vertex_rank": 249, "vertex_rank": 249, "get_global_rank": 249, "local_triangles_t": 249, "local_triangl": 249, "local_triangles_data": 249, "list_devic": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280], "get_platform": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "get_info": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "info": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "platform": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 368, 383], "dpc_helper": [253, 258], "data_host": [253, 258], "make_default_delet": [253, 258], "column_indices_host": 258, "row_offsets_host": 258, "unimpl": [260, 261, 262, 263, 264, 265, 269], "splitter_mod": [261, 264], "print_node_visitor": [262, 265], "get_level": [262, 265], "get_impur": [262, 265], "get_sample_count": [262, 265], "index_class": 262, "get_feature_index": [262, 265], "get_feature_valu": [262, 265], "print_model": [262, 265], "15": [262, 356], "150": 263, "knn_desc_uniform": [268, 269], "knn_desc_dist": [268, 269], "train_result_uniform": [268, 269], "train_result_dist": [268, 269], "test_result_uniform": [268, 269], "test_result_dist": [268, 269], "knn_regression_train_data": 269, "knn_regression_train_respons": 269, "knn_regression_test_data": 269, "knn_regression_test_respons": 269, "descriptor_t": [269, 277, 278], "todo": 269, "get_devic": 271, "logistic_regress": 274, "chrono": 274, "steady_clock": 274, "get_time_dur": 274, "time_point": 274, "duration_cast": 274, "millisecond": 274, "x_train_filenam": 274, "y_train_filenam": 274, "x_test_filenam": 274, "df_binary_classification_test_data": 274, "y_test_filenam": 274, "df_binary_classification_test_label": 274, "tm1": 274, "tm2": 274, "optimizer_t": 274, "newton_cg": 274, "optimizer_desc": 274, "10l": 274, "log_reg_desc": 274, "iterations_count": 274, "tm3": 274, "get_iterations_count": 274, "log_reg_model": 274, "tm4": 274, "y_true_arr": 274, "gth_ptr": 274, "pred_arr": 274, "pred_ptr": 274, "try_add_devic": 274, "gpu_selector_v": [274, 388], "speed": 331, "activ": [331, 364], "hardwar": [331, 383], "glossari": [331, 333, 384], "appendix": [331, 333], "bibliographi": 331, "java": 331, "abi": 331, "compat": 331, "download": [332, 378], "phi_": [336, 348], "min_": 336, "quad": [336, 341, 350, 352, 354, 357, 358, 360], "spec": 336, "disjoint": 336, "farthest": 336, "satisfi": [336, 374], "c_0": 337, "smpd": [338, 341, 342, 355, 356], "date": 341, "corel": 341, "upsilon_k": 341, "upsilon_": 341, "u_k": 341, "v_k": 341, "t_": 341, "n_f": 342, "n_b": 342, "compar": [342, 382], "decifion": 343, "quantiti": 344, "\u0441ompon": 344, "\u0441onnect": 344, "identif": 344, "shiloach": 344, "vishkin": 344, "fix": [344, 364], "probabilist": 344, "subseteq": [346, 354, 382], "endpoint": [346, 382], "biject": 346, "preserv": 346, "vf3": 346, "light": [346, 378], "stack": 346, "thu": [348, 378], "phi": 348, "leftarrow": 348, "phi_1": 348, "phi_2": 348, "ye": [348, 354], "tanh": 352, "jl": [354, 357, 358, 360], "y_r": 354, "tild": 354, "w_0": [355, 356], "w_p": [355, 356], "grad": [355, 356], "h_": [355, 356], "prob_i": 356, "_0": 356, "prob_k": 356, "u_1": [357, 358, 360], "u_": [357, 358, 360], "u_n": [357, 358, 360], "v_1": [357, 358, 360, 382], "v_m": [357, 358, 360], "u_i": [357, 358, 360], "v_j": [357, 358, 360, 382], "max_l": 357, "manual": [357, 358, 360], "toler": 364, "dual": 364, "constrain": 364, "subproblem": 364, "axi": 367, "dir": 368, "setvar": [368, 388], "sh": [368, 388], "icpx": 368, "icx": 368, "cl": 368, "folder": [368, 388], "latest": [368, 389], "link": [368, 388], "libonedal_cor": 368, "libonedal_dpc": 368, "libonedal_paramet": 368, "libonedal_parameters_dpc": 368, "libonedal_thread": 368, "lib": 368, "libonedal_sycl": 368, "visual": [368, 389], "studio": [368, 389], "toolset": 368, "directori": [368, 388], "onetbb": 368, "onedal_cor": 368, "onedal_thread": 368, "onedal_core_dl": 368, "onedald": 368, "onedal_dpcd": 368, "onedal_sycld": 368, "onedal_threadd": 368, "onedal_cored_dl": 368, "onedald_dl": 368, "onedal_dpcd_dl": 368, "dll": 368, "fsycl": 368, "my_first_dal_program": 368, "wl": 368, "lonedal_cor": 368, "lonedal_dpc": 368, "lonedal_parameters_dpc": 368, "lonedal_thread": 368, "lpthread": 368, "ldl": 368, "lopencl": 368, "ltbb": 368, "ltbbmalloc": 368, "lightweight": [371, 382], "intens": 371, "organ": [372, 378], "read_args_t": 374, "read_result_t": 374, "verbos": 374, "property_nam": 374, "property_typ": 374, "property_type_1": 374, "property_name_1": 374, "property_type_2": 374, "property_name_2": 374, "set_": 374, "standart": 377, "pipelin": 378, "perspect": 378, "prepar": 378, "remot": 378, "decompress": 378, "recov": 378, "dm": 378, "chunk": 378, "unnecessari": 378, "safeti": 378, "expos": [378, 382], "flat": [378, 382], "acquir": 378, "highlight": 378, "color": [378, 382], "dark": 378, "blue": 378, "orang": 378, "tm": [378, 382], "shortcut": 378, "jth": [379, 382], "weaken": 381, "table1": 381, "data_ptr": 381, "table2": 381, "table3": 381, "domain": 382, "synonym": 382, "supervis": 382, "dog": 382, "cat": 382, "email": 382, "spam": 382, "unsupervis": 382, "bunch": 382, "star": 382, "imag": 382, "person": 382, "height": 382, "price": 382, "hous": 382, "comma": 382, "retain": [382, 388], "rectangl": 382, "subtract": 382, "frame": 382, "temperatur": 382, "celsiu": 382, "fahrenheit": 382, "gender": 382, "car": 382, "student": 382, "grade": 382, "significantli": 382, "tower": 382, "weather": 382, "alter": 382, "faster": 382, "thrown": 382, "patter": 382, "a_g": 382, "v_2": 382, "v_n": 382, "v_i": 382, "walk": 382, "e_1": 382, "e_2": 382, "e_m": 382, "finit": 382, "nonempti": 382, "unord": 382, "succe": 382, "encapsul": 382, "principl": 382, "float32": 382, "float64": 382, "set_row_count": 382, "workload": 382, "jit": 382, "spir": 382, "portabl": 382, "style": 382, "inter": [382, 387], "oneccl": [382, 387], "onempi": [382, 387], "emploi": 382, "autonom": 382, "redesign": 384, "distinguish": 385, "interpret": 385, "cardin": 385, "x_d": 385, "sync": 387, "bcast": 387, "broadcast": 387, "allreduc": 387, "allgatherv": 387, "sendrecv_replac": 387, "send": 387, "allgetherv": 387, "displac": 387, "gap": 387, "till": 387, "install_dir": 388, "prebuilt": 388, "redist": 388, "extens": [388, 389], "gnu": [388, 389], "nmake": [388, 389], "depict": 388, "cassert": 388, "selector": 388, "breviti": 388, "train_r": 388, "assert": 388, "data_transform": 388, "dpcpp": 388, "comment": 388, "cpath": 388, "library_path": 388, "ld_library_path": 388, "var": 388, "script": 388, "modulefil": 388, "env": 388, "modul": 388, "moduleshom": 388, "bash": 388, "bat": 388, "writabl": 388, "temporari": 388, "cp": 388, "writable_dir": 388, "navig": 388, "cd": 388, "cmake": 388, "unix": 388, "makefil": 388, "dexamples_list": 388, "svm_two_class_thund": 388, "donedal_link": 388, "wouldgener": 388, "_result": 388, "tradit": 388, "6th": 389, "gen": 389, "iri": 389, "plu": 389, "xe": 389, "pro": 389, "atom": 389, "xeon": 389, "gcc": 389, "2019": 389, "ubuntu": 389, "18": 389, "server": 389}, "objects": {"": [[37, 0, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array::T"], [37, 2, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5arrayEP6impl_t", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI1TE", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI1TE", "oneapi::dal::array::array"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5arrayEv", "oneapi::dal::array::array"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::ConstDeleter"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::Deleter"], [37, 1, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::K"], [37, 1, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::Y"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::count"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE", "oneapi::dal::array::array::count"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE", "oneapi::dal::array::array::count"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::data"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::data"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::data"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE", "oneapi::dal::array::array::data"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE", "oneapi::dal::array::array::data"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::array::deleter"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::array::deleter"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayEP6impl_t", "oneapi::dal::array::array::impl"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI1TE", "oneapi::dal::array::array::other"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI1TE", "oneapi::dal::array::array::other"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE", "oneapi::dal::array::array::ref"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5emptyENSt7int64_tE", "oneapi::dal::array::empty"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5emptyENSt7int64_tE", "oneapi::dal::array::empty::count"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full::K"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K", "oneapi::dal::array::full::element"], [37, 2, 1, "_CPPv4NK6oneapi3dal5array9get_countEv", "oneapi::dal::array::get_count"], [37, 2, 1, "_CPPv4NK6oneapi3dal5array8get_dataEv", "oneapi::dal::array::get_data"], [37, 2, 1, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv", "oneapi::dal::array::get_mutable_data"], [37, 2, 1, "_CPPv4NK6oneapi3dal5array8get_sizeEv", "oneapi::dal::array::get_size"], [37, 2, 1, "_CPPv4NK6oneapi3dal5array9get_sliceENSt7int64_tENSt7int64_tE", "oneapi::dal::array::get_slice"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array9get_sliceENSt7int64_tENSt7int64_tE", "oneapi::dal::array::get_slice::first"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array9get_sliceENSt7int64_tENSt7int64_tE", "oneapi::dal::array::get_slice::last"], [37, 2, 1, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv", "oneapi::dal::array::has_mutable_data"], [37, 2, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataEv", "oneapi::dal::array::need_mutable_data"], [37, 2, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI1TE", "oneapi::dal::array::operator="], [37, 2, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI1TE", "oneapi::dal::array::operator="], [37, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI1TE", "oneapi::dal::array::operator=::other"], [37, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI1TE", "oneapi::dal::array::operator=::other"], [37, 2, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]"], [37, 3, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]::index"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5resetENSt7int64_tE", "oneapi::dal::array::reset"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5resetEv", "oneapi::dal::array::reset"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::ConstDeleter"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::Deleter"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::Y"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::Y"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::count"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5resetENSt7int64_tE", "oneapi::dal::array::reset::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::data"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::data"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::data"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::data"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter", "oneapi::dal::array::reset::deleter"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter", "oneapi::dal::array::reset::deleter"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE", "oneapi::dal::array::reset::ref"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE", "oneapi::dal::array::reset::ref"], [37, 2, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap"], [37, 1, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap::Y"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap::count"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE", "oneapi::dal::array::wrap::data"], [37, 2, 1, "_CPPv4N6oneapi3dal5array5zerosENSt7int64_tE", "oneapi::dal::array::zeros"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5zerosENSt7int64_tE", "oneapi::dal::array::zeros::count"], [29, 2, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute"], [29, 1, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute::Descriptor"], [29, 3, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute::desc"], [29, 3, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute::input"], [29, 0, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute_input"], [29, 1, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics13compute_inputE", "oneapi::dal::basic_statistics::compute_input::Task"], [29, 2, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5table", "oneapi::dal::basic_statistics::compute_input::compute_input"], [29, 2, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::basic_statistics::compute_input::compute_input"], [29, 2, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputEv", "oneapi::dal::basic_statistics::compute_input::compute_input"], [29, 3, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5table", "oneapi::dal::basic_statistics::compute_input::compute_input::data"], [29, 3, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::basic_statistics::compute_input::compute_input::data"], [29, 3, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::basic_statistics::compute_input::compute_input::weights"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input4dataE", "oneapi::dal::basic_statistics::compute_input::data"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics13compute_input7weightsE", "oneapi::dal::basic_statistics::compute_input::weights"], [29, 0, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics14compute_resultE", "oneapi::dal::basic_statistics::compute_result"], [29, 1, 1, "_CPPv4I0EN6oneapi3dal16basic_statistics14compute_resultE", "oneapi::dal::basic_statistics::compute_result::Task"], [29, 2, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14compute_resultEv", "oneapi::dal::basic_statistics::compute_result::compute_result"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3maxE", "oneapi::dal::basic_statistics::compute_result::max"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result4meanE", "oneapi::dal::basic_statistics::compute_result::mean"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3minE", "oneapi::dal::basic_statistics::compute_result::min"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14result_optionsE", "oneapi::dal::basic_statistics::compute_result::result_options"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result23second_order_raw_momentE", "oneapi::dal::basic_statistics::compute_result::second_order_raw_moment"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result18standard_deviationE", "oneapi::dal::basic_statistics::compute_result::standard_deviation"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3sumE", "oneapi::dal::basic_statistics::compute_result::sum"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result11sum_squaresE", "oneapi::dal::basic_statistics::compute_result::sum_squares"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result20sum_squares_centeredE", "oneapi::dal::basic_statistics::compute_result::sum_squares_centered"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result8varianceE", "oneapi::dal::basic_statistics::compute_result::variance"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics14compute_result9variationE", "oneapi::dal::basic_statistics::compute_result::variation"], [29, 0, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor"], [29, 1, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor::Float"], [29, 1, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor::Method"], [29, 1, 1, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE", "oneapi::dal::basic_statistics::descriptor::Task"], [29, 4, 1, "_CPPv4N6oneapi3dal16basic_statistics10descriptor14result_optionsE", "oneapi::dal::basic_statistics::descriptor::result_options"], [29, 5, 1, "_CPPv4N6oneapi3dal16basic_statistics6method10by_defaultE", "oneapi::dal::basic_statistics::method::by_default"], [29, 0, 1, "_CPPv4N6oneapi3dal16basic_statistics6method5denseE", "oneapi::dal::basic_statistics::method::dense"], [29, 5, 1, "_CPPv4N6oneapi3dal16basic_statistics4task10by_defaultE", "oneapi::dal::basic_statistics::task::by_default"], [29, 0, 1, "_CPPv4N6oneapi3dal16basic_statistics4task7computeE", "oneapi::dal::basic_statistics::task::compute"], [25, 0, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor"], [25, 1, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor::Float"], [25, 1, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor::Method"], [25, 1, 1, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE", "oneapi::dal::chebyshev_distance::descriptor::Task"], [25, 2, 1, "_CPPv4N6oneapi3dal18chebyshev_distance10descriptor10descriptorEv", "oneapi::dal::chebyshev_distance::descriptor::descriptor"], [25, 5, 1, "_CPPv4N6oneapi3dal18chebyshev_distance6method10by_defaultE", "oneapi::dal::chebyshev_distance::method::by_default"], [25, 0, 1, "_CPPv4N6oneapi3dal18chebyshev_distance6method5denseE", "oneapi::dal::chebyshev_distance::method::dense"], [25, 5, 1, "_CPPv4N6oneapi3dal18chebyshev_distance4task10by_defaultE", "oneapi::dal::chebyshev_distance::task::by_default"], [25, 0, 1, "_CPPv4N6oneapi3dal18chebyshev_distance4task7computeE", "oneapi::dal::chebyshev_distance::task::compute"], [33, 0, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor"], [33, 1, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor::T"], [33, 2, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor"], [33, 2, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERKN6detail13table_builderE", "oneapi::dal::column_accessor::column_accessor"], [33, 1, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::U"], [33, 3, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERKN6detail13table_builderE", "oneapi::dal::column_accessor::column_accessor::builder"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::table"], [33, 2, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull"], [33, 2, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::block"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::column_index"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::column_index"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::row_range"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::pull::row_range"], [33, 2, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push"], [33, 1, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::U"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::block"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::column_index"], [33, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range", "oneapi::dal::column_accessor::push::row_range"], [26, 0, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor"], [26, 1, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor::Float"], [26, 1, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor::Method"], [26, 1, 1, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE", "oneapi::dal::cosine_distance::descriptor::Task"], [26, 2, 1, "_CPPv4N6oneapi3dal15cosine_distance10descriptor10descriptorEv", "oneapi::dal::cosine_distance::descriptor::descriptor"], [26, 5, 1, "_CPPv4N6oneapi3dal15cosine_distance6method10by_defaultE", "oneapi::dal::cosine_distance::method::by_default"], [26, 0, 1, "_CPPv4N6oneapi3dal15cosine_distance6method5denseE", "oneapi::dal::cosine_distance::method::dense"], [26, 5, 1, "_CPPv4N6oneapi3dal15cosine_distance4task10by_defaultE", "oneapi::dal::cosine_distance::task::by_default"], [26, 0, 1, "_CPPv4N6oneapi3dal15cosine_distance4task7computeE", "oneapi::dal::cosine_distance::task::compute"], [5, 2, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute"], [5, 1, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute::Descriptor"], [5, 3, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute::desc"], [5, 3, 1, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE", "oneapi::dal::covariance::compute::input"], [5, 0, 1, "_CPPv4I0EN6oneapi3dal10covariance13compute_inputE", "oneapi::dal::covariance::compute_input"], [5, 1, 1, "_CPPv4I0EN6oneapi3dal10covariance13compute_inputE", "oneapi::dal::covariance::compute_input::Task"], [5, 2, 1, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputERK5table", "oneapi::dal::covariance::compute_input::compute_input"], [5, 2, 1, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputEv", "oneapi::dal::covariance::compute_input::compute_input"], [5, 3, 1, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputERK5table", "oneapi::dal::covariance::compute_input::compute_input::data"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance13compute_input4dataE", "oneapi::dal::covariance::compute_input::data"], [5, 0, 1, "_CPPv4I0EN6oneapi3dal10covariance14compute_resultE", "oneapi::dal::covariance::compute_result"], [5, 1, 1, "_CPPv4I0EN6oneapi3dal10covariance14compute_resultE", "oneapi::dal::covariance::compute_result::Task"], [5, 2, 1, "_CPPv4N6oneapi3dal10covariance14compute_result14compute_resultEv", "oneapi::dal::covariance::compute_result::compute_result"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result10cor_matrixE", "oneapi::dal::covariance::compute_result::cor_matrix"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result10cov_matrixE", "oneapi::dal::covariance::compute_result::cov_matrix"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result5meansE", "oneapi::dal::covariance::compute_result::means"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance14compute_result14result_optionsE", "oneapi::dal::covariance::compute_result::result_options"], [5, 0, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor"], [5, 1, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor::Float"], [5, 1, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor::Method"], [5, 1, 1, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE", "oneapi::dal::covariance::descriptor::Task"], [5, 2, 1, "_CPPv4N6oneapi3dal10covariance10descriptor10descriptorEv", "oneapi::dal::covariance::descriptor::descriptor"], [5, 4, 1, "_CPPv4N6oneapi3dal10covariance10descriptor14result_optionsE", "oneapi::dal::covariance::descriptor::result_options"], [5, 5, 1, "_CPPv4N6oneapi3dal10covariance6method10by_defaultE", "oneapi::dal::covariance::method::by_default"], [5, 0, 1, "_CPPv4N6oneapi3dal10covariance6method5denseE", "oneapi::dal::covariance::method::dense"], [5, 5, 1, "_CPPv4N6oneapi3dal10covariance4task10by_defaultE", "oneapi::dal::covariance::task::by_default"], [5, 0, 1, "_CPPv4N6oneapi3dal10covariance4task7computeE", "oneapi::dal::covariance::task::compute"], [34, 0, 1, "_CPPv4I0EN6oneapi3dal12csr_accessorE", "oneapi::dal::csr_accessor"], [34, 1, 1, "_CPPv4I0EN6oneapi3dal12csr_accessorE", "oneapi::dal::csr_accessor::T"], [34, 2, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12csr_accessor12csr_accessorERK9csr_table", "oneapi::dal::csr_accessor::csr_accessor"], [34, 1, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12csr_accessor12csr_accessorERK9csr_table", "oneapi::dal::csr_accessor::csr_accessor::U"], [34, 3, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12csr_accessor12csr_accessorERK9csr_table", "oneapi::dal::csr_accessor::csr_accessor::table"], [34, 2, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullER7array_dR7array_iR7array_iRK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull"], [34, 2, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullERK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull"], [34, 3, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullER7array_dR7array_iR7array_iRK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull::column_indices"], [34, 3, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullER7array_dR7array_iR7array_iRK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull::data"], [34, 3, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullER7array_dR7array_iR7array_iRK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull::indexing"], [34, 3, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullERK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull::indexing"], [34, 3, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullER7array_dR7array_iR7array_iRK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull::row_offsets"], [34, 3, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullER7array_dR7array_iR7array_iRK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull::row_range"], [34, 3, 1, "_CPPv4NK6oneapi3dal12csr_accessor4pullERK5rangeK15sparse_indexing", "oneapi::dal::csr_accessor::pull::row_range"], [47, 0, 1, "_CPPv4N6oneapi3dal9csr_tableE", "oneapi::dal::csr_table"], [47, 2, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table"], [47, 2, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table"], [47, 2, 1, "_CPPv4N6oneapi3dal9csr_table9csr_tableERK5table", "oneapi::dal::csr_table::csr_table"], [47, 2, 1, "_CPPv4N6oneapi3dal9csr_table9csr_tableEv", "oneapi::dal::csr_table::csr_table"], [47, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::ConstColumnIndicesDeleter"], [47, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::ConstDataDeleter"], [47, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::ConstRowOffsetsDeleter"], [47, 1, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::Data"], [47, 1, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::Data"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_indices"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_indices_deleter"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::column_indices_pointer"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::data"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::data_deleter"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::data_pointer"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::indexing"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::indexing"], [47, 3, 1, "_CPPv4N6oneapi3dal9csr_table9csr_tableERK5table", "oneapi::dal::csr_table::csr_table::other"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_offsets"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_offsets_deleter"], [47, 3, 1, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing", "oneapi::dal::csr_table::csr_table::row_offsets_pointer"], [47, 2, 1, "_CPPv4NK6oneapi3dal9csr_table18get_column_indicesEv", "oneapi::dal::csr_table::get_column_indices"], [47, 2, 1, "_CPPv4I0ENK6oneapi3dal9csr_table8get_dataEPK4Datav", "oneapi::dal::csr_table::get_data"], [47, 2, 1, "_CPPv4NK6oneapi3dal9csr_table8get_dataEv", "oneapi::dal::csr_table::get_data"], [47, 1, 1, "_CPPv4I0ENK6oneapi3dal9csr_table8get_dataEPK4Datav", "oneapi::dal::csr_table::get_data::Data"], [47, 2, 1, "_CPPv4NK6oneapi3dal9csr_table12get_indexingEv", "oneapi::dal::csr_table::get_indexing"], [47, 2, 1, "_CPPv4NK6oneapi3dal9csr_table8get_kindEv", "oneapi::dal::csr_table::get_kind"], [47, 2, 1, "_CPPv4NK6oneapi3dal9csr_table18get_non_zero_countEv", "oneapi::dal::csr_table::get_non_zero_count"], [47, 2, 1, "_CPPv4NK6oneapi3dal9csr_table15get_row_offsetsEv", "oneapi::dal::csr_table::get_row_offsets"], [47, 2, 1, "_CPPv4N6oneapi3dal9csr_table4kindEv", "oneapi::dal::csr_table::kind"], [47, 2, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap"], [47, 2, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap"], [47, 1, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::Data"], [47, 1, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::Data"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_indices"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::column_indices_pointer"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::data"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::data_pointer"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::indexing"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::indexing"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::row_count"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::row_offsets"], [47, 3, 1, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing", "oneapi::dal::csr_table::wrap::row_offsets_pointer"], [38, 0, 1, "_CPPv4N6oneapi3dal3csv11data_sourceE", "oneapi::dal::csv::data_source"], [38, 2, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source"], [38, 2, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE", "oneapi::dal::csv::data_source::delimiter"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE", "oneapi::dal::csv::data_source::file_name"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source7optionsE", "oneapi::dal::csv::data_source::options"], [38, 0, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args"], [38, 1, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args::Object"], [38, 2, 1, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv", "oneapi::dal::csv::read_args::read_args"], [1, 2, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute"], [1, 1, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute::Descriptor"], [1, 3, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute::desc"], [1, 3, 1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE", "oneapi::dal::dbscan::compute::input"], [1, 0, 1, "_CPPv4I0EN6oneapi3dal6dbscan13compute_inputE", "oneapi::dal::dbscan::compute_input"], [1, 1, 1, "_CPPv4I0EN6oneapi3dal6dbscan13compute_inputE", "oneapi::dal::dbscan::compute_input::Task"], [1, 2, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::dbscan::compute_input::compute_input"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::dbscan::compute_input::compute_input::data"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::dbscan::compute_input::compute_input::weights"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input4dataE", "oneapi::dal::dbscan::compute_input::data"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan13compute_input7weightsE", "oneapi::dal::dbscan::compute_input::weights"], [1, 0, 1, "_CPPv4I0EN6oneapi3dal6dbscan14compute_resultE", "oneapi::dal::dbscan::compute_result"], [1, 1, 1, "_CPPv4I0EN6oneapi3dal6dbscan14compute_resultE", "oneapi::dal::dbscan::compute_result::Task"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result13cluster_countE", "oneapi::dal::dbscan::compute_result::cluster_count"], [1, 2, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result14compute_resultEv", "oneapi::dal::dbscan::compute_result::compute_result"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result10core_flagsE", "oneapi::dal::dbscan::compute_result::core_flags"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result24core_observation_indicesE", "oneapi::dal::dbscan::compute_result::core_observation_indices"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result17core_observationsE", "oneapi::dal::dbscan::compute_result::core_observations"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result9responsesE", "oneapi::dal::dbscan::compute_result::responses"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan14compute_result14result_optionsE", "oneapi::dal::dbscan::compute_result::result_options"], [1, 0, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor"], [1, 1, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor::Float"], [1, 1, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor::Method"], [1, 1, 1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE", "oneapi::dal::dbscan::descriptor::Task"], [1, 2, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE", "oneapi::dal::dbscan::descriptor::descriptor"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE", "oneapi::dal::dbscan::descriptor::descriptor::epsilon"], [1, 3, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE", "oneapi::dal::dbscan::descriptor::descriptor::min_observations"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor7epsilonE", "oneapi::dal::dbscan::descriptor::epsilon"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor13mem_save_modeE", "oneapi::dal::dbscan::descriptor::mem_save_mode"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor16min_observationsE", "oneapi::dal::dbscan::descriptor::min_observations"], [1, 4, 1, "_CPPv4N6oneapi3dal6dbscan10descriptor14result_optionsE", "oneapi::dal::dbscan::descriptor::result_options"], [1, 0, 1, "_CPPv4N6oneapi3dal6dbscan6method11brute_forceE", "oneapi::dal::dbscan::method::brute_force"], [1, 5, 1, "_CPPv4N6oneapi3dal6dbscan6method10by_defaultE", "oneapi::dal::dbscan::method::by_default"], [1, 5, 1, "_CPPv4N6oneapi3dal6dbscan4task10by_defaultE", "oneapi::dal::dbscan::task::by_default"], [1, 0, 1, "_CPPv4N6oneapi3dal6dbscan4task10clusteringE", "oneapi::dal::dbscan::task::clustering"], [9, 0, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor"], [9, 1, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor::Float"], [9, 1, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor::Method"], [9, 1, 1, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE", "oneapi::dal::decision_forest::descriptor::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor9bootstrapE", "oneapi::dal::decision_forest::descriptor::bootstrap"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor11class_countE", "oneapi::dal::decision_forest::descriptor::class_count"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor10descriptorEv", "oneapi::dal::decision_forest::descriptor::descriptor"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor17error_metric_modeE", "oneapi::dal::decision_forest::descriptor::error_metric_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor17features_per_nodeE", "oneapi::dal::decision_forest::descriptor::features_per_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor18impurity_thresholdE", "oneapi::dal::decision_forest::descriptor::impurity_threshold"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor10infer_modeE", "oneapi::dal::decision_forest::descriptor::infer_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor8max_binsE", "oneapi::dal::decision_forest::descriptor::max_bins"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_leaf_nodesE", "oneapi::dal::decision_forest::descriptor::max_leaf_nodes"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_tree_depthE", "oneapi::dal::decision_forest::descriptor::max_tree_depth"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor18memory_saving_modeE", "oneapi::dal::decision_forest::descriptor::memory_saving_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor12min_bin_sizeE", "oneapi::dal::decision_forest::descriptor::min_bin_size"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor35min_impurity_decrease_in_split_nodeE", "oneapi::dal::decision_forest::descriptor::min_impurity_decrease_in_split_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor29min_observations_in_leaf_nodeE", "oneapi::dal::decision_forest::descriptor::min_observations_in_leaf_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor30min_observations_in_split_nodeE", "oneapi::dal::decision_forest::descriptor::min_observations_in_split_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor32min_weight_fraction_in_leaf_nodeE", "oneapi::dal::decision_forest::descriptor::min_weight_fraction_in_leaf_node"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor30observations_per_tree_fractionE", "oneapi::dal::decision_forest::descriptor::observations_per_tree_fraction"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor4seedE", "oneapi::dal::decision_forest::descriptor::seed"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor13splitter_modeE", "oneapi::dal::decision_forest::descriptor::splitter_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor10tree_countE", "oneapi::dal::decision_forest::descriptor::tree_count"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor24variable_importance_modeE", "oneapi::dal::decision_forest::descriptor::variable_importance_mode"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest10descriptor11voting_modeE", "oneapi::dal::decision_forest::descriptor::voting_mode"], [9, 2, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer::Descriptor"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer::desc"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer::input"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer_input"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11infer_inputE", "oneapi::dal::decision_forest::infer_input::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input4dataE", "oneapi::dal::decision_forest::infer_input::data"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::decision_forest::infer_input::infer_input"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::decision_forest::infer_input::infer_input::data"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::decision_forest::infer_input::infer_input::trained_model"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11infer_input5modelE", "oneapi::dal::decision_forest::infer_input::model"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12infer_resultE", "oneapi::dal::decision_forest::infer_result"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12infer_resultE", "oneapi::dal::decision_forest::infer_result::Task"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result12infer_resultEv", "oneapi::dal::decision_forest::infer_result::infer_result"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result6labelsE", "oneapi::dal::decision_forest::infer_result::labels"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result13probabilitiesE", "oneapi::dal::decision_forest::infer_result::probabilities"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12infer_result9responsesE", "oneapi::dal::decision_forest::infer_result::responses"], [9, 5, 1, "_CPPv4N6oneapi3dal15decision_forest6method10by_defaultE", "oneapi::dal::decision_forest::method::by_default"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest6method5denseE", "oneapi::dal::decision_forest::method::dense"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest6method4histE", "oneapi::dal::decision_forest::method::hist"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5modelE", "oneapi::dal::decision_forest::model"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5modelE", "oneapi::dal::decision_forest::model::Task"], [9, 2, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv", "oneapi::dal::decision_forest::model::get_class_count"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv", "oneapi::dal::decision_forest::model::get_class_count::None"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv", "oneapi::dal::decision_forest::model::get_class_count::T"], [9, 2, 1, "_CPPv4NK6oneapi3dal15decision_forest5model14get_tree_countEv", "oneapi::dal::decision_forest::model::get_tree_count"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest5model5modelEv", "oneapi::dal::decision_forest::model::model"], [9, 2, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_breadth_first"], [9, 2, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_breadth_first::T"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_breadth_first::Visitor"], [9, 1, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first::Visitor"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first::tree_idx"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_breadth_first::visitor"], [9, 3, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_breadth_first::visitor_array"], [9, 2, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_depth_first"], [9, 2, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_depth_first::T"], [9, 1, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_depth_first::Visitor"], [9, 1, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first::Visitor"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first::tree_idx"], [9, 3, 1, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor", "oneapi::dal::decision_forest::model::traverse_depth_first::visitor"], [9, 3, 1, "_CPPv4I00ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvRR1T", "oneapi::dal::decision_forest::model::traverse_depth_first::visitor_array"], [9, 5, 1, "_CPPv4N6oneapi3dal15decision_forest4task10by_defaultE", "oneapi::dal::decision_forest::task::by_default"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest4task14classificationE", "oneapi::dal::decision_forest::task::classification"], [9, 0, 1, "_CPPv4N6oneapi3dal15decision_forest4task10regressionE", "oneapi::dal::decision_forest::task::regression"], [9, 2, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train::Descriptor"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train::desc"], [9, 3, 1, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE", "oneapi::dal::decision_forest::train::input"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11train_inputE", "oneapi::dal::decision_forest::train_input"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest11train_inputE", "oneapi::dal::decision_forest::train_input::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input4dataE", "oneapi::dal::decision_forest::train_input::data"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input6labelsE", "oneapi::dal::decision_forest::train_input::labels"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input9responsesE", "oneapi::dal::decision_forest::train_input::responses"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input::data"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input::responses"], [9, 3, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::decision_forest::train_input::train_input::weights"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest11train_input7weightsE", "oneapi::dal::decision_forest::train_input::weights"], [9, 0, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12train_resultE", "oneapi::dal::decision_forest::train_result"], [9, 1, 1, "_CPPv4I0EN6oneapi3dal15decision_forest12train_resultE", "oneapi::dal::decision_forest::train_result::Task"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result5modelE", "oneapi::dal::decision_forest::train_result::model"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result7oob_errE", "oneapi::dal::decision_forest::train_result::oob_err"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result16oob_err_accuracyE", "oneapi::dal::decision_forest::train_result::oob_err_accuracy"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result25oob_err_decision_functionE", "oneapi::dal::decision_forest::train_result::oob_err_decision_function"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result23oob_err_per_observationE", "oneapi::dal::decision_forest::train_result::oob_err_per_observation"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result18oob_err_predictionE", "oneapi::dal::decision_forest::train_result::oob_err_prediction"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result10oob_err_r2E", "oneapi::dal::decision_forest::train_result::oob_err_r2"], [9, 2, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result12train_resultEv", "oneapi::dal::decision_forest::train_result::train_result"], [9, 4, 1, "_CPPv4N6oneapi3dal15decision_forest12train_result14var_importanceE", "oneapi::dal::decision_forest::train_result::var_importance"], [48, 0, 1, "_CPPv4N6oneapi3dal13homogen_tableE", "oneapi::dal::homogen_table"], [48, 2, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data"], [48, 2, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv", "oneapi::dal::homogen_table::get_data"], [48, 1, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data::Data"], [48, 2, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv", "oneapi::dal::homogen_table::get_kind"], [48, 2, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table"], [48, 2, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableERK5table", "oneapi::dal::homogen_table::homogen_table"], [48, 2, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv", "oneapi::dal::homogen_table::homogen_table"], [48, 1, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::ConstDeleter"], [48, 1, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::Data"], [48, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::column_count"], [48, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::data_deleter"], [48, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::data_pointer"], [48, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::layout"], [48, 3, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableERK5table", "oneapi::dal::homogen_table::homogen_table::other"], [48, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout", "oneapi::dal::homogen_table::homogen_table::row_count"], [48, 2, 1, "_CPPv4N6oneapi3dal13homogen_table4kindEv", "oneapi::dal::homogen_table::kind"], [48, 2, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap"], [48, 2, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap"], [48, 1, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [48, 1, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::data"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::data_pointer"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [48, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [3, 0, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor"], [3, 1, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Float"], [3, 1, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Method"], [3, 1, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE", "oneapi::dal::kmeans::descriptor::accuracy_threshold"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE", "oneapi::dal::kmeans::descriptor::cluster_count"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor::cluster_count"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE", "oneapi::dal::kmeans::descriptor::max_iteration_count"], [3, 2, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer::Descriptor"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer::desc"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE", "oneapi::dal::kmeans::infer::input"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE", "oneapi::dal::kmeans::infer_input::data"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::data"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::trained_model"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE", "oneapi::dal::kmeans::infer_input::model"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result::Task"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv", "oneapi::dal::kmeans::infer_result::infer_result"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result6labelsE", "oneapi::dal::kmeans::infer_result::labels"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result24objective_function_valueE", "oneapi::dal::kmeans::infer_result::objective_function_value"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result9responsesE", "oneapi::dal::kmeans::infer_result::responses"], [3, 5, 1, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE", "oneapi::dal::kmeans::method::by_default"], [3, 0, 1, "_CPPv4N6oneapi3dal6kmeans6method11lloyd_denseE", "oneapi::dal::kmeans::method::lloyd_dense"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans5model9centroidsE", "oneapi::dal::kmeans::model::centroids"], [3, 2, 1, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv", "oneapi::dal::kmeans::model::get_cluster_count"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans5model5modelEv", "oneapi::dal::kmeans::model::model"], [3, 5, 1, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE", "oneapi::dal::kmeans::task::by_default"], [3, 0, 1, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE", "oneapi::dal::kmeans::task::clustering"], [3, 2, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train::Descriptor"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train::desc"], [3, 3, 1, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE", "oneapi::dal::kmeans::train::input"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE", "oneapi::dal::kmeans::train_input::data"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE", "oneapi::dal::kmeans::train_input::initial_centroids"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5table", "oneapi::dal::kmeans::train_input::train_input"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [3, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::initial_centroids"], [3, 0, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result"], [3, 1, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result::Task"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result15iteration_countE", "oneapi::dal::kmeans::train_result::iteration_count"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result6labelsE", "oneapi::dal::kmeans::train_result::labels"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result5modelE", "oneapi::dal::kmeans::train_result::model"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result24objective_function_valueE", "oneapi::dal::kmeans::train_result::objective_function_value"], [3, 4, 1, "_CPPv4N6oneapi3dal6kmeans12train_result9responsesE", "oneapi::dal::kmeans::train_result::responses"], [3, 2, 1, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv", "oneapi::dal::kmeans::train_result::train_result"], [4, 2, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute"], [4, 1, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute::Descriptor"], [4, 3, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute::desc"], [4, 3, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute::input"], [4, 0, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input"], [4, 1, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input::Task"], [4, 2, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input"], [4, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input::data"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE", "oneapi::dal::kmeans_init::compute_input::data"], [4, 0, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result"], [4, 1, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result::Task"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result9centroidsE", "oneapi::dal::kmeans_init::compute_result::centroids"], [4, 2, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv", "oneapi::dal::kmeans_init::compute_result::compute_result"], [4, 0, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor"], [4, 1, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Float"], [4, 1, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Method"], [4, 1, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Task"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE", "oneapi::dal::kmeans_init::descriptor::cluster_count"], [4, 2, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor"], [4, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor::cluster_count"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor18local_trials_countE", "oneapi::dal::kmeans_init::descriptor::local_trials_count"], [4, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor4seedE", "oneapi::dal::kmeans_init::descriptor::seed"], [4, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE", "oneapi::dal::kmeans_init::method::by_default"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE", "oneapi::dal::kmeans_init::method::dense"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method19parallel_plus_denseE", "oneapi::dal::kmeans_init::method::parallel_plus_dense"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method15plus_plus_denseE", "oneapi::dal::kmeans_init::method::plus_plus_dense"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init6method12random_denseE", "oneapi::dal::kmeans_init::method::random_dense"], [4, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE", "oneapi::dal::kmeans_init::task::by_default"], [4, 0, 1, "_CPPv4N6oneapi3dal11kmeans_init4task4initE", "oneapi::dal::kmeans_init::task::init"], [21, 0, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Distance"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Float"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Method"], [21, 1, 1, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE", "oneapi::dal::knn::descriptor::class_count"], [21, 2, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [21, 2, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor"], [21, 2, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::M"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::None"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::None"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::None"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::T"], [21, 1, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::T"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::class_count"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::class_count"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::distance"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::distance"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 3, 1, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor8distanceE", "oneapi::dal::knn::descriptor::distance"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE", "oneapi::dal::knn::descriptor::neighbor_count"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor14result_optionsE", "oneapi::dal::knn::descriptor::result_options"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor11voting_modeE", "oneapi::dal::knn::descriptor::voting_mode"], [21, 2, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer::Descriptor"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer::desc"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE", "oneapi::dal::knn::infer::input"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input4dataE", "oneapi::dal::knn::infer_input::data"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE", "oneapi::dal::knn::infer_input::infer_input"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE", "oneapi::dal::knn::infer_input::infer_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE", "oneapi::dal::knn::infer_input::infer_input::model"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input5modelE", "oneapi::dal::knn::infer_input::model"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result9distancesE", "oneapi::dal::knn::infer_result::distances"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result7indicesE", "oneapi::dal::knn::infer_result::indices"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv", "oneapi::dal::knn::infer_result::infer_result"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result6labelsE", "oneapi::dal::knn::infer_result::labels"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result9responsesE", "oneapi::dal::knn::infer_result::responses"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12infer_result14result_optionsE", "oneapi::dal::knn::infer_result::result_options"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn6method11brute_forceE", "oneapi::dal::knn::method::brute_force"], [21, 5, 1, "_CPPv4N6oneapi3dal3knn6method10by_defaultE", "oneapi::dal::knn::method::by_default"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn6method7kd_treeE", "oneapi::dal::knn::method::kd_tree"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model::Task"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn5model5modelEv", "oneapi::dal::knn::model::model"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn16result_option_idE", "oneapi::dal::knn::result_option_id"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::knn::result_option_id::result_option_id"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idEv", "oneapi::dal::knn::result_option_id::result_option_id"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::knn::result_option_id::result_option_id::base"], [21, 5, 1, "_CPPv4N6oneapi3dal3knn4task10by_defaultE", "oneapi::dal::knn::task::by_default"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn4task14classificationE", "oneapi::dal::knn::task::classification"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn4task10regressionE", "oneapi::dal::knn::task::regression"], [21, 0, 1, "_CPPv4N6oneapi3dal3knn4task6searchE", "oneapi::dal::knn::task::search"], [21, 2, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train::Descriptor"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train::desc"], [21, 3, 1, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE", "oneapi::dal::knn::train::input"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input4dataE", "oneapi::dal::knn::train_input::data"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input6labelsE", "oneapi::dal::knn::train_input::labels"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input9responsesE", "oneapi::dal::knn::train_input::responses"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5table", "oneapi::dal::knn::train_input::train_input"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5table", "oneapi::dal::knn::train_input::train_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::responses"], [21, 0, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result"], [21, 1, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result::Task"], [21, 4, 1, "_CPPv4N6oneapi3dal3knn12train_result5modelE", "oneapi::dal::knn::train_result::model"], [21, 2, 1, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv", "oneapi::dal::knn::train_result::train_result"], [21, 6, 1, "_CPPv4N6oneapi3dal3knn11voting_modeE", "oneapi::dal::knn::voting_mode"], [16, 2, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute"], [16, 1, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute::Descriptor"], [16, 3, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute::desc"], [16, 3, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute::input"], [16, 0, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute_input"], [16, 1, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel13compute_inputE", "oneapi::dal::linear_kernel::compute_input::Task"], [16, 2, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::linear_kernel::compute_input::compute_input"], [16, 3, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::linear_kernel::compute_input::compute_input::x"], [16, 3, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::linear_kernel::compute_input::compute_input::y"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1xE", "oneapi::dal::linear_kernel::compute_input::x"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1yE", "oneapi::dal::linear_kernel::compute_input::y"], [16, 0, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel14compute_resultE", "oneapi::dal::linear_kernel::compute_result"], [16, 1, 1, "_CPPv4I0EN6oneapi3dal13linear_kernel14compute_resultE", "oneapi::dal::linear_kernel::compute_result::Task"], [16, 2, 1, "_CPPv4N6oneapi3dal13linear_kernel14compute_result14compute_resultEv", "oneapi::dal::linear_kernel::compute_result::compute_result"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel14compute_result6valuesE", "oneapi::dal::linear_kernel::compute_result::values"], [16, 0, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor"], [16, 1, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor::Float"], [16, 1, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor::Method"], [16, 1, 1, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE", "oneapi::dal::linear_kernel::descriptor::Task"], [16, 2, 1, "_CPPv4N6oneapi3dal13linear_kernel10descriptor10descriptorEv", "oneapi::dal::linear_kernel::descriptor::descriptor"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5scaleE", "oneapi::dal::linear_kernel::descriptor::scale"], [16, 4, 1, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5shiftE", "oneapi::dal::linear_kernel::descriptor::shift"], [16, 5, 1, "_CPPv4N6oneapi3dal13linear_kernel6method10by_defaultE", "oneapi::dal::linear_kernel::method::by_default"], [16, 0, 1, "_CPPv4N6oneapi3dal13linear_kernel6method5denseE", "oneapi::dal::linear_kernel::method::dense"], [16, 5, 1, "_CPPv4N6oneapi3dal13linear_kernel4task10by_defaultE", "oneapi::dal::linear_kernel::task::by_default"], [16, 0, 1, "_CPPv4N6oneapi3dal13linear_kernel4task7computeE", "oneapi::dal::linear_kernel::task::compute"], [23, 0, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor"], [23, 1, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor::Float"], [23, 1, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor::Method"], [23, 1, 1, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE", "oneapi::dal::logloss_objective::descriptor::Task"], [23, 2, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor"], [23, 3, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor::fit_intercept"], [23, 3, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor::l1_regularization_coefficient"], [23, 3, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb", "oneapi::dal::logloss_objective::descriptor::descriptor::l2_regularization_coefficient"], [23, 4, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor14intercept_flagE", "oneapi::dal::logloss_objective::descriptor::intercept_flag"], [23, 4, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l1_regularization_coefficientE", "oneapi::dal::logloss_objective::descriptor::l1_regularization_coefficient"], [23, 4, 1, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l2_regularization_coefficientE", "oneapi::dal::logloss_objective::descriptor::l2_regularization_coefficient"], [23, 5, 1, "_CPPv4N6oneapi3dal17logloss_objective6method10by_defaultE", "oneapi::dal::logloss_objective::method::by_default"], [23, 0, 1, "_CPPv4N6oneapi3dal17logloss_objective6method11dense_batchE", "oneapi::dal::logloss_objective::method::dense_batch"], [23, 5, 1, "_CPPv4N6oneapi3dal17logloss_objective4task10by_defaultE", "oneapi::dal::logloss_objective::task::by_default"], [23, 0, 1, "_CPPv4N6oneapi3dal17logloss_objective4task7computeE", "oneapi::dal::logloss_objective::task::compute"], [28, 0, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor"], [28, 1, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor::Float"], [28, 1, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor::Method"], [28, 1, 1, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE", "oneapi::dal::minkowski_distance::descriptor::Task"], [28, 4, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor6degreeE", "oneapi::dal::minkowski_distance::descriptor::degree"], [28, 2, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEd", "oneapi::dal::minkowski_distance::descriptor::descriptor"], [28, 2, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEv", "oneapi::dal::minkowski_distance::descriptor::descriptor"], [28, 3, 1, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEd", "oneapi::dal::minkowski_distance::descriptor::descriptor::degree"], [28, 5, 1, "_CPPv4N6oneapi3dal18minkowski_distance6method10by_defaultE", "oneapi::dal::minkowski_distance::method::by_default"], [28, 0, 1, "_CPPv4N6oneapi3dal18minkowski_distance6method5denseE", "oneapi::dal::minkowski_distance::method::dense"], [28, 5, 1, "_CPPv4N6oneapi3dal18minkowski_distance4task10by_defaultE", "oneapi::dal::minkowski_distance::task::by_default"], [28, 0, 1, "_CPPv4N6oneapi3dal18minkowski_distance4task7computeE", "oneapi::dal::minkowski_distance::task::compute"], [24, 2, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute"], [24, 1, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute::Descriptor"], [24, 3, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute::desc"], [24, 3, 1, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE", "oneapi::dal::objective_function::compute::input"], [24, 0, 1, "_CPPv4I0EN6oneapi3dal18objective_function13compute_inputE", "oneapi::dal::objective_function::compute_input"], [24, 1, 1, "_CPPv4I0EN6oneapi3dal18objective_function13compute_inputE", "oneapi::dal::objective_function::compute_input::Task"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input::data"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input::parameters"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table", "oneapi::dal::objective_function::compute_input::compute_input::responses"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input4dataE", "oneapi::dal::objective_function::compute_input::data"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input10parametersE", "oneapi::dal::objective_function::compute_input::parameters"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function13compute_input9responsesE", "oneapi::dal::objective_function::compute_input::responses"], [24, 0, 1, "_CPPv4I0EN6oneapi3dal18objective_function14compute_resultE", "oneapi::dal::objective_function::compute_result"], [24, 1, 1, "_CPPv4I0EN6oneapi3dal18objective_function14compute_resultE", "oneapi::dal::objective_function::compute_result::Task"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result14compute_resultEv", "oneapi::dal::objective_function::compute_result::compute_result"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result8gradientE", "oneapi::dal::objective_function::compute_result::gradient"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result7hessianE", "oneapi::dal::objective_function::compute_result::hessian"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result14result_optionsE", "oneapi::dal::objective_function::compute_result::result_options"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function14compute_result5valueE", "oneapi::dal::objective_function::compute_result::value"], [24, 0, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Float"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Method"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Objective"], [24, 1, 1, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE", "oneapi::dal::objective_function::descriptor::Task"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorERK11objective_t", "oneapi::dal::objective_function::descriptor::descriptor"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorEv", "oneapi::dal::objective_function::descriptor::descriptor"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorERK11objective_t", "oneapi::dal::objective_function::descriptor::descriptor::obj"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor9objectiveE", "oneapi::dal::objective_function::descriptor::objective"], [24, 4, 1, "_CPPv4N6oneapi3dal18objective_function10descriptor14result_optionsE", "oneapi::dal::objective_function::descriptor::result_options"], [24, 5, 1, "_CPPv4N6oneapi3dal18objective_function6method10by_defaultE", "oneapi::dal::objective_function::method::by_default"], [24, 0, 1, "_CPPv4N6oneapi3dal18objective_function6method11dense_batchE", "oneapi::dal::objective_function::method::dense_batch"], [24, 0, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_idE", "oneapi::dal::objective_function::result_option_id"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::objective_function::result_option_id::result_option_id"], [24, 2, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idEv", "oneapi::dal::objective_function::result_option_id::result_option_id"], [24, 3, 1, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idERK21result_option_id_base", "oneapi::dal::objective_function::result_option_id::result_option_id::base"], [24, 5, 1, "_CPPv4N6oneapi3dal18objective_function4task10by_defaultE", "oneapi::dal::objective_function::task::by_default"], [24, 0, 1, "_CPPv4N6oneapi3dal18objective_function4task7computeE", "oneapi::dal::objective_function::task::compute"], [8, 0, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor"], [8, 1, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Float"], [8, 1, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Method"], [8, 1, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE", "oneapi::dal::pca::descriptor::component_count"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor::component_count"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE", "oneapi::dal::pca::descriptor::deterministic"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor14result_optionsE", "oneapi::dal::pca::descriptor::result_options"], [8, 2, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer::Descriptor"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer::desc"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE", "oneapi::dal::pca::infer::input"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input4dataE", "oneapi::dal::pca::infer_input::data"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::data"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::trained_model"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input5modelE", "oneapi::dal::pca::infer_input::model"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result::Task"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv", "oneapi::dal::pca::infer_result::infer_result"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12infer_result16transformed_dataE", "oneapi::dal::pca::infer_result::transformed_data"], [8, 5, 1, "_CPPv4N6oneapi3dal3pca6method10by_defaultE", "oneapi::dal::pca::method::by_default"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca6method3covE", "oneapi::dal::pca::method::cov"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca6method11precomputedE", "oneapi::dal::pca::method::precomputed"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca6method3svdE", "oneapi::dal::pca::method::svd"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca5model12eigenvectorsE", "oneapi::dal::pca::model::eigenvectors"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca5model5modelEv", "oneapi::dal::pca::model::model"], [8, 5, 1, "_CPPv4N6oneapi3dal3pca4task10by_defaultE", "oneapi::dal::pca::task::by_default"], [8, 0, 1, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE", "oneapi::dal::pca::task::dim_reduction"], [8, 2, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train::Descriptor"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train::desc"], [8, 3, 1, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE", "oneapi::dal::pca::train::input"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca11train_input4dataE", "oneapi::dal::pca::train_input::data"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputEv", "oneapi::dal::pca::train_input::train_input"], [8, 3, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input::data"], [8, 0, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result"], [8, 1, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result::Task"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result11eigenvaluesE", "oneapi::dal::pca::train_result::eigenvalues"], [8, 2, 1, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv", "oneapi::dal::pca::train_result::get_eigenvectors"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result5meansE", "oneapi::dal::pca::train_result::means"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result5modelE", "oneapi::dal::pca::train_result::model"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result14result_optionsE", "oneapi::dal::pca::train_result::result_options"], [8, 2, 1, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv", "oneapi::dal::pca::train_result::train_result"], [8, 4, 1, "_CPPv4N6oneapi3dal3pca12train_result9variancesE", "oneapi::dal::pca::train_result::variances"], [17, 2, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute"], [17, 1, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute::Descriptor"], [17, 3, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute::desc"], [17, 3, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute::input"], [17, 0, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute_input"], [17, 1, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel13compute_inputE", "oneapi::dal::polynomial_kernel::compute_input::Task"], [17, 2, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::polynomial_kernel::compute_input::compute_input"], [17, 3, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::polynomial_kernel::compute_input::compute_input::x"], [17, 3, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::polynomial_kernel::compute_input::compute_input::y"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1xE", "oneapi::dal::polynomial_kernel::compute_input::x"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1yE", "oneapi::dal::polynomial_kernel::compute_input::y"], [17, 0, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel14compute_resultE", "oneapi::dal::polynomial_kernel::compute_result"], [17, 1, 1, "_CPPv4I0EN6oneapi3dal17polynomial_kernel14compute_resultE", "oneapi::dal::polynomial_kernel::compute_result::Task"], [17, 2, 1, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result14compute_resultEv", "oneapi::dal::polynomial_kernel::compute_result::compute_result"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result6valuesE", "oneapi::dal::polynomial_kernel::compute_result::values"], [17, 0, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor"], [17, 1, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor::Float"], [17, 1, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor::Method"], [17, 1, 1, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE", "oneapi::dal::polynomial_kernel::descriptor::Task"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor6degreeE", "oneapi::dal::polynomial_kernel::descriptor::degree"], [17, 2, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor10descriptorEv", "oneapi::dal::polynomial_kernel::descriptor::descriptor"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5scaleE", "oneapi::dal::polynomial_kernel::descriptor::scale"], [17, 4, 1, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5shiftE", "oneapi::dal::polynomial_kernel::descriptor::shift"], [17, 5, 1, "_CPPv4N6oneapi3dal17polynomial_kernel6method10by_defaultE", "oneapi::dal::polynomial_kernel::method::by_default"], [17, 0, 1, "_CPPv4N6oneapi3dal17polynomial_kernel6method5denseE", "oneapi::dal::polynomial_kernel::method::dense"], [17, 5, 1, "_CPPv4N6oneapi3dal17polynomial_kernel4task10by_defaultE", "oneapi::dal::polynomial_kernel::task::by_default"], [17, 0, 1, "_CPPv4N6oneapi3dal17polynomial_kernel4task7computeE", "oneapi::dal::polynomial_kernel::task::compute"], [11, 0, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Allocator"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Float"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Method"], [11, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE", "oneapi::dal::preview::connected_components::descriptor::Task"], [11, 2, 1, "_CPPv4N6oneapi3dal7preview20connected_components10descriptor10descriptorERK9Allocator", "oneapi::dal::preview::connected_components::descriptor::descriptor"], [11, 3, 1, "_CPPv4N6oneapi3dal7preview20connected_components10descriptor10descriptorERK9Allocator", "oneapi::dal::preview::connected_components::descriptor::descriptor::allocator"], [11, 2, 1, "_CPPv4NK6oneapi3dal7preview20connected_components10descriptor13get_allocatorEv", "oneapi::dal::preview::connected_components::descriptor::get_allocator"], [11, 0, 1, "_CPPv4N6oneapi3dal7preview20connected_components6method8afforestE", "oneapi::dal::preview::connected_components::method::afforest"], [11, 5, 1, "_CPPv4N6oneapi3dal7preview20connected_components6method10by_defaultE", "oneapi::dal::preview::connected_components::method::by_default"], [11, 2, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::Descriptor"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::Graph"], [11, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::desc"], [11, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph", "oneapi::dal::preview::connected_components::preview::vertex_partitioning::g"], [11, 5, 1, "_CPPv4N6oneapi3dal7preview20connected_components4task10by_defaultE", "oneapi::dal::preview::connected_components::task::by_default"], [11, 0, 1, "_CPPv4N6oneapi3dal7preview20connected_components4task19vertex_partitioningE", "oneapi::dal::preview::connected_components::task::vertex_partitioning"], [11, 0, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE", "oneapi::dal::preview::connected_components::vertex_partitioning_input"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE", "oneapi::dal::preview::connected_components::vertex_partitioning_input::Graph"], [11, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE", "oneapi::dal::preview::connected_components::vertex_partitioning_input::Task"], [11, 4, 1, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input5graphE", "oneapi::dal::preview::connected_components::vertex_partitioning_input::graph"], [11, 2, 1, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input25vertex_partitioning_inputERK5Graph", "oneapi::dal::preview::connected_components::vertex_partitioning_input::vertex_partitioning_input"], [11, 3, 1, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input25vertex_partitioning_inputERK5Graph", "oneapi::dal::preview::connected_components::vertex_partitioning_input::vertex_partitioning_input::g"], [11, 0, 1, "_CPPv4I0EN6oneapi3dal7preview20connected_components26vertex_partitioning_resultE", "oneapi::dal::preview::connected_components::vertex_partitioning_result"], [11, 1, 1, "_CPPv4I0EN6oneapi3dal7preview20connected_components26vertex_partitioning_resultE", "oneapi::dal::preview::connected_components::vertex_partitioning_result::Task"], [11, 4, 1, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result15component_countE", "oneapi::dal::preview::connected_components::vertex_partitioning_result::component_count"], [11, 4, 1, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result6labelsE", "oneapi::dal::preview::connected_components::vertex_partitioning_result::labels"], [11, 2, 1, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result26vertex_partitioning_resultEv", "oneapi::dal::preview::connected_components::vertex_partitioning_result::vertex_partitioning_result"], [43, 0, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::Allocator"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::EdgeValue"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::GraphValue"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::IndexType"], [43, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE", "oneapi::dal::preview::directed_adjacency_vector_graph::VertexValue"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphEv", "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph"], [43, 3, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph::other"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphaSERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::operator="], [43, 3, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphaSERR31directed_adjacency_vector_graph", "oneapi::dal::preview::directed_adjacency_vector_graph::operator=::other"], [43, 2, 1, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphD0Ev", "oneapi::dal::preview::directed_adjacency_vector_graph::~directed_adjacency_vector_graph"], [45, 0, 1, "_CPPv4N6oneapi3dal7preview11empty_valueE", "oneapi::dal::preview::empty_value"], [40, 2, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_edge_count"], [40, 1, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_edge_count::Graph"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_edge_count::g"], [40, 2, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value"], [40, 1, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::Graph"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::g"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::u"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE", "oneapi::dal::preview::get_edge_value::v"], [40, 2, 1, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_vertex_count"], [40, 1, 1, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_vertex_count::Graph"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph", "oneapi::dal::preview::get_vertex_count::g"], [40, 2, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree"], [40, 1, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree::Graph"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree::g"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_degree::u"], [40, 2, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors"], [40, 1, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors::Graph"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors::g"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_neighbors::u"], [40, 2, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree"], [40, 1, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree::Graph"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree::g"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_degree::u"], [40, 2, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors"], [40, 1, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors::Graph"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors::g"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE", "oneapi::dal::preview::get_vertex_outward_neighbors::u"], [13, 0, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Allocator"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Float"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Method"], [13, 1, 1, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::Task"], [13, 2, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor10descriptorE9Allocator", "oneapi::dal::preview::subgraph_isomorphism::descriptor::descriptor"], [13, 3, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor10descriptorE9Allocator", "oneapi::dal::preview::subgraph_isomorphism::descriptor::descriptor::allocator"], [13, 2, 1, "_CPPv4NK6oneapi3dal7preview20subgraph_isomorphism10descriptor13get_allocatorEv", "oneapi::dal::preview::subgraph_isomorphism::descriptor::get_allocator"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor4kindE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::kind"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor15max_match_countE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::max_match_count"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor14semantic_matchE", "oneapi::dal::preview::subgraph_isomorphism::descriptor::semantic_match"], [13, 0, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::Graph"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::Task"], [13, 2, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input"], [13, 3, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input::pattern_graph"], [13, 3, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input::target_graph"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input13pattern_graphE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::pattern_graph"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input12target_graphE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::target_graph"], [13, 0, 1, "_CPPv4I0EN6oneapi3dal7preview20subgraph_isomorphism21graph_matching_resultE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result"], [13, 1, 1, "_CPPv4I0EN6oneapi3dal7preview20subgraph_isomorphism21graph_matching_resultE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::Task"], [13, 2, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result21graph_matching_resultEv", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::graph_matching_result"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result11match_countE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::match_count"], [13, 4, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result12vertex_matchE", "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::vertex_match"], [13, 6, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4kindE", "oneapi::dal::preview::subgraph_isomorphism::kind"], [13, 5, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method10by_defaultE", "oneapi::dal::preview::subgraph_isomorphism::method::by_default"], [13, 0, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method4fastE", "oneapi::dal::preview::subgraph_isomorphism::method::fast"], [13, 2, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::Descriptor"], [13, 1, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::Graph"], [13, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::desc"], [13, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::pattern"], [13, 3, 1, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph", "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching::target"], [13, 5, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task10by_defaultE", "oneapi::dal::preview::subgraph_isomorphism::task::by_default"], [13, 0, 1, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task7computeE", "oneapi::dal::preview::subgraph_isomorphism::task::compute"], [44, 0, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph"], [44, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::Allocator"], [44, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::EdgeValue"], [44, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::GraphValue"], [44, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::IndexType"], [44, 1, 1, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE", "oneapi::dal::preview::undirected_adjacency_vector_graph::VertexValue"], [44, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphaSERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::operator="], [44, 3, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphaSERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::operator=::other"], [44, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph"], [44, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphEv", "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph"], [44, 3, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphERR33undirected_adjacency_vector_graph", "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph::other"], [44, 2, 1, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphD0Ev", "oneapi::dal::preview::undirected_adjacency_vector_graph::~undirected_adjacency_vector_graph"], [18, 2, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute"], [18, 1, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute::Descriptor"], [18, 3, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute::desc"], [18, 3, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute::input"], [18, 0, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute_input"], [18, 1, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel13compute_inputE", "oneapi::dal::rbf_kernel::compute_input::Task"], [18, 2, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::rbf_kernel::compute_input::compute_input"], [18, 3, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::rbf_kernel::compute_input::compute_input::x"], [18, 3, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::rbf_kernel::compute_input::compute_input::y"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1xE", "oneapi::dal::rbf_kernel::compute_input::x"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1yE", "oneapi::dal::rbf_kernel::compute_input::y"], [18, 0, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel14compute_resultE", "oneapi::dal::rbf_kernel::compute_result"], [18, 1, 1, "_CPPv4I0EN6oneapi3dal10rbf_kernel14compute_resultE", "oneapi::dal::rbf_kernel::compute_result::Task"], [18, 2, 1, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result14compute_resultEv", "oneapi::dal::rbf_kernel::compute_result::compute_result"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result6valuesE", "oneapi::dal::rbf_kernel::compute_result::values"], [18, 0, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor"], [18, 1, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor::Float"], [18, 1, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor::Method"], [18, 1, 1, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE", "oneapi::dal::rbf_kernel::descriptor::Task"], [18, 2, 1, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor10descriptorEv", "oneapi::dal::rbf_kernel::descriptor::descriptor"], [18, 4, 1, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor5sigmaE", "oneapi::dal::rbf_kernel::descriptor::sigma"], [18, 5, 1, "_CPPv4N6oneapi3dal10rbf_kernel6method10by_defaultE", "oneapi::dal::rbf_kernel::method::by_default"], [18, 0, 1, "_CPPv4N6oneapi3dal10rbf_kernel6method5denseE", "oneapi::dal::rbf_kernel::method::dense"], [18, 5, 1, "_CPPv4N6oneapi3dal10rbf_kernel4task10by_defaultE", "oneapi::dal::rbf_kernel::task::by_default"], [18, 0, 1, "_CPPv4N6oneapi3dal10rbf_kernel4task7computeE", "oneapi::dal::rbf_kernel::task::compute"], [38, 2, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read"], [38, 1, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::DataSource"], [38, 1, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::Object"], [38, 3, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::ds"], [35, 0, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor"], [35, 1, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor::T"], [35, 2, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERK5range", "oneapi::dal::row_accessor::pull"], [35, 2, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::pull"], [35, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::pull::block"], [35, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERK5range", "oneapi::dal::row_accessor::pull::row_range"], [35, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::pull::row_range"], [35, 2, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push"], [35, 1, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push::U"], [35, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push::block"], [35, 3, 1, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range", "oneapi::dal::row_accessor::push::row_range"], [35, 2, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor"], [35, 2, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERKN6detail13table_builderE", "oneapi::dal::row_accessor::row_accessor"], [35, 1, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::U"], [35, 3, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERKN6detail13table_builderE", "oneapi::dal::row_accessor::row_accessor::builder"], [35, 3, 1, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::table"], [19, 2, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute"], [19, 1, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute::Descriptor"], [19, 3, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute::desc"], [19, 3, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute::input"], [19, 0, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute_input"], [19, 1, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel13compute_inputE", "oneapi::dal::sigmoid_kernel::compute_input::Task"], [19, 2, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::sigmoid_kernel::compute_input::compute_input"], [19, 3, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::sigmoid_kernel::compute_input::compute_input::x"], [19, 3, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table", "oneapi::dal::sigmoid_kernel::compute_input::compute_input::y"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1xE", "oneapi::dal::sigmoid_kernel::compute_input::x"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1yE", "oneapi::dal::sigmoid_kernel::compute_input::y"], [19, 0, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel14compute_resultE", "oneapi::dal::sigmoid_kernel::compute_result"], [19, 1, 1, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel14compute_resultE", "oneapi::dal::sigmoid_kernel::compute_result::Task"], [19, 2, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result14compute_resultEv", "oneapi::dal::sigmoid_kernel::compute_result::compute_result"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result6valuesE", "oneapi::dal::sigmoid_kernel::compute_result::values"], [19, 0, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor"], [19, 1, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor::Float"], [19, 1, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor::Method"], [19, 1, 1, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE", "oneapi::dal::sigmoid_kernel::descriptor::Task"], [19, 2, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor10descriptorEv", "oneapi::dal::sigmoid_kernel::descriptor::descriptor"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5scaleE", "oneapi::dal::sigmoid_kernel::descriptor::scale"], [19, 4, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5shiftE", "oneapi::dal::sigmoid_kernel::descriptor::shift"], [19, 5, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel6method10by_defaultE", "oneapi::dal::sigmoid_kernel::method::by_default"], [19, 0, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel6method5denseE", "oneapi::dal::sigmoid_kernel::method::dense"], [19, 5, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel4task10by_defaultE", "oneapi::dal::sigmoid_kernel::task::by_default"], [19, 0, 1, "_CPPv4N6oneapi3dal14sigmoid_kernel4task7computeE", "oneapi::dal::sigmoid_kernel::task::compute"], [32, 0, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Float"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Kernel"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Method"], [32, 1, 1, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE", "oneapi::dal::svm::descriptor::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor18accuracy_thresholdE", "oneapi::dal::svm::descriptor::accuracy_threshold"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor1cE", "oneapi::dal::svm::descriptor::c"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor10cache_sizeE", "oneapi::dal::svm::descriptor::cache_size"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor11class_countE", "oneapi::dal::svm::descriptor::class_count"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm10descriptor10descriptorERK6Kernel", "oneapi::dal::svm::descriptor::descriptor"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm10descriptor10descriptorERK6Kernel", "oneapi::dal::svm::descriptor::descriptor::kernel"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor7epsilonE", "oneapi::dal::svm::descriptor::epsilon"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor6kernelE", "oneapi::dal::svm::descriptor::kernel"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor19max_iteration_countE", "oneapi::dal::svm::descriptor::max_iteration_count"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor2nuE", "oneapi::dal::svm::descriptor::nu"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor9shrinkingE", "oneapi::dal::svm::descriptor::shrinking"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm10descriptor3tauE", "oneapi::dal::svm::descriptor::tau"], [32, 2, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer::Descriptor"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer::desc"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE", "oneapi::dal::svm::infer::input"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm11infer_inputE", "oneapi::dal::svm::infer_input"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm11infer_inputE", "oneapi::dal::svm::infer_input::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11infer_input4dataE", "oneapi::dal::svm::infer_input::data"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::svm::infer_input::infer_input"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::svm::infer_input::infer_input::data"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::svm::infer_input::infer_input::trained_model"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11infer_input5modelE", "oneapi::dal::svm::infer_input::model"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm12infer_resultE", "oneapi::dal::svm::infer_result"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm12infer_resultE", "oneapi::dal::svm::infer_result::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12infer_result17decision_functionE", "oneapi::dal::svm::infer_result::decision_function"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm12infer_result12infer_resultEv", "oneapi::dal::svm::infer_result::infer_result"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12infer_result6labelsE", "oneapi::dal::svm::infer_result::labels"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12infer_result9responsesE", "oneapi::dal::svm::infer_result::responses"], [32, 5, 1, "_CPPv4N6oneapi3dal3svm6method10by_defaultE", "oneapi::dal::svm::method::by_default"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm6method3smoE", "oneapi::dal::svm::method::smo"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm6method7thunderE", "oneapi::dal::svm::method::thunder"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm5modelE", "oneapi::dal::svm::model"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm5modelE", "oneapi::dal::svm::model::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model4biasE", "oneapi::dal::svm::model::bias"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model6biasesE", "oneapi::dal::svm::model::biases"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model6coeffsE", "oneapi::dal::svm::model::coeffs"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model17first_class_labelE", "oneapi::dal::svm::model::first_class_label"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model20first_class_responseE", "oneapi::dal::svm::model::first_class_response"], [32, 2, 1, "_CPPv4NK6oneapi3dal3svm5model24get_support_vector_countEv", "oneapi::dal::svm::model::get_support_vector_count"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm5model5modelEv", "oneapi::dal::svm::model::model"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model18second_class_labelE", "oneapi::dal::svm::model::second_class_label"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model21second_class_responseE", "oneapi::dal::svm::model::second_class_response"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm5model15support_vectorsE", "oneapi::dal::svm::model::support_vectors"], [32, 5, 1, "_CPPv4N6oneapi3dal3svm4task10by_defaultE", "oneapi::dal::svm::task::by_default"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task14classificationE", "oneapi::dal::svm::task::classification"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task17nu_classificationE", "oneapi::dal::svm::task::nu_classification"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task13nu_regressionE", "oneapi::dal::svm::task::nu_regression"], [32, 0, 1, "_CPPv4N6oneapi3dal3svm4task10regressionE", "oneapi::dal::svm::task::regression"], [32, 2, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train::Descriptor"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train::desc"], [32, 3, 1, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE", "oneapi::dal::svm::train::input"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm11train_inputE", "oneapi::dal::svm::train_input"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm11train_inputE", "oneapi::dal::svm::train_input::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input4dataE", "oneapi::dal::svm::train_input::data"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input6labelsE", "oneapi::dal::svm::train_input::labels"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input9responsesE", "oneapi::dal::svm::train_input::responses"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input::data"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input::responses"], [32, 3, 1, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table", "oneapi::dal::svm::train_input::train_input::weights"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm11train_input7weightsE", "oneapi::dal::svm::train_input::weights"], [32, 0, 1, "_CPPv4I0EN6oneapi3dal3svm12train_resultE", "oneapi::dal::svm::train_result"], [32, 1, 1, "_CPPv4I0EN6oneapi3dal3svm12train_resultE", "oneapi::dal::svm::train_result::Task"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result4biasE", "oneapi::dal::svm::train_result::bias"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result6biasesE", "oneapi::dal::svm::train_result::biases"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result6coeffsE", "oneapi::dal::svm::train_result::coeffs"], [32, 2, 1, "_CPPv4NK6oneapi3dal3svm12train_result24get_support_vector_countEv", "oneapi::dal::svm::train_result::get_support_vector_count"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result5modelE", "oneapi::dal::svm::train_result::model"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result15support_indicesE", "oneapi::dal::svm::train_result::support_indices"], [32, 4, 1, "_CPPv4N6oneapi3dal3svm12train_result15support_vectorsE", "oneapi::dal::svm::train_result::support_vectors"], [32, 2, 1, "_CPPv4N6oneapi3dal3svm12train_result12train_resultEv", "oneapi::dal::svm::train_result::train_result"], [49, 0, 1, "_CPPv4N6oneapi3dal5tableE", "oneapi::dal::table"], [49, 2, 1, "_CPPv4NK6oneapi3dal5table16get_column_countEv", "oneapi::dal::table::get_column_count"], [49, 2, 1, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv", "oneapi::dal::table::get_data_layout"], [49, 2, 1, "_CPPv4NK6oneapi3dal5table8get_kindEv", "oneapi::dal::table::get_kind"], [49, 2, 1, "_CPPv4NK6oneapi3dal5table12get_metadataEv", "oneapi::dal::table::get_metadata"], [49, 2, 1, "_CPPv4NK6oneapi3dal5table13get_row_countEv", "oneapi::dal::table::get_row_count"], [49, 2, 1, "_CPPv4NK6oneapi3dal5table8has_dataEv", "oneapi::dal::table::has_data"], [49, 2, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator="], [49, 2, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator="], [49, 2, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table"], [49, 2, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table"], [49, 2, 1, "_CPPv4N6oneapi3dal5table5tableEv", "oneapi::dal::table::table"], [49, 0, 1, "_CPPv4N6oneapi3dal14table_metadataE", "oneapi::dal::table_metadata"], [49, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type"], [49, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type::feature_index"], [49, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata14get_data_typesEv", "oneapi::dal::table_metadata::get_data_types"], [49, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv", "oneapi::dal::table_metadata::get_feature_count"], [49, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type"], [49, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type::feature_index"], [49, 2, 1, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_typesEv", "oneapi::dal::table_metadata::get_feature_types"], [49, 2, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE", "oneapi::dal::table_metadata::table_metadata"], [49, 2, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv", "oneapi::dal::table_metadata::table_metadata"], [49, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE", "oneapi::dal::table_metadata::table_metadata::dtypes"], [49, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE", "oneapi::dal::table_metadata::table_metadata::ftypes"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:templateParam", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "templateParam", "C++ template parameter"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"]}, "titleterms": {"dbscan": [1, 68, 69, 334], "mathemat": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 385], "formul": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364], "program": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 55, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 369, 370, 372, 373, 375, 376, 379, 380, 381, 387], "interfac": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 53, 56, 181, 182, 200, 331, 333, 334, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 369, 370, 372, 373, 375, 376, 379, 380, 381], "descriptor": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32], "method": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 55, 71, 106, 137, 141, 142, 148, 149, 185, 336, 337, 338, 341, 342, 344, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364], "tag": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32], "task": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32], "comput": [1, 4, 5, 11, 13, 16, 17, 18, 19, 24, 29, 55, 67, 70, 71, 86, 95, 96, 97, 98, 103, 104, 107, 111, 114, 120, 124, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 150, 154, 171, 188, 193, 283, 287, 328, 334, 337, 338, 344, 346, 349, 350, 351, 352, 355, 356, 357, 358, 360, 361, 382, 384, 386, 387], "input": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 57, 63, 64, 65, 66, 68, 69, 76, 79, 80, 83, 86, 87, 96, 97, 99, 100, 102, 103, 104, 105, 106, 111, 114, 117, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 192, 195, 197, 198], "result": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 66, 69, 104, 119, 149, 156, 170, 374], "oper": [1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 18, 19, 21, 24, 29, 32, 38, 51, 55, 110, 182, 374, 387], "usag": [1, 3, 4, 8, 21, 29, 33, 34, 35, 37, 38, 40, 51, 53, 55, 72, 92, 93, 113, 116, 172, 173, 194, 195, 196, 197, 198, 334, 336, 337, 341, 354, 361, 369, 370, 372, 373], "exampl": [1, 3, 4, 8, 11, 13, 21, 29, 32, 33, 34, 35, 37, 38, 40, 53, 55, 56, 57, 58, 59, 60, 62, 63, 67, 70, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 92, 93, 98, 101, 102, 107, 111, 113, 114, 116, 120, 124, 126, 127, 131, 132, 133, 137, 139, 140, 141, 142, 144, 145, 146, 150, 151, 153, 154, 158, 159, 160, 161, 164, 165, 166, 168, 171, 172, 173, 176, 179, 180, 182, 184, 186, 187, 188, 201, 202, 250, 334, 336, 337, 341, 344, 346, 354, 361, 364, 368, 369, 370, 372, 373, 378, 388], "cluster": [2, 70, 107, 335], "k": [3, 4, 21, 101, 103, 104, 105, 106, 107, 336, 337, 354, 367], "mean": [3, 4, 103, 104, 105, 106, 107, 133, 336, 337], "model": [3, 8, 9, 21, 32, 52, 53, 55, 86, 178, 195, 196, 197, 198, 387], "train": [3, 5, 8, 9, 16, 17, 18, 19, 21, 29, 32, 58, 59, 60, 62, 71, 72, 73, 75, 76, 77, 91, 92, 93, 95, 97, 98, 101, 108, 110, 111, 113, 114, 115, 116, 121, 122, 123, 124, 166, 168, 172, 173, 191, 195, 196, 197, 198, 289, 299, 317, 336, 341, 342, 354, 364], "infer": [3, 8, 9, 21, 32, 289, 299, 317, 336, 341, 342, 354, 364], "initi": [4, 55, 86, 98, 99, 100, 105, 106, 107, 182, 337], "covari": [5, 6, 64, 65, 66, 67, 338, 339, 341], "decomposit": [7, 63, 152, 153, 154, 155, 156, 169, 170, 171, 340], "princip": [8, 147, 148, 149, 150, 151, 161, 341], "compon": [8, 11, 147, 148, 149, 150, 151, 161, 341, 344], "analysi": [8, 147, 148, 149, 150, 151, 161, 174, 341], "pca": [8, 341], "decis": [9, 71, 72, 73, 74, 75, 76, 77, 78, 342, 365], "forest": [9, 71, 72, 73, 74, 77, 342], "classif": [9, 21, 72, 76, 92, 158, 160, 166, 195, 342, 354], "regress": [9, 73, 77, 93, 109, 112, 113, 114, 115, 116, 159, 168, 198, 342, 354, 364], "df": [9, 342], "enum": [9, 13, 21, 55], "class": [9, 13, 21, 55, 160, 173, 185], "error_metric_mod": 9, "variable_importance_mod": 9, "infer_mod": 9, "voting_mod": 9, "splitter_mod": 9, "ensembl": [10, 343], "connect": [11, 344], "preview": [11, 13], "vertex_partit": 11, "graph": [12, 40, 41, 42, 43, 44, 45, 345, 375, 376, 377, 378, 382], "subgraph": [13, 346], "isomorph": [13, 346], "graph_match": 13, "algorithm": [14, 57, 63, 64, 65, 66, 68, 69, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 102, 103, 104, 105, 106, 114, 117, 118, 119, 122, 126, 127, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 181, 185, 192, 195, 197, 198, 347, 384], "kernel": [15, 16, 17, 18, 19, 102, 348, 349, 350, 351, 352], "function": [15, 18, 22, 24, 40, 55, 102, 129, 130, 134, 135, 200, 348, 351, 355], "linear": [16, 102, 112, 113, 114, 159, 349], "polynomi": [17, 350], "radial": [18, 102, 351], "basi": [18, 102, 351], "rbf": [18, 351], "sigmoid": [19, 352], "nearest": [20, 21, 101, 353, 354], "neighbor": [20, 21, 101, 353, 354], "knn": [20, 101, 353], "nn": [21, 354], "option": [21, 24, 133], "object": [22, 24, 38, 55, 129, 130, 135, 355, 378], "logist": [23, 116, 132, 356], "loss": [23, 131, 132, 356], "chebyshev": [25, 357], "distanc": [25, 26, 27, 28, 79, 80, 81, 357, 358, 359, 360], "cosin": [26, 80, 358], "pairwis": [27, 359], "minkowski": [28, 360], "basic": [29, 361], "statist": [29, 30, 361, 362], "support": [31, 32, 40, 172, 175, 200, 355, 363, 364, 383, 384, 387], "vector": [31, 32, 41, 42, 43, 44, 172, 363, 364, 375, 376], "machin": [31, 32, 172, 363, 364, 382], "classifi": [32, 58, 59, 60, 62, 101, 121, 122, 123, 124, 172, 173, 364], "svm": [32, 364], "column": [33, 369], "accessor": [33, 34, 35, 36, 369, 370, 371, 378], "compress": [34, 47, 200, 379], "spars": [34, 47, 49, 379], "row": [34, 35, 47, 370, 379], "csr": [34, 47, 184, 379], "arrai": [37, 372], "csv": [38, 373], "data": [38, 39, 46, 49, 52, 55, 176, 177, 178, 179, 180, 199, 331, 372, 373, 374, 378, 381, 387], "sourc": [38, 39, 180, 373, 374, 378], "read": [38, 374], "oneapi": [38, 201, 202, 250, 331, 333, 382], "dal": 38, "arg": [38, 374], "servic": [40, 41, 42, 190], "relat": [40, 367], "type": [40, 49, 55, 75, 184, 371, 374, 377, 381], "direct": [41, 43, 375], "adjac": [41, 42, 43, 44, 375, 376], "undirect": [42, 44, 376], "trait": 45, "manag": [46, 177, 188, 189, 378], "tabl": [47, 48, 49, 183, 184, 378, 379, 380, 381], "homogen": [48, 184, 380], "metadata": [49, 378], "layout": 49, "featur": 49, "index": 49, "c": [50, 55, 202], "api": [50, 55], "commun": 51, "usm": 51, "non": [51, 55], "memori": [51, 55, 140, 189], "request": 51, "reducion": 51, "distribut": [52, 53, 55, 65, 69, 82, 83, 84, 85, 96, 97, 100, 104, 106, 114, 118, 122, 148, 150, 152, 156, 170, 171, 193, 334, 336, 338, 341, 342, 354, 355, 356, 361, 382, 386, 387], "singl": [52, 159, 387], "process": [52, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 193], "multipl": [52, 387], "spmd": [53, 387], "bibliographi": 54, "code": 55, "guidelin": 55, "style": 55, "gener": [55, 71, 86, 182], "rule": [55, 57], "whitespac": 55, "file": 55, "header": 55, "name": 55, "convent": 55, "Not": 55, "recommend": [55, 197], "good": 55, "variabl": [55, 71, 72, 342], "member": 55, "constant": 55, "stream": 55, "scheme": 55, "declar": 55, "order": [55, 117, 118, 119, 120], "typedef": 55, "defin": [55, 163], "common": [55, 382], "definit": [55, 158, 160, 346, 374], "statement": [55, 102, 126], "comment": 55, "templat": 55, "deprec": [55, 200], "note": 55, "local": [55, 65, 69, 96, 97, 100, 104, 106, 114, 118, 122, 148, 156, 170], "static": 55, "global": 55, "undetermin": 55, "construct": 55, "destruct": 55, "within": 55, "scope": 55, "const": 55, "mutabl": 55, "ownership": [55, 372], "raii": 55, "resourc": 55, "acquisit": 55, "i": 55, "smart": 55, "pointer": 55, "pass": 55, "paramet": [55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 172, 173, 192, 195, 197, 198], "primit": 55, "refer": [55, 331], "preprocessor": 55, "macro": 55, "namespac": 55, "write": 55, "short": 55, "": [55, 336], "argument": 55, "infix": 55, "postfix": 55, "increment": 55, "assert": 55, "constructor": 55, "trivial": 55, "clone": 55, "all": 55, "part": 55, "an": 55, "assign": 55, "new": 55, "delet": 55, "access": 55, "control": 55, "metaprogram": 55, "hide": 55, "implement": 55, "sdl": 55, "requir": [55, 371, 372, 377, 381, 389], "handl": [55, 187], "perform": [55, 57, 63, 67, 71, 79, 80, 82, 86, 98, 107, 111, 124, 144, 150, 152, 171, 172], "orient": 55, "convers": 55, "safe": 55, "verif": 55, "from": 55, "int": 55, "size_t": 55, "work": [55, 157, 163], "alloc": 55, "error": [55, 71, 72, 73, 133, 187, 342], "do": 55, "freed": 55, "avoid": 55, "null": 55, "de": 55, "free": 55, "same": 55, "buffer": 55, "more": 55, "than": 55, "onc": 55, "take": 55, "size": 55, "determin": 55, "point": 55, "set": [55, 157], "up": 55, "zero": 55, "after": 55, "us": [55, 101, 148, 149, 387], "special": 55, "copi": 55, "byte": 55, "between": [55, 378], "fill": 55, "check": 55, "except": 55, "inject": 55, "daal": [56, 200, 331], "associ": 57, "detail": [57, 58, 59, 60, 62, 63, 67, 70, 71, 72, 73, 75, 76, 77, 82, 84, 85, 86, 91, 92, 93, 98, 101, 107, 108, 110, 113, 115, 116, 120, 124, 127, 131, 132, 133, 139, 141, 144, 145, 146, 150, 151, 158, 159, 160, 161, 164, 171, 172, 173, 371, 374, 378], "batch": [57, 58, 59, 60, 62, 63, 64, 68, 71, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 101, 102, 103, 105, 111, 114, 116, 117, 121, 126, 127, 142, 144, 145, 146, 147, 150, 151, 153, 155, 158, 159, 160, 161, 164, 165, 166, 168, 169, 172, 173, 193, 386], "output": [57, 59, 63, 64, 65, 66, 68, 69, 71, 72, 73, 79, 80, 83, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 116, 117, 118, 119, 122, 126, 127, 130, 131, 132, 133, 134, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 173, 192, 195, 197, 198], "consider": [57, 63, 67, 71, 79, 80, 82, 86, 98, 107, 111, 124, 144, 150, 152, 171, 172, 383], "adaboost": [58, 59], "stage": [58, 59, 60, 62, 71, 72, 73, 75, 76, 77, 91, 92, 93, 98, 101, 108, 110, 113, 115, 116, 124, 172, 173, 195, 197, 198], "predict": [58, 59, 60, 62, 71, 72, 73, 75, 76, 77, 91, 92, 93, 95, 96, 98, 101, 108, 110, 111, 113, 114, 115, 116, 121, 124, 166, 168, 172, 173, 191, 195, 196, 197, 198], "multiclass": 59, "brownboost": 60, "boost": [61, 91, 92, 93, 94], "logitboost": 62, "choleski": 63, "correl": [64, 65, 66, 67, 79, 148, 149], "varianc": [64, 65, 66, 67], "matric": [64, 65, 66, 67], "step": [65, 69, 96, 97, 100, 104, 106, 114, 118, 122, 148, 156, 170], "1": [65, 69, 96, 97, 100, 104, 106, 114, 118, 122, 148, 156, 170], "node": [65, 69, 96, 97, 100, 104, 106, 114, 118, 122, 148, 156, 170], "2": [65, 69, 97, 100, 104, 106, 114, 118, 122, 148, 156, 170], "master": [65, 69, 97, 104, 106, 114, 118, 122, 148, 156, 170], "onlin": [66, 114, 119, 123, 149, 150, 152, 155, 169, 171, 193, 386], "partial": [66, 69, 104, 118, 119, 149, 156, 170], "3": [69, 97, 100, 106, 156, 170], "4": [69, 97, 106], "5": [69, 106], "6": 69, "7": 69, "8": 69, "9": 69, "10": 69, "11": 69, "12": 69, "13": 69, "densiti": 70, "base": 70, "spatial": 70, "applic": [70, 185, 368], "nois": 70, "inexact": 71, "histogram": 71, "split": [71, 75, 76, 77, 91, 342], "criteria": [71, 75, 76, 342], "termin": [71, 342], "tree": [71, 75, 76, 77, 78, 91, 92, 93, 94, 101, 342, 354, 365, 367], "build": [71, 342, 368, 388], "strategi": [71, 342], "depth": [71, 342], "first": [71, 342], "best": [71, 342], "random": [71, 106], "number": 71, "addit": [71, 342], "characterist": [71, 118, 119, 135, 342], "calcul": [71, 72, 73, 91, 342], "out": [71, 72, 73, 342], "bag": [71, 72, 73, 342], "import": [71, 72, 342], "impur": [72, 73, 342], "altern": [72, 92, 93, 95, 96, 97, 98, 99, 100, 113, 116, 172, 173, 191], "test": [75, 159], "post": 75, "prune": 75, "criterion": 77, "matrix": [79, 80, 81, 158, 160], "bernoulli": 82, "normal": [84, 125], "uniform": 85, "expect": 86, "maxim": 86, "em": 86, "form": 86, "gaussian": 86, "mixtur": 86, "engin": [87, 88, 89, 90], "mcg59": 88, "mcg58": 88, "mt19937": 89, "mt2203": 90, "gradient": [91, 92, 93, 94, 141, 142, 355, 356], "mode": [91, 193, 334, 336, 338, 341, 342, 354, 355, 356, 361, 382, 384, 386], "implicit": [95, 96, 97, 98, 99, 100], "least": [95, 96, 97, 98, 99, 100, 110], "squar": [95, 96, 97, 98, 99, 100, 133], "rate": 96, "d": [101, 354, 367], "brute": [101, 354], "forc": [101, 354], "problem": [102, 126], "determinist": 106, "plusplu": 106, "parallelplu": 106, "centroid": 107, "elast": [108, 109, 111], "net": [108, 109, 111], "lasso": [109, 110, 111], "absolut": 110, "shrinkag": 110, "select": 110, "ridg": [112, 114, 115], "low": [117, 118, 119, 120], "moment": [117, 118, 119, 120], "na\u00efv": [121, 122, 123, 124], "bay": [121, 122, 123, 124], "min": 126, "max": 126, "z": 127, "score": 127, "iter": [128, 138], "solver": [128, 136, 138, 174], "cross": 131, "entropi": 131, "logit": 132, "mse": [133, 342], "sum": 134, "precomput": 135, "optim": [136, 174], "adapt": 137, "subgradi": 137, "coordin": 139, "descent": [139, 142], "limit": 140, "broyden": 140, "fletcher": 140, "goldfarb": 140, "shanno": 140, "transform": [140, 151], "intrins": 140, "hessian": [140, 355, 356], "updat": 140, "stochast": [141, 142], "averag": 141, "acceler": 141, "mini": 142, "default": [142, 144, 146, 157], "momentum": 142, "outlier": [143, 144, 145, 146], "detect": [143, 144, 145, 146], "multivari": [144, 145], "valu": [144, 146, 169, 170, 171, 355, 356], "bacon": 145, "univari": 146, "svd": [148, 149, 341], "qr": [152, 153, 154, 155, 156], "pivot": [153, 154, 155, 156], "without": [154, 155, 156], "metric": [157, 158, 159, 160, 161, 162, 163, 342], "qualiti": [158, 159, 160, 161, 162, 163], "binari": 158, "notat": [158, 160, 385], "confus": [158, 160], "insignific": 159, "beta": 159, "group": 159, "multi": [160, 173], "user": 163, "quantil": 164, "sort": 165, "stump": [166, 167, 168], "singular": [169, 170, 171], "cpu": [175, 337, 383], "gpu": [175, 383], "dictionari": 176, "serial": 179, "deseri": 179, "sampl": 180, "essenti": 181, "deiniti": 182, "numer": [183, 184], "heterogen": 184, "ao": 184, "soa": 184, "merg": 184, "provid": 185, "callback": 185, "host": 185, "hostappifac": 185, "extract": 186, "version": 186, "inform": 186, "environ": 188, "librari": [194, 331, 368], "specif": [195, 197, 198, 381, 387], "system": [197, 389], "introduct": [199, 384], "analyt": [199, 331, 382], "pipelin": 199, "notic": 200, "java": 200, "cpp": [200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "sycl": 200, "abi": 200, "compat": 200, "maco": 200, "basic_statistics_dense_batch": [203, 251], "basic_statistics_dense_onlin": [204, 252], "column_accessor_homogen": [205, 253], "connected_components_batch": 206, "cor_dense_batch": [207, 254], "cor_dense_onlin": [208, 255], "cov_dense_batch": [209, 256], "cov_dense_onlin": [210, 257], "csr_accessor": [211, 258], "dbscan_brute_force_batch": [212, 259], "df_cls_dense_batch": 213, "df_reg_dense_batch": 214, "directed_graph": 215, "graph_service_funct": 216, "jaccard_batch": 217, "jaccard_batch_app": 218, "kmeans_init_dens": [219, 266], "kmeans_lloyd_dense_batch": [220, 267], "knn_cls_brute_force_dense_batch": [221, 268], "knn_cls_kd_tree_dense_batch": 222, "knn_search_brute_force_dense_batch": [223, 270], "linear_kernel_dense_batch": [224, 271], "linear_regression_dense_batch": [225, 272], "linear_regression_dense_onlin": [226, 273], "logloss_dense_batch": 227, "louvain_batch": 228, "pca_dense_batch": 229, "pca_dense_onlin": 230, "pca_precomputed_dense_batch": 231, "polynomial_kernel_dense_batch": 232, "rbf_kernel_dense_batch": [233, 279], "shortest_paths_batch": 234, "sigmoid_kernel_dense_batch": 235, "subgraph_isomorphism_batch": 236, "svm_multi_class_thunder_csr_batch": 237, "svm_multi_class_thunder_dense_batch": 238, "svm_nu_cls_thunder_csr_batch": 239, "svm_nu_cls_thunder_dense_batch": 240, "svm_nu_reg_thunder_csr_batch": 241, "svm_nu_reg_thunder_dense_batch": 242, "svm_reg_thunder_csr_batch": 243, "svm_reg_thunder_dense_batch": 244, "svm_two_class_smo_csr_batch": 245, "svm_two_class_smo_dense_batch": 246, "svm_two_class_thunder_csr_batch": 247, "svm_two_class_thunder_dense_batch": [248, 280], "triangle_counting_batch": 249, "dpc": 250, "df_cls_hist_batch": 260, "df_cls_hist_batch_random": 261, "df_cls_traverse_model": 262, "df_reg_hist_batch": 263, "df_reg_hist_batch_random": 264, "df_reg_traverse_model": 265, "knn_reg_brute_force_dense_batch": 269, "logistic_regression_dense_batch": 274, "pca_cor_dense_batch": 275, "pca_cor_dense_onlin": 276, "pca_precomputed_cor_dense_batch": 277, "pca_precomputed_cov_dense_batch": 278, "oned": [331, 368, 382], "v": 331, "get": 331, "start": [331, 388], "develop": 331, "guid": 331, "instal": 332, "lloyd": 336, "dens": [337, 338, 342, 349, 350, 351, 352, 357, 358, 360, 361], "random_dens": 337, "plus_plus_dens": 337, "onli": 337, "parallel_plus_dens": 337, "sign": 341, "flip": 341, "techniqu": 341, "hist": 342, "afforest": 344, "fast": 346, "search": 354, "dense_batch": [355, 356], "smo": 364, "thunder": 364, "appendix": 366, "term": [367, 382], "linux": 368, "o": 368, "window": 368, "debug": 368, "shortcut": 374, "kei": 378, "concept": 378, "dataset": 378, "interact": 378, "format": 381, "glossari": 382, "learn": 382, "target": 383, "collect": 387, "backend": 387, "restrict": 387, "quick": 388, "befor": 388, "you": 388, "begin": 388, "end": 388, "run": 388, "hardwar": 389, "softwar": 389}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"DBSCAN": [[1, "dbscan"], [334, "dbscan"]], "Mathematical formulation": [[1, "mathematical-formulation"], [3, "mathematical-formulation"], [4, "mathematical-formulation"], [5, "mathematical-formulation"], [8, "mathematical-formulation"], [9, "mathematical-formulation"], [11, "mathematical-formulation"], [13, "mathematical-formulation"], [16, "mathematical-formulation"], [17, "mathematical-formulation"], [18, "mathematical-formulation"], [19, "mathematical-formulation"], [21, "mathematical-formulation"], [23, "mathematical-formulation"], [24, "mathematical-formulation"], [25, "mathematical-formulation"], [26, "mathematical-formulation"], [28, "mathematical-formulation"], [29, "mathematical-formulation"], [32, "mathematical-formulation"], [334, "mathematical-formulation"], [336, "mathematical-formulation"], [337, "mathematical-formulation"], [338, "mathematical-formulation"], [341, "mathematical-formulation"], [342, "mathematical-formulation"], [344, "mathematical-formulation"], [346, "mathematical-formulation"], [349, "mathematical-formulation"], [350, "mathematical-formulation"], [351, "mathematical-formulation"], [352, "mathematical-formulation"], [354, "mathematical-formulation"], [355, "mathematical-formulation"], [356, "mathematical-formulation"], [357, "mathematical-formulation"], [358, "mathematical-formulation"], [360, "mathematical-formulation"], [361, "mathematical-formulation"], [364, "mathematical-formulation"]], "Programming Interface": [[1, "programming-interface"], [3, "programming-interface"], [4, "programming-interface"], [5, "programming-interface"], [8, "programming-interface"], [9, "programming-interface"], [11, "programming-interface"], [13, "programming-interface"], [16, "programming-interface"], [17, "programming-interface"], [18, "programming-interface"], [19, "programming-interface"], [21, "programming-interface"], [23, "programming-interface"], [24, "programming-interface"], [25, "programming-interface"], [26, "programming-interface"], [28, "programming-interface"], [29, "programming-interface"], [32, "programming-interface"], [33, "programming-interface"], [34, "programming-interface"], [35, "programming-interface"], [38, "programming-interface"], [47, "programming-interface"], [334, "programming-interface"], [336, "programming-interface"], [337, "programming-interface"], [338, "programming-interface"], [341, "programming-interface"], [342, "programming-interface"], [344, "programming-interface"], [346, "programming-interface"], [349, "programming-interface"], [350, "programming-interface"], [351, "programming-interface"], [352, "programming-interface"], [354, "programming-interface"], [355, "programming-interface"], [356, "programming-interface"], [357, "programming-interface"], [358, "programming-interface"], [360, "programming-interface"], [361, "programming-interface"], [364, "programming-interface"], [373, "programming-interface"], [379, "programming-interface"]], "Descriptor": [[1, "descriptor"], [3, "descriptor"], [4, "descriptor"], [5, "descriptor"], [8, "descriptor"], [9, "descriptor"], [11, "descriptor"], [13, "descriptor"], [16, "descriptor"], [17, "descriptor"], [18, "descriptor"], [19, "descriptor"], [21, "descriptor"], [23, "descriptor"], [24, "descriptor"], [25, "descriptor"], [26, "descriptor"], [28, "descriptor"], [29, "descriptor"], [32, "descriptor"]], "Method tags": [[1, "method-tags"], [3, "method-tags"], [4, "method-tags"], [5, "method-tags"], [8, "method-tags"], [9, "method-tags"], [11, "method-tags"], [13, "method-tags"], [16, "method-tags"], [17, "method-tags"], [18, "method-tags"], [19, "method-tags"], [21, "method-tags"], [23, "method-tags"], [24, "method-tags"], [25, "method-tags"], [26, "method-tags"], [28, "method-tags"], [29, "method-tags"], [32, "method-tags"]], "Task tags": [[1, "task-tags"], [3, "task-tags"], [4, "task-tags"], [5, "task-tags"], [8, "task-tags"], [9, "task-tags"], [11, "task-tags"], [13, "task-tags"], [16, "task-tags"], [17, "task-tags"], [18, "task-tags"], [19, "task-tags"], [21, "task-tags"], [23, "task-tags"], [24, "task-tags"], [25, "task-tags"], [26, "task-tags"], [28, "task-tags"], [29, "task-tags"], [32, "task-tags"]], "Computation compute(...)": [[1, "computation-compute"]], "Input": [[1, "input"], [3, "input"], [3, "kmeans-i-api-input"], [4, "input"], [5, "input"], [8, "input"], [8, "pca-i-api-input"], [9, "input"], [9, "df-i-api-input"], [11, "input"], [13, "input"], [16, "input"], [17, "input"], [18, "input"], [19, "input"], [21, "input"], [21, "knn-i-api-input"], [24, "input"], [29, "input"], [32, "input"], [32, "svm-i-api-input"], [99, "input"], [100, "input"], [100, "id1"], [105, "input"], [130, "input"]], "Result": [[1, "result"], [3, "result"], [3, "kmeans-i-api-result"], [4, "result"], [5, "result"], [8, "result"], [8, "pca-i-api-result"], [9, "result"], [9, "df-i-api-result"], [11, "result"], [13, "result"], [16, "result"], [17, "result"], [18, "result"], [19, "result"], [21, "result"], [21, "knn-i-api-result"], [24, "result"], [29, "result"], [32, "result"], [32, "svm-i-api-result"], [374, "result"]], "Operation": [[1, "operation"], [3, "operation"], [3, "id3"], [4, "operation"], [5, "operation"], [8, "operation"], [8, "id3"], [9, "operation"], [9, "id5"], [11, "operation"], [13, "operation"], [16, "operation"], [17, "operation"], [18, "operation"], [19, "operation"], [21, "operation"], [21, "id3"], [24, "operation"], [29, "operation"], [32, "operation"], [32, "id3"], [38, "operation"]], "Usage Example": [[1, "usage-example"], [3, "usage-example"], [4, "usage-example"], [8, "usage-example"], [21, "usage-example"], [29, "usage-example"], [33, "usage-example"], [34, "usage-example"], [35, "usage-example"], [37, "usage-example"], [38, "usage-example"], [40, "usage-example"], [53, "usage-example"], [334, "usage-example"], [336, "usage-example"], [337, "usage-example"], [341, "usage-example"], [354, "usage-example"], [361, "usage-example"], [369, "usage-example"], [370, "usage-example"], [372, "usage-example"], [373, "usage-example"]], "Compute": [[1, "compute"], [283, "compute"], [334, "compute"]], "Examples": [[1, "examples"], [3, "examples"], [4, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [21, "examples"], [29, "examples"], [32, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [62, "examples"], [63, "examples"], [67, "examples"], [70, "examples"], [72, "examples"], [72, "id2"], [73, "examples"], [76, "examples"], [77, "examples"], [79, "examples"], [80, "examples"], [82, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [92, "examples"], [92, "id1"], [93, "examples"], [93, "id1"], [98, "examples"], [101, "examples"], [102, "examples"], [102, "id6"], [107, "examples"], [111, "examples"], [113, "examples"], [114, "examples"], [116, "examples"], [116, "id5"], [120, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [137, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [150, "examples"], [151, "examples"], [153, "examples"], [154, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [168, "examples"], [171, "examples"], [172, "examples"], [172, "id10"], [173, "examples"], [173, "id4"], [176, "examples"], [179, "examples"], [180, "examples"], [182, "examples"], [184, "examples"], [184, "id1"], [184, "id2"], [184, "id3"], [186, "examples"], [187, "examples"], [188, "examples"], [334, "examples"], [336, "examples"], [337, "examples"], [341, "examples"], [344, "examples"], [346, "examples"], [354, "examples"], [361, "examples"], [364, "examples"], [368, "examples"]], "Clustering": [[2, "clustering"], [335, "clustering"]], "K-Means": [[3, "k-means"], [336, "k-means"]], "Model": [[3, "model"], [8, "model"], [9, "model"], [21, "model"], [32, "model"]], "Training train(...)": [[3, "training-train"], [8, "training-train"], [9, "training-train"], [21, "training-train"], [32, "training-train"]], "Inference infer(...)": [[3, "inference-infer"], [8, "inference-infer"], [9, "inference-infer"], [21, "inference-infer"], [32, "inference-infer"]], "Training": [[3, "training"], [8, "training"], [21, "training"], [58, "training"], [59, "training"], [60, "training"], [62, "training"], [71, "training"], [72, "training"], [73, "training"], [76, "training"], [77, "training"], [92, "training"], [93, "training"], [95, "training"], [101, "training"], [111, "training"], [114, "training"], [114, "id1"], [114, "id2"], [116, "training"], [121, "training"], [122, "training"], [123, "training"], [166, "training"], [168, "training"], [172, "training"], [173, "training"], [289, "training"], [299, "training"], [317, "training"], [336, "training"], [336, "id2"], [341, "training"], [341, "id6"], [342, "training"], [354, "training"], [354, "id1"], [364, "training"]], "Inference": [[3, "inference"], [8, "inference"], [21, "inference"], [289, "inference"], [299, "inference"], [317, "inference"], [336, "inference"], [336, "id3"], [341, "inference"], [341, "id7"], [342, "inference"], [354, "inference"], [354, "id2"]], "K-Means initialization": [[4, "k-means-initialization"], [337, "k-means-initialization"]], "Computing compute(...)": [[4, "computing-compute"]], "Computing": [[4, "computing"], [29, "computing"], [287, "computing"], [328, "computing"], [337, "computing"], [337, "id1"], [338, "computing"], [344, "computing"], [346, "computing"], [349, "computing"], [350, "computing"], [351, "computing"], [352, "computing"], [355, "computing"], [356, "computing"], [357, "computing"], [358, "computing"], [360, "computing"], [361, "computing"], [361, "id1"]], "Covariance": [[5, "covariance"], [6, "covariance"], [338, "covariance"], [339, "covariance"]], "Training compute(...)": [[5, "training-compute"], [16, "training-compute"], [17, "training-compute"], [18, "training-compute"], [19, "training-compute"], [29, "training-compute"]], "Decomposition": [[7, "decomposition"], [340, "decomposition"]], "Principal Components Analysis (PCA)": [[8, "principal-components-analysis-pca"], [341, "principal-components-analysis-pca"]], "Decision Forest Classification and Regression (DF)": [[9, "decision-forest-classification-and-regression-df"], [342, "decision-forest-classification-and-regression-df"]], "Enum classes": [[9, "enum-classes"], [13, "enum-classes"], [21, "enum-classes"]], "error_metric_mode": [[9, "error-metric-mode"]], "variable_importance_mode": [[9, "variable-importance-mode"]], "infer_mode": [[9, "infer-mode"]], "voting_mode": [[9, "voting-mode"]], "splitter_mode": [[9, "splitter-mode"]], "Ensembles": [[10, "ensembles"], [343, "ensembles"]], "Connected Components": [[11, "connected-components"], [344, "connected-components"]], "Computing preview::vertex_partitioning(...)": [[11, "computing-preview-vertex-partitioning"]], "Graph": [[12, "graph"], [45, "graph"], [345, "graph"], [378, "graph"]], "Subgraph Isomorphism": [[13, "subgraph-isomorphism"], [346, "subgraph-isomorphism"]], "Computing preview::graph_matching(...)": [[13, "computing-preview-graph-matching"]], "Algorithms": [[14, "algorithms"], [192, "algorithms"], [347, "algorithms"]], "Kernel Functions": [[15, "kernel-functions"], [102, "kernel-functions"], [348, "kernel-functions"]], "Linear kernel": [[16, "linear-kernel"], [349, "linear-kernel"]], "Polynomial kernel": [[17, "polynomial-kernel"], [350, "polynomial-kernel"]], "Radial Basis Function (RBF) kernel": [[18, "radial-basis-function-rbf-kernel"], [351, "radial-basis-function-rbf-kernel"]], "Sigmoid kernel": [[19, "sigmoid-kernel"], [352, "sigmoid-kernel"]], "Nearest Neighbors (kNN)": [[20, "nearest-neighbors-knn"], [353, "nearest-neighbors-knn"]], "k-Nearest Neighbors Classification (k-NN)": [[21, "k-nearest-neighbors-classification-k-nn"]], "Result options": [[21, "result-options"], [24, "result-options"]], "Objective function": [[22, "objective-function"], [24, "objective-function"], [355, "objective-function"]], "Descriptors of objective functions": [[22, "descriptors-of-objective-functions"]], "Logistic Loss": [[23, "logistic-loss"], [132, "logistic-loss"], [356, "logistic-loss"]], "Compute compute(...)": [[24, "compute-compute"]], "Chebyshev distance": [[25, "chebyshev-distance"], [357, "chebyshev-distance"]], "Cosine distance": [[26, "cosine-distance"], [358, "cosine-distance"]], "Pairwise Distances": [[27, "pairwise-distances"], [359, "pairwise-distances"]], "Minkowski distance": [[28, "minkowski-distance"], [360, "minkowski-distance"]], "Basic Statistics": [[29, "basic-statistics"], [361, "basic-statistics"]], "Statistics": [[30, "statistics"], [362, "statistics"]], "Support Vector Machines": [[31, "support-vector-machines"], [363, "support-vector-machines"]], "Support Vector Machine Classifier (SVM)": [[32, "support-vector-machine-classifier-svm"]], "Column Accessor": [[33, "column-accessor"]], "Compressed Sparse Rows (CSR) Accessor": [[34, "compressed-sparse-rows-csr-accessor"]], "Row Accessor": [[35, "row-accessor"]], "Accessors": [[36, "accessors"], [371, "accessors"]], "Array": [[37, "array"], [372, "array"]], "Programming interface": [[37, "programming-interface"], [40, "programming-interface"], [43, "programming-interface"], [44, "programming-interface"], [45, "programming-interface"], [48, "programming-interface"], [49, "programming-interface"], [51, "programming-interface"], [53, "programming-interface"], [369, "programming-interface"], [370, "programming-interface"], [372, "programming-interface"], [375, "programming-interface"], [376, "programming-interface"], [380, "programming-interface"], [381, "programming-interface"]], "CSV data source": [[38, "csv-data-source"], [373, "csv-data-source"]], "Reading oneapi::dal::read<Object>(...)": [[38, "reading-oneapi-dal-read-object"]], "Args": [[38, "args"], [374, "args"]], "Data Sources": [[39, "data-sources"], [180, "data-sources"], [374, "data-sources"]], "Graph Service": [[40, "graph-service"]], "Related types": [[40, "related-types"]], "Graph service functions": [[40, "graph-service-functions"]], "Service functions for supported graphs": [[40, "service-functions-for-supported-graphs"]], "Directed adjacency vector graph service": [[41, "directed-adjacency-vector-graph-service"]], "Undirected adjacency vector graph service": [[42, "undirected-adjacency-vector-graph-service"]], "Directed adjacency vector graph": [[43, "directed-adjacency-vector-graph"], [375, "directed-adjacency-vector-graph"]], "Undirected adjacency vector graph": [[44, "undirected-adjacency-vector-graph"], [376, "undirected-adjacency-vector-graph"]], "Graphs": [[45, "graphs"], [377, "graphs"]], "Graph traits": [[45, "graph-traits"]], "Data Management": [[46, "data-management"], [177, "data-management"], [378, "data-management"]], "Compressed Sparse Rows (CSR) Table": [[47, "compressed-sparse-rows-csr-table"], [379, "compressed-sparse-rows-csr-table"]], "Homogeneous table": [[48, "homogeneous-table"], [380, "homogeneous-table"]], "Tables": [[49, "tables"], [381, "tables"]], "Table": [[49, "table"], [378, "table"]], "Table metadata": [[49, "table-metadata"], [378, "table-metadata"]], "Data layout": [[49, "data-layout"]], "Feature type": [[49, "feature-type"]], "Sparse Indexing": [[49, "sparse-indexing"]], "C++ API": [[50, "c-api"]], "Communicators": [[51, "communicators"]], "Communicator": [[51, "communicator"]], "USM and non-USM memory usage": [[51, "usm-and-non-usm-memory-usage"]], "Request": [[51, "request"]], "Reducion operations": [[51, "reducion-operations"]], "Distributed Model: Single Process Multiple Data": [[52, "distributed-model-single-process-multiple-data"]], "Distributed SPMD model": [[53, "distributed-spmd-model"]], "Bibliography": [[54, "bibliography"]], "Coding Guidelines": [[55, "coding-guidelines"]], "Coding Style": [[55, "coding-style"]], "General Rules": [[55, "general-rules"]], "Whitespaces": [[55, "whitespaces"]], "Functions": [[55, "functions"], [55, "id1"]], "C++ Files": [[55, "c-files"]], "Header Files": [[55, "header-files"]], "Naming Conventions": [[55, "naming-conventions"]], "Not recommended": [[55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null]], "Good": [[55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null]], "File Names": [[55, "file-names"]], "Type Names": [[55, "type-names"]], "Function Names": [[55, "function-names"]], "Variable Names": [[55, "variable-names"]], "Class Member Names and Method Names": [[55, "class-member-names-and-method-names"]], "Constant Names": [[55, "constant-names"]], "Distributed and streaming computational schemes": [[55, "distributed-and-streaming-computational-schemes"]], "Enum Names": [[55, "enum-names"]], "Class Names": [[55, "class-names"]], "Declaration Order": [[55, "declaration-order"]], "Typedefs": [[55, "typedefs"]], "Defines": [[55, "defines"]], "Common definitions": [[55, "common-definitions"]], "Statements": [[55, "statements"]], "Comments": [[55, "comments"]], "Function Comments": [[55, "function-comments"]], "Variable Comments": [[55, "variable-comments"]], "Class Data Members Comments": [[55, "class-data-members-comments"]], "Function Declarations Comments": [[55, "function-declarations-comments"]], "Templates declaration": [[55, "templates-declaration"]], "Deprecated API": [[55, "deprecated-api"]], "Notes": [[55, "notes"]], "Programming guidelines": [[55, "programming-guidelines"]], "Local Variables": [[55, "local-variables"]], "Constants": [[55, "constants"]], "Static and Global Variables": [[55, "static-and-global-variables"]], "Undetermined order of construction and destruction": [[55, "undetermined-order-of-construction-and-destruction"]], "Static variables within a function scope": [[55, "static-variables-within-a-function-scope"]], "Usage of const": [[55, "usage-of-const"]], "Usage of const in Functions": [[55, "usage-of-const-in-functions"]], "Usage of const Methods": [[55, "usage-of-const-methods"]], "Usage of const and mutable Data Members": [[55, "usage-of-const-and-mutable-data-members"]], "Ownership (RAII \u2013 Resource Acquisition Is Initialization)": [[55, "ownership-raii-resource-acquisition-is-initialization"]], "Smart Pointers": [[55, "smart-pointers"]], "Passing parameters of non-primitive types by reference": [[55, "passing-parameters-of-non-primitive-types-by-reference"]], "Preprocessor Macros": [[55, "preprocessor-macros"]], "Namespaces": [[55, "namespaces"]], "Write short functions": [[55, "write-short-functions"]], "Function\u2019s arguments": [[55, "function-s-arguments"]], "Infix and postfix increment operators": [[55, "infix-and-postfix-increment-operators"]], "Assertions": [[55, "assertions"]], "Classes": [[55, "classes"]], "Initialization": [[55, "initialization"], [86, "initialization"], [86, "id3"], [98, "initialization"], [107, "initialization"]], "Initializers": [[55, "initializers"]], "Constructors": [[55, "constructors"]], "Constructors for non-trivial types": [[55, "constructors-for-non-trivial-types"]], "Clone all parts of an object": [[55, "clone-all-parts-of-an-object"]], "Assignment": [[55, "assignment"]], "New and delete": [[55, "new-and-delete"]], "Access Control": [[55, "access-control"]], "Template metaprogramming": [[55, "template-metaprogramming"]], "Hiding the implementation in Model classes": [[55, "hiding-the-implementation-in-model-classes"]], "SDL Requirements": [[55, "sdl-requirements"]], "Handling Primitive Data Types": [[55, "handling-primitive-data-types"]], "Code is performance-oriented": [[55, "code-is-performance-oriented"]], "Code is not performance-oriented": [[55, "code-is-not-performance-oriented"]], "Conversion is safe": [[55, "conversion-is-safe"]], "Conversion is not safe": [[55, "conversion-is-not-safe"]], "Examples of type conversion verification": [[55, "examples-of-type-conversion-verification"]], "Conversion from int to size_t": [[55, "conversion-from-int-to-size-t"]], "Conversion from size_t to int": [[55, "conversion-from-size-t-to-int"]], "Examples of safe conversions": [[55, "examples-of-safe-conversions"]], "Working with Pointers": [[55, "working-with-pointers"]], "Handle allocation errors": [[55, "handle-allocation-errors"]], "Handle errors": [[55, "handle-errors"]], "Do not access freed memory": [[55, "do-not-access-freed-memory"]], "Avoid null pointer de-reference errors": [[55, "avoid-null-pointer-de-reference-errors"]], "Avoid freeing the same buffer more than once": [[55, "avoid-freeing-the-same-buffer-more-than-once"]], "Do not take the size of a pointer to determine the size of the object it points to": [[55, "do-not-take-the-size-of-a-pointer-to-determine-the-size-of-the-object-it-points-to"]], "Set up a pointer to zero after freeing memory buffer": [[55, "set-up-a-pointer-to-zero-after-freeing-memory-buffer"]], "Working with Buffers": [[55, "working-with-buffers"]], "Use a special function for copying bytes between buffers": [[55, "use-a-special-function-for-copying-bytes-between-buffers"]], "Use a special function for memory allocation and zero-fill buffers": [[55, "use-a-special-function-for-memory-allocation-and-zero-fill-buffers"]], "Check buffer size": [[55, "check-buffer-size"]], "Handling exceptions": [[55, "handling-exceptions"]], "Handling null byte injection": [[55, "handling-null-byte-injection"]], "DAAL Interfaces": [[56, "daal-interfaces"]], "Association Rules": [[57, "association-rules"]], "Details": [[57, "details"], [58, "details"], [59, "details"], [60, "details"], [62, "details"], [63, "details"], [67, "details"], [70, "details"], [71, "details"], [72, "details"], [73, "details"], [75, "details"], [76, "details"], [77, "details"], [82, "details"], [84, "details"], [85, "details"], [86, "details"], [91, "details"], [92, "details"], [93, "details"], [98, "details"], [101, "details"], [107, "details"], [108, "details"], [110, "details"], [113, "details"], [115, "details"], [116, "details"], [120, "details"], [124, "details"], [127, "details"], [131, "details"], [132, "details"], [133, "details"], [139, "details"], [141, "details"], [144, "details"], [145, "details"], [146, "details"], [150, "details"], [151, "details"], [158, "details"], [159, "details"], [160, "details"], [161, "details"], [164, "details"], [171, "details"], [172, "details"], [173, "details"], [371, "details"], [374, "details"], [378, "details"]], "Batch Processing": [[57, "batch-processing"], [58, "batch-processing"], [59, "batch-processing"], [60, "batch-processing"], [62, "batch-processing"], [63, "batch-processing"], [64, "batch-processing"], [68, "batch-processing"], [71, "batch-processing"], [72, "batch-processing"], [73, "batch-processing"], [76, "batch-processing"], [77, "batch-processing"], [79, "batch-processing"], [80, "batch-processing"], [82, "batch-processing"], [84, "batch-processing"], [85, "batch-processing"], [86, "batch-processing"], [86, "id5"], [88, "batch-processing"], [89, "batch-processing"], [90, "batch-processing"], [91, "batch-processing"], [92, "batch-processing"], [93, "batch-processing"], [95, "batch-processing"], [99, "batch-processing"], [101, "batch-processing"], [102, "batch-processing"], [102, "id2"], [103, "batch-processing"], [105, "batch-processing"], [111, "batch-processing"], [114, "batch-processing"], [116, "batch-processing"], [117, "batch-processing"], [121, "batch-processing"], [126, "batch-processing"], [127, "batch-processing"], [144, "batch-processing"], [145, "batch-processing"], [146, "batch-processing"], [147, "batch-processing"], [150, "batch-processing"], [151, "batch-processing"], [153, "batch-processing"], [158, "batch-processing"], [159, "batch-processing"], [160, "batch-processing"], [161, "batch-processing"], [164, "batch-processing"], [165, "batch-processing"], [166, "batch-processing"], [168, "batch-processing"], [172, "batch-processing"], [173, "batch-processing"]], "Algorithm Input": [[57, "algorithm-input"], [63, "algorithm-input"], [64, "algorithm-input"], [66, "algorithm-input"], [68, "algorithm-input"], [79, "algorithm-input"], [80, "algorithm-input"], [86, "algorithm-input"], [86, "id6"], [102, "algorithm-input"], [102, "id3"], [103, "algorithm-input"], [117, "algorithm-input"], [119, "algorithm-input"], [126, "algorithm-input"], [127, "algorithm-input"], [131, "algorithm-input"], [132, "algorithm-input"], [133, "algorithm-input"], [134, "algorithm-input"], [137, "algorithm-input"], [138, "algorithm-input"], [140, "algorithm-input"], [141, "algorithm-input"], [144, "algorithm-input"], [145, "algorithm-input"], [146, "algorithm-input"], [147, "algorithm-input"], [149, "algorithm-input"], [151, "algorithm-input"], [153, "algorithm-input"], [155, "algorithm-input"], [158, "algorithm-input"], [160, "algorithm-input"], [161, "algorithm-input"], [164, "algorithm-input"], [165, "algorithm-input"], [169, "algorithm-input"], [192, "algorithm-input"], [192, "id2"]], "Algorithm Input for Association Rules (Batch Processing)": [[57, "id2"]], "Algorithm Parameters": [[57, "algorithm-parameters"], [63, "algorithm-parameters"], [64, "algorithm-parameters"], [65, "algorithm-parameters"], [66, "algorithm-parameters"], [68, "algorithm-parameters"], [79, "algorithm-parameters"], [80, "algorithm-parameters"], [86, "algorithm-parameters"], [86, "id7"], [96, "algorithm-parameters"], [97, "algorithm-parameters"], [102, "algorithm-parameters"], [102, "id4"], [103, "algorithm-parameters"], [104, "algorithm-parameters"], [117, "algorithm-parameters"], [118, "algorithm-parameters"], [119, "algorithm-parameters"], [122, "algorithm-parameters"], [126, "algorithm-parameters"], [127, "algorithm-parameters"], [131, "algorithm-parameters"], [132, "algorithm-parameters"], [133, "algorithm-parameters"], [134, "algorithm-parameters"], [137, "algorithm-parameters"], [138, "algorithm-parameters"], [139, "algorithm-parameters"], [140, "algorithm-parameters"], [141, "algorithm-parameters"], [142, "algorithm-parameters"], [144, "algorithm-parameters"], [145, "algorithm-parameters"], [146, "algorithm-parameters"], [147, "algorithm-parameters"], [148, "algorithm-parameters"], [149, "algorithm-parameters"], [151, "algorithm-parameters"], [153, "algorithm-parameters"], [155, "algorithm-parameters"], [156, "algorithm-parameters"], [158, "algorithm-parameters"], [160, "algorithm-parameters"], [161, "algorithm-parameters"], [164, "algorithm-parameters"], [165, "algorithm-parameters"], [169, "algorithm-parameters"], [170, "algorithm-parameters"], [192, "algorithm-parameters"]], "Algorithm Parameters for Association Rules (Batch Processing)": [[57, "id3"]], "Algorithm Output": [[57, "algorithm-output"], [63, "algorithm-output"], [64, "algorithm-output"], [66, "algorithm-output"], [68, "algorithm-output"], [69, "algorithm-output"], [69, "id1"], [69, "id2"], [69, "id3"], [69, "id4"], [69, "id5"], [69, "id6"], [69, "id7"], [69, "id8"], [69, "id9"], [69, "id10"], [69, "id11"], [69, "id12"], [79, "algorithm-output"], [80, "algorithm-output"], [86, "algorithm-output"], [86, "id8"], [102, "algorithm-output"], [102, "id5"], [103, "algorithm-output"], [117, "algorithm-output"], [119, "algorithm-output"], [126, "algorithm-output"], [127, "algorithm-output"], [131, "algorithm-output"], [132, "algorithm-output"], [133, "algorithm-output"], [134, "algorithm-output"], [137, "algorithm-output"], [138, "algorithm-output"], [140, "algorithm-output"], [141, "algorithm-output"], [144, "algorithm-output"], [145, "algorithm-output"], [146, "algorithm-output"], [147, "algorithm-output"], [149, "algorithm-output"], [151, "algorithm-output"], [153, "algorithm-output"], [155, "algorithm-output"], [158, "algorithm-output"], [160, "algorithm-output"], [161, "algorithm-output"], [164, "algorithm-output"], [165, "algorithm-output"], [169, "algorithm-output"], [192, "algorithm-output"]], "Algorithm Output for Association Rules (Batch Processing)": [[57, "id4"]], "Performance Considerations": [[57, "performance-considerations"], [63, "performance-considerations"], [67, "performance-considerations"], [71, "performance-considerations"], [79, "performance-considerations"], [80, "performance-considerations"], [82, "performance-considerations"], [86, "performance-considerations"], [98, "performance-considerations"], [107, "performance-considerations"], [111, "performance-considerations"], [124, "performance-considerations"], [144, "performance-considerations"], [150, "performance-considerations"], [152, "performance-considerations"], [171, "performance-considerations"], [172, "performance-considerations"]], "AdaBoost Classifier": [[58, "adaboost-classifier"]], "Training Stage": [[58, "training-stage"], [59, "training-stage"], [60, "training-stage"], [62, "training-stage"], [71, "training-stage"], [72, "training-stage"], [73, "training-stage"], [75, "training-stage"], [76, "training-stage"], [77, "training-stage"], [91, "training-stage"], [92, "training-stage"], [93, "training-stage"], [98, "training-stage"], [101, "training-stage"], [108, "training-stage"], [110, "training-stage"], [113, "training-stage"], [115, "training-stage"], [116, "training-stage"], [124, "training-stage"], [124, "id2"], [172, "training-stage"], [173, "training-stage"], [195, "training-stage"], [197, "training-stage"], [198, "training-stage"]], "Prediction Stage": [[58, "prediction-stage"], [59, "prediction-stage"], [60, "prediction-stage"], [62, "prediction-stage"], [71, "prediction-stage"], [72, "prediction-stage"], [73, "prediction-stage"], [75, "prediction-stage"], [76, "prediction-stage"], [77, "prediction-stage"], [91, "prediction-stage"], [92, "prediction-stage"], [93, "prediction-stage"], [98, "prediction-stage"], [101, "prediction-stage"], [108, "prediction-stage"], [110, "prediction-stage"], [113, "prediction-stage"], [115, "prediction-stage"], [116, "prediction-stage"], [124, "prediction-stage"], [124, "id3"], [172, "prediction-stage"], [173, "prediction-stage"], [195, "prediction-stage"], [197, "prediction-stage"], [198, "prediction-stage"]], "Training Parameters for AdaBoost Classifier (Batch Processing)": [[58, "id2"]], "Prediction": [[58, "prediction"], [59, "prediction"], [60, "prediction"], [62, "prediction"], [72, "prediction"], [73, "prediction"], [76, "prediction"], [77, "prediction"], [92, "prediction"], [93, "prediction"], [95, "prediction"], [101, "prediction"], [111, "prediction"], [114, "prediction"], [116, "prediction"], [121, "prediction"], [166, "prediction"], [168, "prediction"], [172, "prediction"], [173, "prediction"]], "Prediction Parameters for AdaBoost Classifier (Batch Processing)": [[58, "id3"]], "AdaBoost Multiclass Classifier": [[59, "adaboost-multiclass-classifier"]], "Training Parameters for AdaBoost Multiclass Classifier (Batch Processing)": [[59, "id5"]], "Output": [[59, "output"], [71, "output"], [72, "output"], [73, "output"], [99, "output"], [100, "output"], [100, "id2"], [101, "output"], [105, "output"], [116, "output"], [130, "output"], [173, "output"]], "Training Output for AdaBoost Multiclass Classifier (Batch Processing)": [[59, "id6"]], "Prediction Parameters for AdaBoost Multiclass Classifier (Batch Processing)": [[59, "id7"]], "BrownBoost Classifier": [[60, "brownboost-classifier"]], "Training Parameters for BrownBoost Classifier (Batch Processing)": [[60, "id3"]], "Prediction Parameters for BrownBoost Classifier (Batch Processing)": [[60, "id4"]], "Boosting": [[61, "boosting"]], "LogitBoost Classifier": [[62, "logitboost-classifier"]], "Training Parameters for LogitBoost Classifier (Batch Processing)": [[62, "id2"]], "Prediction Parameters for LogitBoost Classifier (Batch Processing)": [[62, "id3"]], "Cholesky Decomposition": [[63, "cholesky-decomposition"]], "Algorithm Input for Cholesky Decomposition (Batch Processing)": [[63, "id1"]], "Algorithm Parameters for Cholesky Decomposition (Batch Processing)": [[63, "id2"]], "Algorithm Output for Cholesky Decomposition (Batch Processing)": [[63, "id3"]], "Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Batch Processing)": [[64, "id1"]], "Algorithm Parameters for Correlation and Variance-Covariance Matrices Algorithm (Batch Processing)": [[64, "id2"]], "Algorithm Output for Correlation and Variance-Covariance Matrices Algorithm (Batch Processing)": [[64, "id3"]], "Distributed Processing": [[65, "distributed-processing"], [69, "distributed-processing"], [100, "distributed-processing"], [104, "distributed-processing"], [106, "distributed-processing"], [114, "distributed-processing"], [118, "distributed-processing"], [122, "distributed-processing"], [148, "distributed-processing"], [150, "distributed-processing"], [152, "distributed-processing"], [156, "distributed-processing"], [170, "distributed-processing"], [171, "distributed-processing"]], "Algorithm Parameters for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[65, "id1"]], "Step 1 - on Local Nodes": [[65, "step-1-on-local-nodes"], [69, "step-1-on-local-nodes"], [96, "step-1-on-local-nodes"], [97, "step-1-on-local-nodes"], [100, "step-1-on-local-nodes"], [104, "step-1-on-local-nodes"], [114, "step-1-on-local-nodes"], [118, "step-1-on-local-nodes"], [122, "step-1-on-local-nodes"], [148, "step-1-on-local-nodes"], [156, "step-1-on-local-nodes"], [170, "step-1-on-local-nodes"]], "Step 1: Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[65, "id2"]], "Step 1: Algorithm Output for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[65, "id3"]], "Step 2 - on Master Node": [[65, "step-2-on-master-node"], [97, "step-2-on-master-node"], [104, "step-2-on-master-node"], [114, "step-2-on-master-node"], [118, "step-2-on-master-node"], [122, "step-2-on-master-node"], [148, "step-2-on-master-node"], [156, "step-2-on-master-node"], [170, "step-2-on-master-node"]], "Step 2: Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[65, "id4"]], "Step 2: Algorithm Output for for Correlation and Variance-Covariance Matrices Algorithm (Distributed Processing)": [[65, "id5"]], "Online Processing": [[66, "online-processing"], [114, "online-processing"], [119, "online-processing"], [123, "online-processing"], [149, "online-processing"], [150, "online-processing"], [152, "online-processing"], [171, "online-processing"]], "Algorithm Input for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[66, "id1"]], "Algorithm Parameters for for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[66, "id2"]], "Partial Results": [[66, "partial-results"], [119, "partial-results"], [149, "partial-results"]], "Partial Results for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[66, "id3"]], "Algorithm Output for Correlation and Variance-Covariance Matrices Algorithm (Online Processing)": [[66, "id4"]], "Correlation and Variance-Covariance Matrices": [[67, "correlation-and-variance-covariance-matrices"], [67, "id1"]], "Computation": [[67, "computation"], [70, "computation"], [86, "computation"], [86, "id4"], [98, "computation"], [107, "computation"], [107, "id6"], [120, "computation"], [124, "computation"], [130, "computation"], [131, "computation"], [132, "computation"], [133, "computation"], [134, "computation"], [137, "computation"], [138, "computation"], [139, "computation"], [140, "computation"], [141, "computation"], [142, "computation"], [150, "computation"], [154, "computation"], [171, "computation"], [334, "computation"]], "Algorithm Parameters for DBSCAN (Batch Processing)": [[68, "id1"]], "Algorithm Input for DBSCAN (Batch Processing)": [[68, "id2"]], "Algorithm Output for DBSCAN (Batch Processing)": [[68, "id3"]], "Algorithm Parameters for DBSCAN (Distributed Processing)": [[69, "id13"], [69, "id16"], [69, "id19"], [69, "id22"], [69, "id34"], [69, "id41"], [69, "id44"], [69, "id47"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 1)": [[69, "id14"]], "Partial Results for DBSCAN (Distributed Processing, Step 1)": [[69, "id15"]], "Step 2 - on Local Nodes": [[69, "step-2-on-local-nodes"], [100, "step-2-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 2)": [[69, "id17"]], "Partial Results for DBSCAN (Distributed Processing, Step 2)": [[69, "id18"]], "Step 3 - on Local Nodes": [[69, "step-3-on-local-nodes"], [97, "step-3-on-local-nodes"], [156, "step-3-on-local-nodes"], [170, "step-3-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 3)": [[69, "id20"]], "Partial Results for DBSCAN (Distributed Processing, Step 3)": [[69, "id21"]], "Step 4 - on Local Nodes": [[69, "step-4-on-local-nodes"], [97, "step-4-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 4)": [[69, "id23"]], "Partial Results for DBSCAN (Distributed Processing, Step 4)": [[69, "id24"]], "Step 5 - on Local Nodes": [[69, "step-5-on-local-nodes"]], "Algorithm Parameters for DBSCAN (Distributed Processing, Step 5)": [[69, "id25"], [69, "id31"], [69, "id37"], [69, "id50"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 5)": [[69, "id26"]], "Partial Results for DBSCAN (Distributed Processing, Step 5)": [[69, "id27"]], "Step 6 - on Local Nodes": [[69, "step-6-on-local-nodes"]], "Algorithm Parameters for DBSCAN (Distributed Processing, Step 6)": [[69, "id28"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 6)": [[69, "id29"]], "Partial Results for DBSCAN (Distributed Processing, Step 6)": [[69, "id30"]], "Step 7 - on Master Node": [[69, "step-7-on-master-node"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 7)": [[69, "id32"]], "Partial Results for DBSCAN (Distributed Processing, Step 7)": [[69, "id33"]], "Step 8 - on Local Nodes": [[69, "step-8-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 8)": [[69, "id35"]], "Partial Results for DBSCAN (Distributed Processing, Step 8)": [[69, "id36"]], "Step 9 - on Master Node": [[69, "step-9-on-master-node"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 9)": [[69, "id38"]], "Algorithm Output for DBSCAN (Distributed Processing, Step 9)": [[69, "id39"]], "Partial Results for DBSCAN (Distributed Processing, Step 9)": [[69, "id40"]], "Step 10 - on Local Nodes": [[69, "step-10-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 10)": [[69, "id42"]], "Partial Results for DBSCAN (Distributed Processing, Step 10)": [[69, "id43"]], "Step 11 - on Local Nodes": [[69, "step-11-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 11)": [[69, "id45"]], "Partial Results for DBSCAN (Distributed Processing, Step 11)": [[69, "id46"]], "Step 12 - on Local Nodes": [[69, "step-12-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 12)": [[69, "id48"]], "Partial Results for DBSCAN (Distributed Processing, Step 12)": [[69, "id49"]], "Step 13 - on Local Nodes": [[69, "step-13-on-local-nodes"]], "Algorithm Input for DBSCAN (Distributed Processing, Step 13)": [[69, "id51"]], "Algorithm Output for DBSCAN (Distributed Processing, Step 13)": [[69, "id52"]], "Partial Results for DBSCAN (Distributed Processing, Step 13)": [[69, "id53"]], "Density-Based Spatial Clustering of Applications with Noise": [[70, "density-based-spatial-clustering-of-applications-with-noise"]], "Decision Forest": [[71, "decision-forest"], [74, "decision-forest"]], "Inexact Histogram Computation Method": [[71, "inexact-histogram-computation-method"]], "Split Criteria": [[71, "split-criteria"], [75, "split-criteria"], [76, "split-criteria"], [342, "split-criteria"]], "Termination Criteria": [[71, "termination-criteria"], [342, "termination-criteria"]], "Tree Building Strategies": [[71, "tree-building-strategies"], [342, "tree-building-strategies"]], "Depth-first Strategy": [[71, "depth-first-strategy"], [342, "depth-first-strategy"]], "Best-first Strategy": [[71, "best-first-strategy"], [342, "best-first-strategy"]], "Random Numbers Generation": [[71, "random-numbers-generation"]], "Additional Characteristics Calculated by the Decision Forest": [[71, "additional-characteristics-calculated-by-the-decision-forest"], [342, "additional-characteristics-calculated-by-the-decision-forest"]], "Out-of-bag Error": [[71, "out-of-bag-error"], [72, "out-of-bag-error"], [73, "out-of-bag-error"], [342, "out-of-bag-error"]], "Variable Importance": [[71, "variable-importance"], [72, "variable-importance"], [342, "variable-importance"]], "Training Parameters for Decision Forest (Batch Processing)": [[71, "id4"]], "Training Output for Decision Forest (Batch Processing)": [[71, "id5"]], "Classification Decision Forest": [[72, "classification-decision-forest"]], "Decision Forest Classification: impurity calculations": [[72, "id3"]], "Usage of Training Alternative": [[72, "usage-of-training-alternative"], [92, "usage-of-training-alternative"], [93, "usage-of-training-alternative"], [113, "usage-of-training-alternative"], [116, "usage-of-training-alternative"], [172, "usage-of-training-alternative"], [173, "usage-of-training-alternative"]], "Training Parameters for Decision Forest Classification (Batch Processing)": [[72, "id4"]], "Prediction Parameters for Decision Forest Classification (Batch Processing)": [[72, "id5"]], "Regression Decision Forest": [[73, "regression-decision-forest"]], "Decision Forest Regression: impurity calculations": [[73, "id2"]], "Prediction Parameters for Decision Forest Regression (Batch Processing)": [[73, "id3"], [77, "id3"]], "Decision Tree": [[75, "decision-tree"], [365, "decision-tree"]], "Types of Tests": [[75, "types-of-tests"]], "Post-pruning": [[75, "post-pruning"]], "Classification Decision Tree": [[76, "classification-decision-tree"]], "Training Input for Decision Tree Classification (Batch Processing)": [[76, "id4"]], "Training Parameters for Decision Tree Classification (Batch Processing)": [[76, "id5"]], "Prediction Parameters for Decision Tree Classification (Batch Processing)": [[76, "id6"]], "Regression Decision Tree": [[77, "regression-decision-tree"]], "Split Criterion": [[77, "split-criterion"]], "Training Parameters for Decision Forest Regression (Batch Processing)": [[77, "id2"]], "Decision Trees": [[78, "decision-trees"]], "Correlation Distance Matrix": [[79, "correlation-distance-matrix"]], "Algorithm Input for Correlation Distance Matrix (Batch Processing)": [[79, "id1"]], "Algorithm Parameters for Correlation Distance Matrix (Batch Processing)": [[79, "id2"]], "Algorithm Output for Correlation Distance Matrix (Batch Processing)": [[79, "id3"]], "Cosine Distance Matrix": [[80, "cosine-distance-matrix"]], "Algorithm Input for Cosine Distance Matrix (Batch Processing)": [[80, "id1"]], "Algorithm Parameters for Cosine Distance Matrix (Batch Processing)": [[80, "id2"]], "Algorithm Output for Cosine Distance Matrix (Batch Processing)": [[80, "id3"]], "Distance Matrix": [[81, "distance-matrix"]], "Bernoulli Distribution": [[82, "bernoulli-distribution"]], "Algorithm Parameters for Bernoulli Distribution (Batch Processing)": [[82, "id1"]], "Distributions": [[83, "distributions"]], "Algorithm Input for Distributions": [[83, "id2"]], "Algorithm Parameters for Distributions": [[83, "id3"]], "Algorithm Output for Distributions": [[83, "id4"]], "Normal Distribution": [[84, "normal-distribution"]], "Algorithm Parameters for Normal Distribution (Batch Processing)": [[84, "id1"]], "Uniform Distribution": [[85, "uniform-distribution"]], "Algorithm Parameters for Uniform Distribution (Batch Processing)": [[85, "id1"]], "Expectation-Maximization": [[86, "expectation-maximization"]], "Expectation-Maximization (EM) Algorithm in the General Form": [[86, "expectation-maximization-em-algorithm-in-the-general-form"]], "EM algorithm for the Gaussian Mixture Model": [[86, "em-algorithm-for-the-gaussian-mixture-model"]], "Algorithm Input for Expectation-Maximization Initialization (Batch Processing)": [[86, "id9"]], "Algorithm Parameters for Expectation-Maximization Initialization (Batch Processing)": [[86, "id10"]], "Algorithm Output for Expectation-Maximization Initialization (Batch Processing)": [[86, "id11"]], "Algorithm Input for Expectation-Maximization Computation (Batch Processing)": [[86, "id12"]], "Algorithm Parameters for Expectation-Maximization Computation (Batch Processing)": [[86, "id13"]], "Algorithm Output for Expectation-Maximization Computation (Batch Processing)": [[86, "id14"]], "Engines": [[87, "engines"]], "Algorithm Input for Engines": [[87, "id1"]], "Algorithm Output for Engines": [[87, "id2"]], "mcg59": [[88, "mcg59"]], "Algorithm Parameters for mcg58 engine (Batch Processing)": [[88, "id1"]], "mt19937": [[89, "mt19937"]], "Algorithm Parameters for mt19937 engine (Batch Processing)": [[89, "id2"]], "mt2203": [[90, "mt2203"]], "Algorithm Parameters for mt2203 engine (Batch Processing)": [[90, "id2"]], "Gradient Boosted Trees": [[91, "gradient-boosted-trees"], [94, "gradient-boosted-trees"]], "Split Calculation Mode": [[91, "split-calculation-mode"]], "Training Parameters for Gradient Boosted Trees (Batch Processing)": [[91, "id2"]], "Classification Gradient Boosted Trees": [[92, "classification-gradient-boosted-trees"]], "Training Parameters for Gradient Boosted Trees Classification (Batch Processing)": [[92, "id2"]], "Prediction Parameters for Gradient Boosted Trees Classification (Batch Processing)": [[92, "id3"]], "Regression Gradient Boosted Trees": [[93, "regression-gradient-boosted-trees"]], "Training Parameters for Gradient Boosted Trees Regression (Batch Processing)": [[93, "id2"]], "Prediction Parameters for Gradient Boosted Trees Regression (Batch Processing)": [[93, "id3"]], "Training Parameters for Implicit Alternating Least Squares Computation (Batch Processing)": [[95, "id1"]], "Prediction Parameters for Implicit Alternating Least Squares Computation (Batch Processing)": [[95, "id2"]], "Distributed Processing: Prediction of Ratings": [[96, "distributed-processing-prediction-of-ratings"]], "Prediction Parameters for Implicit Alternating Least Squares Computation (Distributed Processing)": [[96, "id1"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 1)": [[96, "id3"], [97, "id5"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 1)": [[96, "id4"], [97, "id6"]], "Distributed Processing: Training": [[97, "distributed-processing-training"]], "Training Parameters for Implicit Alternating Least Squares Computation (Distributed Processing)": [[97, "id1"]], "Computation Process": [[97, "computation-process"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 2)": [[97, "id8"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 2)": [[97, "id9"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 3)": [[97, "id11"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 3)": [[97, "id12"]], "Input for Implicit Alternating Least Squares Computation (Distributed Processing, Step 4)": [[97, "id14"]], "Output for Implicit Alternating Least Squares Computation (Distributed Processing, Step 4)": [[97, "id15"]], "Implicit Alternating Least Squares": [[98, "implicit-alternating-least-squares"]], "Initialization Stage": [[98, "initialization-stage"]], "Input for Implicit Alternating Least Squares Initialization (Batch Processing)": [[99, "id1"]], "Parameters": [[99, "parameters"], [100, "parameters"], [105, "parameters"], [106, "parameters"], [130, "parameters"]], "Parameters for Implicit Alternating Least Squares Initialization (Batch Processing)": [[99, "id2"]], "Output for Implicit Alternating Least Squares Initialization (Batch Processing)": [[99, "id3"]], "Parameters for Implicit Alternating Least Squares Initialization (Distributed Processing)": [[100, "id3"]], "Input for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 1)": [[100, "id6"]], "Output for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 1)": [[100, "id7"]], "Input for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 3)": [[100, "id9"]], "Output for Implicit Alternating Least Squares Initialization (Distributed Processing, Step 2)": [[100, "id10"]], "k-Nearest Neighbors (kNN) Classifier": [[101, "k-nearest-neighbors-knn-classifier"]], "K-D tree": [[101, "k-d-tree"]], "Brute Force": [[101, "brute-force"]], "Training using K-D Tree": [[101, "training-using-k-d-tree"]], "Training using Brute Force": [[101, "training-using-brute-force"]], "Prediction using K-D Tree": [[101, "prediction-using-k-d-tree"]], "Prediction using Brute Force": [[101, "prediction-using-brute-force"]], "Training Parameters for k-Nearest Neighbors Classifier (Batch Processing)": [[101, "id7"]], "Prediction Parameters for k-Nearest Neighbors Classifier (Batch Processing)": [[101, "id8"]], "Output for k-Nearest Neighbors Classifier (Batch Processing)": [[101, "id9"]], "Linear Kernel": [[102, "linear-kernel"]], "Problem Statement": [[102, "problem-statement"], [102, "id1"], [126, "problem-statement"]], "Algorithm Input for Linear Kernel (Batch Processing)": [[102, "id7"]], "Algorithm Parameters for Linear Kernel (Batch Processing)": [[102, "id8"]], "Algorithm Output for Linear Kernel (Batch Processing)": [[102, "id9"]], "Radial Basis Function Kernel": [[102, "radial-basis-function-kernel"]], "Algorithm Input for Radial Basis Function Kernel (Batch Processing)": [[102, "id10"]], "Algorithm Parameters for Radial Basis Function Kernel (Batch Processing)": [[102, "id11"]], "Algorithm Output for Radial Basis Function Kernel (Batch Processing)": [[102, "id12"]], "Algorithm Input for K-Means Computation (Batch Processing)": [[103, "id1"]], "Algorithm Parameters for K-Means Computation (Batch Processing)": [[103, "id2"]], "Algorithm Output for K-Means Computation (Batch Processing)": [[103, "id3"]], "Algorithm Parameters for K-Means Computation (Distributed Processing)": [[104, "id1"]], "Input for K-Means Computation (Distributed Processing, Step 1)": [[104, "id3"]], "Partial Results for K-Means Computation (Distributed Processing, Step 1)": [[104, "id4"]], "Output for K-Means Computation (Distributed Processing, Step 1)": [[104, "id5"]], "Input for K-Means Computation (Distributed Processing, Step 2)": [[104, "id7"]], "Output for K-Means Computation (Distributed Processing, Step 2)": [[104, "id8"]], "Algorithm Input for K-Means Initialization (Batch Processing)": [[105, "id6"]], "Algorithm Parameters for K-Means Initialization (Batch Processing)": [[105, "id7"]], "Algorithm Output for K-Means Initialization (Batch Processing)": [[105, "id8"]], "Algorithm Parameters for K-Means Initialization (Distributed Processing)": [[106, "id5"]], "Step 1 - on Local Nodes (deterministic, random, plusPlus, and parallelPlus methods)": [[106, "step-1-on-local-nodes-deterministic-random-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 1)": [[106, "id10"]], "Output for K-Means Initialization (Distributed Processing, Step 1)": [[106, "id11"]], "Step 2 - on Master Node (deterministic and random methods)": [[106, "step-2-on-master-node-deterministic-and-random-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 2 on Master Node)": [[106, "id12"]], "Output for K-Means Initialization (Distributed Processing, Step 2 on Master Node)": [[106, "id13"]], "Step 2 - on Local Nodes (plusPlus and parallelPlus methods)": [[106, "step-2-on-local-nodes-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 1 on Local Nodes)": [[106, "id16"]], "Output for K-Means Initialization (Distributed Processing, Step 2 on Local Nodes)": [[106, "id17"]], "Step 3 - on Master Node (plusPlus and parallelPlus methods)": [[106, "step-3-on-master-node-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 3)": [[106, "id20"]], "Output for K-Means Initialization (Distributed Processing, Step 3)": [[106, "id21"]], "Step 4 - on Local Nodes (plusPlus and parallelPlus methods)": [[106, "step-4-on-local-nodes-plusplus-and-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 4)": [[106, "id24"]], "Output for K-Means Initialization (Distributed Processing, Step 4)": [[106, "id25"]], "Step 5 - on Master Node (parallelPlus methods)": [[106, "step-5-on-master-node-parallelplus-methods"]], "Input for K-Means Initialization (Distributed Processing, Step 5)": [[106, "id27"]], "Output for K-Means Initialization (Distributed Processing, Step 5)": [[106, "id28"]], "K-Means Clustering": [[107, "k-means-clustering"]], "Centroid Initialization": [[107, "centroid-initialization"]], "Elastic Net": [[108, "elastic-net"]], "LASSO and Elastic Net Regressions": [[109, "lasso-and-elastic-net-regressions"]], "Least Absolute Shrinkage and Selection Operator (LASSO)": [[110, "least-absolute-shrinkage-and-selection-operator-lasso"]], "LASSO and Elastic Net Computation": [[111, "lasso-and-elastic-net-computation"]], "Training Input for LASSO and Elastic Net (Batch Processing)": [[111, "id3"]], "Training Parameters for LASSO (Batch Processing)": [[111, "id4"]], "Training Parameters for Elastic Net (Batch Processing)": [[111, "id5"]], "Training Output for LASSO and Elastic Net (Batch Processing)": [[111, "id6"]], "Prediction Parameters for LASSO and Elastic Net (Batch Processing)": [[111, "id7"]], "Linear and Ridge Regressions": [[112, "linear-and-ridge-regressions"]], "Linear Regression": [[113, "linear-regression"]], "Linear and Ridge Regressions Computation": [[114, "linear-and-ridge-regressions-computation"]], "Training Parameters for Linear Regression (Batch Processing)": [[114, "id3"]], "Training Parameters for Ridge Regression (Batch Processing)": [[114, "id4"]], "Prediction Parameters for Linear and Ridge Regression (Batch Processing)": [[114, "id5"]], "Training Input for Linear and Ridge Regression (Online Processing)": [[114, "id6"]], "Training Parameters for Linear Regression (Online Processing)": [[114, "id7"]], "Training Parameters for Ridge Regression (Online Processing)": [[114, "id8"]], "Algorithm parameters": [[114, "algorithm-parameters"]], "Training Parameters for Linear Regression (Distributed Processing)": [[114, "id9"]], "Training Parameters for Ridge Regression (Distributed Processing)": [[114, "id10"]], "Training Input for Linear and Ridge Regression (Distributed Processing, Step 1)": [[114, "id12"]], "Training Output for Linear and Ridge Regression (Distributed Processing, Step 1)": [[114, "id13"]], "Training Input for Linear and Ridge Regression (Distributed Processing, Step 2)": [[114, "id15"]], "Training Output for Linear and Ridge Regression (Distributed Processing, Step 2)": [[114, "id16"]], "Ridge Regression": [[115, "ridge-regression"]], "Logistic Regression": [[116, "logistic-regression"]], "Training Parameters for Logistic Regression (Batch Processing)": [[116, "id6"]], "Prediction Parameters for Logistic Regression (Batch Processing)": [[116, "id7"]], "Prediction Output for Logistic Regression (Batch Processing)": [[116, "id8"]], "Algorithm Input for Low Order Moments (Batch Processing)": [[117, "id1"]], "Algorithm Parameters for Low Order Moments (Batch Processing)": [[117, "id2"]], "Algorithm Output for Low Order Moments (Batch Processing)": [[117, "id3"]], "Algorithm Parameters for Low Order Moments (Distributed Processing)": [[118, "id1"]], "Algorithm Input for Low Order Moments (Distributed Processing, Step 1)": [[118, "id2"]], "Algorithm Output for Low Order Moments (Distributed Processing, Step 1)": [[118, "id3"]], "Partial Characteristics for Low Order Moments (Distributed Processing, Step 1)": [[118, "id4"]], "Algorithm Input for Low Order Moments (Distributed Processing, Step 2)": [[118, "id5"]], "Algorithm Output for Low Order Moments (Distributed Processing, Step 2)": [[118, "id6"]], "Algorithm Input for Low Order Moments (Online Processing)": [[119, "id1"]], "Algorithm Parameters for Low Order Moments (Online Processing)": [[119, "id2"]], "Partial Results for Low Order Moments (Online Processing)": [[119, "id3"]], "Partial Characteristics for Low Order Moments (Online Processing)": [[119, "id4"]], "Algorithm Output for Low Order Moments (Online Processing)": [[119, "id5"]], "Moments of Low Order": [[120, "moments-of-low-order"], [120, "id1"]], "Training Parameters for Na\u00efve Bayes Classifier (Batch Processing)": [[121, "id1"]], "Prediction Parameters for Na\u00efve Bayes Classifier (Batch Processing)": [[121, "id2"]], "Training Parameters for Na\u00efve Bayes Classifier (Distributed Processing)": [[122, "id1"]], "Training Input for Na\u00efve Bayes Classifier (Distributed Processing, Step 1)": [[122, "id3"]], "Training Output for Na\u00efve Bayes Classifier (Distributed Processing, Step 1)": [[122, "id4"]], "Training Input for Na\u00efve Bayes Classifier (Distributed Processing, Step 2)": [[122, "id6"]], "Training Output for Na\u00efve Bayes Classifier (Distributed Processing, Step 2)": [[122, "id7"]], "Training Input for Na\u00efve Bayes Classifier (Online Processing)": [[123, "id1"]], "Training Parameters for Na\u00efve Bayes Classifier (Online Processing)": [[123, "id2"]], "Na\u00efve Bayes Classifier": [[124, "naive-bayes-classifier"]], "Normalization": [[125, "normalization"]], "Min-max": [[126, "min-max"]], "Algorithm Input for Min-max (Batch Processing)": [[126, "id1"]], "Algorithm Parameters for Min-max (Batch Processing)": [[126, "id2"]], "Algorithm Output for Min-max (Batch Processing)": [[126, "id3"]], "Z-score": [[127, "z-score"]], "Algorithm Input for Z-score (Batch Processing)": [[127, "id1"]], "Algorithm Parameters for Z-score (Batch Processing)": [[127, "id2"]], "Algorithm Output for Z-score (Batch Processing)": [[127, "id3"]], "Iterative Solver": [[128, "iterative-solver"]], "Iterative solvers": [[128, null]], "Objective Function": [[129, "objective-function"]], "Objective functions": [[129, null]], "Input for Objective Function Computation": [[130, "id1"]], "Parameters for Objective Function Computation": [[130, "id2"]], "Output for Objective Function Computation": [[130, "id3"]], "Cross-entropy Loss": [[131, "cross-entropy-loss"]], "Algorithm Input for Cross-entropy Loss Computation": [[131, "id3"]], "Algorithm Parameters for Cross-entropy Loss Computation": [[131, "id4"]], "Algorithm Input for Logitic Loss Computation": [[132, "id3"]], "Algorithm Parameters for Logitic Loss Computation": [[132, "id4"]], "Mean Squared Error Algorithm": [[133, "mean-squared-error-algorithm"]], "Algorithm Input for MSE Computation": [[133, "id1"]], "Optional Algorithm Input": [[133, "optional-algorithm-input"]], "Optional Algorithm Input for MSE Computation": [[133, "id2"]], "Algorithm Parameters for MSE Computation": [[133, "id3"]], "Sum of Functions": [[134, "sum-of-functions"]], "Algorithm Input for Sum of Functions Computation": [[134, "id1"]], "Algorithm Parameters for Sum of Functions Computation": [[134, "id2"]], "Objective Function with Precomputed Characteristics Algorithm": [[135, "objective-function-with-precomputed-characteristics-algorithm"]], "Optimization Solvers": [[136, "optimization-solvers"], [174, null]], "Adaptive Subgradient Method": [[137, "adaptive-subgradient-method"]], "Algorithm Input for Adaptive Subgradient Method Computation": [[137, "id2"]], "Algorithm Parameters for Adaptive Subgradient Method Computation": [[137, "id3"]], "Algorithm Output for Adaptive Subgradient Method Computation": [[137, "id4"]], "Algorithm Input for Iterative Solver Computation": [[138, "id1"]], "Algorithm Parameters for Iterative Solver Computation": [[138, "id2"]], "Algorithm Output for Iterative Solver Computation": [[138, "id3"]], "Coordinate Descent Algorithm": [[139, "coordinate-descent-algorithm"]], "Algorithm Parameters for Coordinate Descent Computation": [[139, "id2"]], "Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Algorithm": [[140, "limited-memory-broyden-fletcher-goldfarb-shanno-algorithm"]], "Transformation": [[140, "transformation"]], "Intrinsic Parameters": [[140, "intrinsic-parameters"]], "Hessian Update Algorithm": [[140, "hessian-update-algorithm"]], "Algorithm Input for Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Computation": [[140, "id3"]], "Algorithm Parameters for Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Computation": [[140, "id4"]], "Algorithm Output for Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Computation": [[140, "id5"]], "Stochastic Average Gradient Accelerated Method": [[141, "stochastic-average-gradient-accelerated-method"]], "Algorithm Input for Stochastic Average Gradient Accelerated Method Computation": [[141, "id2"]], "Algorithm Parameters for Stochastic Average Gradient Accelerated Method Computation": [[141, "id3"]], "Algorithm Output for Stochastic Average Gradient Accelerated Method Computation": [[141, "id4"]], "Stochastic Gradient Descent Algorithm": [[142, "stochastic-gradient-descent-algorithm"]], "Computation methods": [[142, "computation-methods"]], "Mini-batch method": [[142, "mini-batch-method"]], "Default method": [[142, "default-method"]], "Momentum method": [[142, "momentum-method"]], "Algorithm Parameters for Stochastic Gradient Descent Algorithm Computation": [[142, "id3"]], "Outlier Detection": [[143, "outlier-detection"]], "Multivariate Outlier Detection": [[144, "multivariate-outlier-detection"]], "Algorithm Input for Multivariate Outlier Detection (Batch Processing)": [[144, "id2"]], "Default Values for Algorithm Input of Multivariate Outlier Detection (Batch Processing)": [[144, "id3"]], "Algorithm Parameters for Multivariate Outlier Detection (Batch Processing)": [[144, "id4"]], "Algorithm Output for Multivariate Outlier Detection (Batch Processing)": [[144, "id5"]], "Multivariate BACON Outlier Detection": [[145, "multivariate-bacon-outlier-detection"]], "Algorithm Input for Multivariate BACON Outlier Detection (Batch Processing)": [[145, "id2"]], "Algorithm Parameters for Multivariate BACON Outlier Detection (Batch Processing)": [[145, "id3"]], "Algorithm Output for Multivariate BACON Outlier Detection (Batch Processing)": [[145, "id4"]], "Univariate Outlier Detection": [[146, "univariate-outlier-detection"]], "Algorithm Input for Univariate Outlier Detection (Batch Processing)": [[146, "id2"]], "Default Values for Algorithm Input of Univariate Outlier Detection (Batch Processing)": [[146, "id3"]], "Algorithm Parameters for Univariate Outlier Detection (Batch Processing)": [[146, "id4"]], "Algorithm Output for Univariate Outlier Detection (Batch Processing)": [[146, "id5"]], "Algorithm Input for Principal Component Analysis (Batch Processing)": [[147, "id1"]], "Algorithm Parameters for Principal Component Analysis (Batch Processing)": [[147, "id2"]], "Algorithm Output for Principal Component Analysis (Batch Processing)": [[147, "id3"]], "Algorithm Parameters for Principal Component Analysis (Distributed Processing)": [[148, "id1"]], "Input for Principal Component Analysis using Correlation method (Distributed Processing, Step 1)": [[148, "id2"]], "Output for Principal Component Analysis using Correlation method (Distributed Processing, Step 1)": [[148, "id3"]], "Input for Principal Component Analysis using SVD method (Distributed Processing, Step 1)": [[148, "id4"]], "Output for Principal Component Analysis using SVD method (Distributed Processing, Step 1)": [[148, "id5"]], "Input for Principal Component Analysis using Correlation method (Distributed Processing, Step 2)": [[148, "id6"]], "Output for Principal Component Analysis using Correlation method (Distributed Processing, Step 2)": [[148, "id7"]], "Input for Principal Component Analysis using SVD method (Distributed Processing, Step 2)": [[148, "id8"]], "Output for Principal Component Analysis using SVD method (Distributed Processing, Step 2)": [[148, "id9"]], "Algorithm Input for Principal Component Analysis (Online Processing)": [[149, "id1"]], "Algorithm Parameters for Principal Component Analysis (Online Processing)": [[149, "id2"]], "Partial Results for Principal Component Analysis using Correlation method (Online Processing)": [[149, "id3"]], "Partial Results for Principal Component Analysis using SVD method (Online Processing)": [[149, "id4"]], "Algorithm Output for Principal Component Analysis (Online Processing)": [[149, "id5"]], "Principal Component Analysis": [[150, "principal-component-analysis"]], "Principal Components Analysis Transform": [[151, "principal-components-analysis-transform"]], "Algorithm Input for Principal Components Analysis Transform (Batch Processing)": [[151, "id1"]], "Algorithm Parameters for Principal Components Analysis Transform (Batch Processing)": [[151, "id2"]], "Algorithm Output for Principal Components Analysis Transform (Batch Processing)": [[151, "id3"]], "QR Decomposition": [[152, "qr-decomposition"]], "Pivoted QR Decomposition": [[153, "pivoted-qr-decomposition"]], "Algorithm Input for Pivoted QR Decomposition (Batch Processing)": [[153, "id1"]], "Algorithm Parameters for Pivoted QR Decomposition (Batch Processing)": [[153, "id2"]], "Algorithm Output for Pivoted QR Decomposition (Batch Processing)": [[153, "id3"]], "QR Decomposition without Pivoting": [[154, "qr-decomposition-without-pivoting"]], "Batch and Online Processing": [[155, "batch-and-online-processing"], [169, "batch-and-online-processing"]], "Algorithm Input for QR Decomposition without Pivoting (Batch and Online Processing)": [[155, "id1"]], "Algorithm Parameters for QR Decomposition without Pivoting (Batch and Online Processing)": [[155, "id2"]], "Algorithm Output for QR Decomposition without Pivoting (Batch and Online Processing)": [[155, "id3"]], "Algorithm Parameters for QR Decomposition without Pivoting (Distributed Processing)": [[156, "id1"]], "Input for QR Decomposition without Pivoting (Distributed Processing, Step 1)": [[156, "id3"]], "Partial Results for QR Decomposition without Pivoting (Distributed Processing, Step 1)": [[156, "id4"]], "Input for QR Decomposition without Pivoting (Distributed Processing, Step 2)": [[156, "id6"]], "Partial Results for QR Decomposition without Pivoting (Distributed Processing, Step 2)": [[156, "id7"]], "Output for QR Decomposition without Pivoting (Distributed Processing, Step 2)": [[156, "id8"]], "Input for QR Decomposition without Pivoting (Distributed Processing, Step 3)": [[156, "id10"]], "Output for QR Decomposition without Pivoting (Distributed Processing, Step 3)": [[156, "id11"]], "Working with the Default Metric Set": [[157, "working-with-the-default-metric-set"]], "Quality Metrics for Binary Classification Algorithms": [[158, "quality-metrics-for-binary-classification-algorithms"]], "Notations for Quality Metrics for Binary Classification Algorithms": [[158, "id2"]], "Definitions of Quality Metrics for Binary Classification Algorithms": [[158, "id3"]], "Confusion Matrix for Binary Classification Algorithms": [[158, "id4"]], "Algorithm Input for Quality Metrics for Binary Classification (Batch Processing)": [[158, "id5"]], "Algorithm Parameters for Quality Metrics for Binary Classification (Batch Processing)": [[158, "id6"]], "Algorithm Output for Quality Metrics for Binary Classification (Batch Processing)": [[158, "id7"]], "Quality Metrics for Linear Regression": [[159, "quality-metrics-for-linear-regression"]], "Testing Insignificance of a Single Beta": [[159, "testing-insignificance-of-a-single-beta"], [159, "qm-lin-reg-single-beta-batch"]], "Quality Metrics for Testing Insignificance of a Single Beta": [[159, "id4"]], "Testing Insignificance of a Group of Betas": [[159, "testing-insignificance-of-a-group-of-betas"], [159, "qm-lin-reg-group-of-betas-batch"]], "Quality Metrics for Testing Insignificance of a Group of Betas": [[159, "id5"]], "Algorithm Input for Testing Insignificance of a Single Beta in Linear Regression (Batch Processing)": [[159, "id6"]], "Algorithm Parameters for Testing Insignificance of a Single Beta in Linear Regression (Batch Processing)": [[159, "id7"]], "Algorithm Output for Testing Insignificance of a Single Beta in Linear Regression (Batch Processing)": [[159, "id8"]], "Algorithm Input for Testing Insignificance of a Group of Betas in Linear Regression (Batch Processing)": [[159, "id9"]], "Algorithm Parameters for Testing Insignificance of a Group of Betas in Linear Regression (Batch Processing)": [[159, "id10"]], "Algorithm Output for Testing Insignificance of a Group of Betas in Linear Regression (Batch Processing)": [[159, "id11"]], "Quality Metrics for Multi-class Classification Algorithms": [[160, "quality-metrics-for-multi-class-classification-algorithms"]], "Notations for Quality Metrics for Multi-class Classification Algorithms": [[160, "id2"]], "Definitions of Quality Metrics for Multi-class Classification Algorithms": [[160, "id3"]], "Confusion Matrix for Multi-class Classification Algorithms": [[160, "id4"]], "Algorithm Input for Quality Metrics for Multi-class Classification Algorithms (Batch Processing)": [[160, "id5"]], "Algorithm Parameters for Quality Metrics for Multi-class Classification Algorithms (Batch Processing)": [[160, "id6"]], "Algorithm Output for Quality Metrics for Multi-class Classification Algorithms (Batch Processing)": [[160, "id7"]], "Quality Metrics for Principal Components Analysis": [[161, "quality-metrics-for-principal-components-analysis"], [161, "id1"]], "Algorithm Input for Quality Metrics for Principal Components Analysis (Batch Processing)": [[161, "id2"]], "Algorithm Parameters for Quality Metrics for Principal Components Analysis (Batch Processing)": [[161, "id3"]], "Algorithm Output for Quality Metrics for Principal Components Analysis (Batch Processing)": [[161, "id4"]], "Quality Metrics": [[162, "quality-metrics"]], "Working with User-defined Quality Metrics": [[163, "working-with-user-defined-quality-metrics"]], "Quantile": [[164, "quantile"]], "Algorithm Input for Quantile (Batch Processing)": [[164, "id1"]], "Algorithm Parameters for Quantile (Batch Processing)": [[164, "id2"]], "Algorithm Output for Quantile (Batch Processing)": [[164, "id3"]], "Sorting": [[165, "sorting"]], "Algorithm Input for Sorting (Batch Processing)": [[165, "id1"]], "Algorithm Parameters for Sorting (Batch Processing)": [[165, "id2"]], "Algorithm Output for Sorting (Batch Processing)": [[165, "id3"]], "Classification Stump": [[166, "classification-stump"]], "Training Parameters for Classification Stump (Batch Processing)": [[166, "id2"], [166, "id3"]], "Stump": [[167, "stump"]], "Regression Stump": [[168, "regression-stump"]], "Training Parameters for Regression Stump (Batch Processing)": [[168, "id2"]], "Prediction Parameters for Regression Stump (Batch Processing)": [[168, "id3"]], "Algorithm Input for Singular Value Decomposition (Batch and Online Processing)": [[169, "id1"]], "Algorithm Parameters for Singular Value Decomposition (Batch and Online Processing)": [[169, "id2"]], "Algorithm Output for Singular Value Decomposition (Batch and Online Processing)": [[169, "id3"]], "Algorithm Parameters for Singular Value Decomposition (Distributed Processing)": [[170, "id1"]], "Input for Singular Value Decomposition (Distributed Processing, Step 1)": [[170, "id3"]], "Partial Results for Singular Value Decomposition (Distributed Processing, Step 1)": [[170, "id4"]], "Input for Singular Value Decomposition (Distributed Processing, Step 2)": [[170, "id6"]], "Partial Results for Singular Value Decomposition (Distributed Processing, Step 2)": [[170, "id7"]], "Output for Singular Value Decomposition (Distributed Processing, Step 2)": [[170, "id8"]], "Input for Singular Value Decomposition (Distributed Processing, Step 3)": [[170, "id10"]], "Output for Singular Value Decomposition (Distributed Processing, Step 3)": [[170, "id11"]], "Singular Value Decomposition": [[171, "singular-value-decomposition"]], "Support Vector Machine Classifier": [[172, "support-vector-machine-classifier"]], "Training Parameters for Support Vector Machine Classifier (Batch Processing)": [[172, "id11"]], "Prediction Parameters for Support Vector Machine Classifier (Batch Processing)": [[172, "id12"]], "Multi-class Classifier": [[173, "multi-class-classifier"]], "Training Parameters for  Multi-class Classifier (Batch Processing)": [[173, "id5"]], "Prediction Parameters for  Multi-class Classifier (Batch Processing)": [[173, "id6"]], "Output for  Multi-class Classifier (Batch Processing)": [[173, "id7"]], "Analysis": [[174, "analysis"]], "CPU and GPU Support": [[175, "cpu-and-gpu-support"], [383, "cpu-and-gpu-support"]], "Data Dictionaries": [[176, "data-dictionaries"]], "Data Model": [[178, "data-model"]], "Data Serialization and Deserialization": [[179, "data-serialization-and-deserialization"]], "Samples": [[180, "samples"]], "Essential Interfaces for Algorithms": [[181, "essential-interfaces-for-algorithms"]], "Generic Interfaces": [[182, "generic-interfaces"]], "Initialize": [[182, "initialize"]], "Operate": [[182, "operate"]], "Deinitialize": [[182, "deinitialize"]], "Numeric Tables": [[183, "numeric-tables"]], "Types of Numeric Tables": [[184, "types-of-numeric-tables"]], "Heterogeneous Numeric Tables": [[184, "heterogeneous-numeric-tables"]], "AOS Numeric Table": [[184, "aos-numeric-table"]], "SOA Numeric Table": [[184, "soa-numeric-table"]], "Homogeneous Numeric Tables": [[184, "homogeneous-numeric-tables"]], "CSR Numeric Table": [[184, "csr-numeric-table"]], "Merged Numeric Table": [[184, "merged-numeric-table"]], "Providing a Callback for the Host Application": [[185, "providing-a-callback-for-the-host-application"]], "Algorithm class methods": [[185, "id1"]], "HostAppIface class Methods": [[185, "id2"]], "Extracting Version Information": [[186, "extracting-version-information"]], "Handling Errors": [[187, "handling-errors"]], "Managing the Computational Environment": [[188, "managing-the-computational-environment"]], "Managing Memory": [[189, "managing-memory"]], "Services": [[190, "services"]], "Training and Prediction": [[191, "training-and-prediction"]], "Training Alternative": [[191, "training-alternative"]], "Computation Modes": [[193, "computation-modes"], [384, "id1"]], "Batch processing": [[193, "batch-processing"]], "Online processing": [[193, "online-processing"]], "Distributed processing": [[193, "distributed-processing"]], "Library Usage": [[194, "library-usage"]], "Classification Usage Model": [[195, "classification-usage-model"]], "Algorithm-Specific Parameters": [[195, "algorithm-specific-parameters"], [197, "algorithm-specific-parameters"], [198, "algorithm-specific-parameters"]], "Training Input for Classification Algorithms": [[195, "id3"]], "Training Output for Classification Algorithms": [[195, "id4"]], "Prediction Input for Classification Algorithms": [[195, "id6"]], "Prediction Output for Classification Algorithms": [[195, "id7"]], "Usage Model: Training and Prediction": [[196, "usage-model-training-and-prediction"]], "Recommendation Systems Usage Model": [[197, "recommendation-systems-usage-model"]], "Training Input for Recommender Algorithms": [[197, "id2"]], "Training Output for Recommender Algorithms": [[197, "id3"]], "Prediction Input for Recommender Algorithms": [[197, "id5"]], "Prediction Output for Recommender Algorithms": [[197, "id6"]], "Regression Usage Model": [[198, "regression-usage-model"]], "Training Input for Regression Algorithms": [[198, "id3"]], "Training Output for Regression Algorithms": [[198, "id4"]], "Prediction Input for Regression Algorithms": [[198, "id6"]], "Prediction Output for Regression Algorithms": [[198, "id7"]], "Introduction": [[199, "introduction"], [384, "introduction"]], "Data Analytics Pipeline": [[199, "data-analytics-pipeline"]], "Deprecation Notice": [[200, "deprecation-notice"]], "Java* Interfaces": [[200, "java-interfaces"]], "DAAL CPP SYCL Interfaces": [[200, "daal-cpp-sycl-interfaces"]], "Compression Functionality": [[200, "compression-functionality"]], "ABI Compatibility": [[200, "abi-compatibility"]], "macOS* Support": [[200, "macos-support"]], "oneAPI Examples": [[201, "oneapi-examples"]], "oneAPI C++ Examples": [[202, "oneapi-c-examples"]], "basic_statistics_dense_batch.cpp": [[203, "basic-statistics-dense-batch-cpp"], [251, "basic-statistics-dense-batch-cpp"]], "basic_statistics_dense_online.cpp": [[204, "basic-statistics-dense-online-cpp"], [252, "basic-statistics-dense-online-cpp"]], "column_accessor_homogen.cpp": [[205, "column-accessor-homogen-cpp"], [253, "column-accessor-homogen-cpp"]], "connected_components_batch.cpp": [[206, "connected-components-batch-cpp"]], "cor_dense_batch.cpp": [[207, "cor-dense-batch-cpp"], [254, "cor-dense-batch-cpp"]], "cor_dense_online.cpp": [[208, "cor-dense-online-cpp"], [255, "cor-dense-online-cpp"]], "cov_dense_batch.cpp": [[209, "cov-dense-batch-cpp"], [256, "cov-dense-batch-cpp"]], "cov_dense_online.cpp": [[210, "cov-dense-online-cpp"], [257, "cov-dense-online-cpp"]], "csr_accessor.cpp": [[211, "csr-accessor-cpp"], [258, "csr-accessor-cpp"]], "dbscan_brute_force_batch.cpp": [[212, "dbscan-brute-force-batch-cpp"], [259, "dbscan-brute-force-batch-cpp"]], "df_cls_dense_batch.cpp": [[213, "df-cls-dense-batch-cpp"]], "df_reg_dense_batch.cpp": [[214, "df-reg-dense-batch-cpp"]], "directed_graph.cpp": [[215, "directed-graph-cpp"]], "graph_service_functions.cpp": [[216, "graph-service-functions-cpp"]], "jaccard_batch.cpp": [[217, "jaccard-batch-cpp"]], "jaccard_batch_app.cpp": [[218, "jaccard-batch-app-cpp"]], "kmeans_init_dense.cpp": [[219, "kmeans-init-dense-cpp"], [266, "kmeans-init-dense-cpp"]], "kmeans_lloyd_dense_batch.cpp": [[220, "kmeans-lloyd-dense-batch-cpp"], [267, "kmeans-lloyd-dense-batch-cpp"]], "knn_cls_brute_force_dense_batch.cpp": [[221, "knn-cls-brute-force-dense-batch-cpp"], [268, "knn-cls-brute-force-dense-batch-cpp"]], "knn_cls_kd_tree_dense_batch.cpp": [[222, "knn-cls-kd-tree-dense-batch-cpp"]], "knn_search_brute_force_dense_batch.cpp": [[223, "knn-search-brute-force-dense-batch-cpp"], [270, "knn-search-brute-force-dense-batch-cpp"]], "linear_kernel_dense_batch.cpp": [[224, "linear-kernel-dense-batch-cpp"], [271, "linear-kernel-dense-batch-cpp"]], "linear_regression_dense_batch.cpp": [[225, "linear-regression-dense-batch-cpp"], [272, "linear-regression-dense-batch-cpp"]], "linear_regression_dense_online.cpp": [[226, "linear-regression-dense-online-cpp"], [273, "linear-regression-dense-online-cpp"]], "logloss_dense_batch.cpp": [[227, "logloss-dense-batch-cpp"]], "louvain_batch.cpp": [[228, "louvain-batch-cpp"]], "pca_dense_batch.cpp": [[229, "pca-dense-batch-cpp"]], "pca_dense_online.cpp": [[230, "pca-dense-online-cpp"]], "pca_precomputed_dense_batch.cpp": [[231, "pca-precomputed-dense-batch-cpp"]], "polynomial_kernel_dense_batch.cpp": [[232, "polynomial-kernel-dense-batch-cpp"]], "rbf_kernel_dense_batch.cpp": [[233, "rbf-kernel-dense-batch-cpp"], [279, "rbf-kernel-dense-batch-cpp"]], "shortest_paths_batch.cpp": [[234, "shortest-paths-batch-cpp"]], "sigmoid_kernel_dense_batch.cpp": [[235, "sigmoid-kernel-dense-batch-cpp"]], "subgraph_isomorphism_batch.cpp": [[236, "subgraph-isomorphism-batch-cpp"]], "svm_multi_class_thunder_csr_batch.cpp": [[237, "svm-multi-class-thunder-csr-batch-cpp"]], "svm_multi_class_thunder_dense_batch.cpp": [[238, "svm-multi-class-thunder-dense-batch-cpp"]], "svm_nu_cls_thunder_csr_batch.cpp": [[239, "svm-nu-cls-thunder-csr-batch-cpp"]], "svm_nu_cls_thunder_dense_batch.cpp": [[240, "svm-nu-cls-thunder-dense-batch-cpp"]], "svm_nu_reg_thunder_csr_batch.cpp": [[241, "svm-nu-reg-thunder-csr-batch-cpp"]], "svm_nu_reg_thunder_dense_batch.cpp": [[242, "svm-nu-reg-thunder-dense-batch-cpp"]], "svm_reg_thunder_csr_batch.cpp": [[243, "svm-reg-thunder-csr-batch-cpp"]], "svm_reg_thunder_dense_batch.cpp": [[244, "svm-reg-thunder-dense-batch-cpp"]], "svm_two_class_smo_csr_batch.cpp": [[245, "svm-two-class-smo-csr-batch-cpp"]], "svm_two_class_smo_dense_batch.cpp": [[246, "svm-two-class-smo-dense-batch-cpp"]], "svm_two_class_thunder_csr_batch.cpp": [[247, "svm-two-class-thunder-csr-batch-cpp"]], "svm_two_class_thunder_dense_batch.cpp": [[248, "svm-two-class-thunder-dense-batch-cpp"], [280, "svm-two-class-thunder-dense-batch-cpp"]], "triangle_counting_batch.cpp": [[249, "triangle-counting-batch-cpp"]], "oneAPI DPC++ examples": [[250, "oneapi-dpc-examples"]], "df_cls_hist_batch.cpp": [[260, "df-cls-hist-batch-cpp"]], "df_cls_hist_batch_random.cpp": [[261, "df-cls-hist-batch-random-cpp"]], "df_cls_traverse_model.cpp": [[262, "df-cls-traverse-model-cpp"]], "df_reg_hist_batch.cpp": [[263, "df-reg-hist-batch-cpp"]], "df_reg_hist_batch_random.cpp": [[264, "df-reg-hist-batch-random-cpp"]], "df_reg_traverse_model.cpp": [[265, "df-reg-traverse-model-cpp"]], "knn_reg_brute_force_dense_batch.cpp": [[269, "knn-reg-brute-force-dense-batch-cpp"]], "logistic_regression_dense_batch.cpp": [[274, "logistic-regression-dense-batch-cpp"]], "pca_cor_dense_batch.cpp": [[275, "pca-cor-dense-batch-cpp"]], "pca_cor_dense_online.cpp": [[276, "pca-cor-dense-online-cpp"]], "pca_precomputed_cor_dense_batch.cpp": [[277, "pca-precomputed-cor-dense-batch-cpp"]], "pca_precomputed_cov_dense_batch.cpp": [[278, "pca-precomputed-cov-dense-batch-cpp"]], "oneAPI Data Analytics Library (oneDAL)": [[331, "full-name-short-name"]], "oneAPI vs. DAAL Interfaces": [[331, "oneapi-vs-daal-interfaces"]], "Get Started": [[331, null]], "Developer Guide": [[331, null]], "Developer Reference": [[331, null]], "Installation": [[332, "installation"]], "oneAPI Interfaces": [[333, "oneapi-interfaces"]], "Distributed mode": [[334, "distributed-mode"], [336, "distributed-mode"], [338, "distributed-mode"], [341, "distributed-mode"], [342, "distributed-mode"], [354, "distributed-mode"], [355, "distributed-mode"], [356, "distributed-mode"], [361, "distributed-mode"]], "Training method: Lloyd\u2019s": [[336, "training-method-lloyd-s"]], "Inference method: Lloyd\u2019s": [[336, "inference-method-lloyd-s"]], "Computing method: dense": [[337, "computing-method-dense"]], "Computing method: random_dense": [[337, "computing-method-random-dense"]], "Computing method: plus_plus_dense (only on CPU)": [[337, "computing-method-plus-plus-dense-only-on-cpu"]], "Computing method: parallel_plus_dense (only on CPU)": [[337, "computing-method-parallel-plus-dense-only-on-cpu"]], "Computation method: dense": [[338, "computation-method-dense"], [349, "computation-method-dense"], [350, "computation-method-dense"], [351, "computation-method-dense"], [352, "computation-method-dense"], [357, "computation-method-dense"], [358, "computation-method-dense"], [360, "computation-method-dense"], [361, "computation-method-dense"]], "Training method: Covariance": [[341, "training-method-covariance"]], "Training method: SVD": [[341, "training-method-svd"]], "Sign-flip technique": [[341, "sign-flip-technique"]], "Inference methods: Covariance and SVD": [[341, "inference-methods-covariance-and-svd"]], "Training method: Dense": [[342, "training-method-dense"]], "Training method: Hist": [[342, "training-method-hist"]], "Split strategy": [[342, "split-strategy"]], "Decision Forest Split Criteria Calculation": [[342, "id3"]], "MSE Impurity Metric": [[342, "id4"]], "Inference methods: Dense and Hist": [[342, "inference-methods-dense-and-hist"]], "Computation method: afforest": [[344, "computation-method-afforest"]], "Subgraphs definition": [[346, "subgraphs-definition"]], "Computation method: fast": [[346, "computation-method-fast"]], "k-Nearest Neighbors Classification, Regression, and Search (k-NN)": [[354, "k-nearest-neighbors-classification-regression-and-search-k-nn"]], "Training method: brute-force": [[354, "training-method-brute-force"]], "Training method: k-d tree": [[354, "training-method-k-d-tree"]], "Inference method: brute-force": [[354, "inference-method-brute-force"]], "Inference method: k-d tree": [[354, "inference-method-k-d-tree"]], "Supported objective functions": [[355, "supported-objective-functions"]], "Value": [[355, "value"], [356, "value"]], "Gradient": [[355, "gradient"], [356, "gradient"]], "Hessian": [[355, "hessian"], [356, "hessian"]], "Computation method: dense_batch": [[355, "computation-method-dense-batch"], [356, "computation-method-dense-batch"]], "Support Vector Machine Classifier and Regression (SVM)": [[364, "support-vector-machine-classifier-and-regression-svm"]], "Training method: smo": [[364, "training-method-smo"]], "Training method: thunder": [[364, "training-method-thunder"]], "Inference methods: smo and thunder": [[364, "inference-methods-smo-and-thunder"]], "Appendix": [[366, "appendix"]], "k-d Tree": [[367, "k-d-tree"]], "Related terms": [[367, "related-terms"]], "Build applications with oneDAL": [[368, "build-applications-with-onedal"]], "Applications on Linux* OS": [[368, "applications-on-linux-os"]], "oneDAL libraries for Linux": [[368, "id1"]], "Applications on Windows* OS": [[368, "applications-on-windows-os"]], "oneDAL libraries for Windows": [[368, "id2"]], "oneDAL debug libraries for Windows": [[368, "id3"]], "Column accessor": [[369, "column-accessor"]], "Row accessor": [[370, "row-accessor"]], "Requirements": [[371, "requirements"]], "Accessor Types": [[371, "accessor-types"], [371, "id2"]], "Data ownership requirements": [[372, "data-ownership-requirements"]], "Read": [[374, "read"]], "Read operation definition": [[374, "read-operation-definition"]], "Read operation shortcuts": [[374, "read-operation-shortcuts"]], "Data Source Types": [[374, "data-source-types"], [374, "id3"]], "Requirements on graph types": [[377, "requirements-on-graph-types"]], "Graph types": [[377, "graph-types"]], "Key concepts": [[378, "key-concepts"]], "Dataset": [[378, "dataset"]], "Data source": [[378, "data-source"]], "Accessor": [[378, "accessor"]], "Example of interaction between table and accessor objects": [[378, "example-of-interaction-between-table-and-accessor-objects"]], "Table Types": [[381, "id1"]], "Requirements on table types": [[381, "requirements-on-table-types"]], "Table types": [[381, "table-types"]], "Table Types for specific data formats": [[381, "id2"]], "Glossary": [[382, "glossary"]], "Machine learning terms": [[382, "machine-learning-terms"]], "Graph analytics terms": [[382, "graph-analytics-terms"]], "oneDAL terms": [[382, "short-name-terms"]], "Common oneAPI terms": [[382, "common-oneapi-terms"]], "Distributed computational mode terms": [[382, "distributed-computational-mode-terms"]], "GPU-Supported Targets": [[383, "gpu-supported-targets"]], "GPU Support Considerations": [[383, "id1"]], "Algorithms Support": [[384, "algorithms-support"]], "Mathematical Notations": [[385, "mathematical-notations"]], "Computational Modes": [[386, "computational-modes"]], "Batch": [[386, "batch"]], "Online": [[386, "online"]], "Distributed": [[386, "distributed"]], "Single Program Multiple Data": [[387, "single-program-multiple-data"]], "Distributed computation using SPMD model": [[387, "distributed-computation-using-spmd-model"]], "Supported Collective Operations": [[387, "supported-collective-operations"]], "Backend-specific restrictions": [[387, "backend-specific-restrictions"]], "Quick Start": [[388, "quick-start"]], "Before You Begin": [[388, "before-you-begin"]], "End-to-end Example": [[388, "end-to-end-example"]], "Build and Run Examples": [[388, "build-and-run-examples"]], "System Requirements": [[389, "system-requirements"]], "Hardware Requirements": [[389, "hardware-requirements"]], "Software Requirements": [[389, "software-requirements"]]}, "indexentries": {"oneapi::dal::dbscan::compute (c++ function)": [[1, "_CPPv4I0EN6oneapi3dal6dbscan7computeEN6dbscan14compute_resultERK10DescriptorRKN6dbscan13compute_inputE"]], "oneapi::dal::dbscan::compute_input (c++ class)": [[1, "_CPPv4I0EN6oneapi3dal6dbscan13compute_inputE"]], "oneapi::dal::dbscan::compute_input::compute_input (c++ function)": [[1, "_CPPv4N6oneapi3dal6dbscan13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::dbscan::compute_input::data (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan13compute_input4dataE"]], "oneapi::dal::dbscan::compute_input::weights (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan13compute_input7weightsE"]], "oneapi::dal::dbscan::compute_result (c++ class)": [[1, "_CPPv4I0EN6oneapi3dal6dbscan14compute_resultE"]], "oneapi::dal::dbscan::compute_result::cluster_count (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result13cluster_countE"]], "oneapi::dal::dbscan::compute_result::compute_result (c++ function)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result14compute_resultEv"]], "oneapi::dal::dbscan::compute_result::core_flags (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result10core_flagsE"]], "oneapi::dal::dbscan::compute_result::core_observation_indices (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result24core_observation_indicesE"]], "oneapi::dal::dbscan::compute_result::core_observations (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result17core_observationsE"]], "oneapi::dal::dbscan::compute_result::responses (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result9responsesE"]], "oneapi::dal::dbscan::compute_result::result_options (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan14compute_result14result_optionsE"]], "oneapi::dal::dbscan::descriptor (c++ class)": [[1, "_CPPv4I000EN6oneapi3dal6dbscan10descriptorE"]], "oneapi::dal::dbscan::descriptor::descriptor (c++ function)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor10descriptorEdNSt7int64_tE"]], "oneapi::dal::dbscan::descriptor::epsilon (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor7epsilonE"]], "oneapi::dal::dbscan::descriptor::mem_save_mode (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor13mem_save_modeE"]], "oneapi::dal::dbscan::descriptor::min_observations (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor16min_observationsE"]], "oneapi::dal::dbscan::descriptor::result_options (c++ member)": [[1, "_CPPv4N6oneapi3dal6dbscan10descriptor14result_optionsE"]], "oneapi::dal::dbscan::method::brute_force (c++ struct)": [[1, "_CPPv4N6oneapi3dal6dbscan6method11brute_forceE"]], "oneapi::dal::dbscan::method::by_default (c++ type)": [[1, "_CPPv4N6oneapi3dal6dbscan6method10by_defaultE"]], "oneapi::dal::dbscan::task::by_default (c++ type)": [[1, "_CPPv4N6oneapi3dal6dbscan4task10by_defaultE"]], "oneapi::dal::dbscan::task::clustering (c++ struct)": [[1, "_CPPv4N6oneapi3dal6dbscan4task10clusteringE"]], "oneapi::dal::kmeans::descriptor (c++ class)": [[3, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE"]], "oneapi::dal::kmeans::descriptor::accuracy_threshold (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE"]], "oneapi::dal::kmeans::descriptor::cluster_count (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE"]], "oneapi::dal::kmeans::descriptor::descriptor (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans::descriptor::max_iteration_count (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE"]], "oneapi::dal::kmeans::infer (c++ function)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans5inferEN6kmeans12infer_resultERK10DescriptorRKN6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input::data (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE"]], "oneapi::dal::kmeans::infer_input::infer_input (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::kmeans::infer_input::model (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE"]], "oneapi::dal::kmeans::infer_result (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE"]], "oneapi::dal::kmeans::infer_result::infer_result (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv"]], "oneapi::dal::kmeans::infer_result::labels (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result6labelsE"]], "oneapi::dal::kmeans::infer_result::objective_function_value (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result24objective_function_valueE"]], "oneapi::dal::kmeans::infer_result::responses (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12infer_result9responsesE"]], "oneapi::dal::kmeans::method::by_default (c++ type)": [[3, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE"]], "oneapi::dal::kmeans::method::lloyd_dense (c++ struct)": [[3, "_CPPv4N6oneapi3dal6kmeans6method11lloyd_denseE"]], "oneapi::dal::kmeans::model (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans5modelE"]], "oneapi::dal::kmeans::model::centroids (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans5model9centroidsE"]], "oneapi::dal::kmeans::model::get_cluster_count (c++ function)": [[3, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv"]], "oneapi::dal::kmeans::model::model (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans5model5modelEv"]], "oneapi::dal::kmeans::task::by_default (c++ type)": [[3, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE"]], "oneapi::dal::kmeans::task::clustering (c++ struct)": [[3, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE"]], "oneapi::dal::kmeans::train (c++ function)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans5trainEN6kmeans12train_resultERK10DescriptorRKN6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input::data (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE"]], "oneapi::dal::kmeans::train_input::initial_centroids (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE"]], "oneapi::dal::kmeans::train_input::train_input (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5table"], [3, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::kmeans::train_result (c++ class)": [[3, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE"]], "oneapi::dal::kmeans::train_result::iteration_count (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result15iteration_countE"]], "oneapi::dal::kmeans::train_result::labels (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result6labelsE"]], "oneapi::dal::kmeans::train_result::model (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result5modelE"]], "oneapi::dal::kmeans::train_result::objective_function_value (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result24objective_function_valueE"]], "oneapi::dal::kmeans::train_result::responses (c++ member)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result9responsesE"]], "oneapi::dal::kmeans::train_result::train_result (c++ function)": [[3, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv"]], "oneapi::dal::kmeans_init::compute (c++ function)": [[4, "_CPPv4I0EN6oneapi3dal11kmeans_init7computeEN11kmeans_init14compute_resultERK10DescriptorRKN11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input (c++ class)": [[4, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input::compute_input (c++ function)": [[4, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table"]], "oneapi::dal::kmeans_init::compute_input::data (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE"]], "oneapi::dal::kmeans_init::compute_result (c++ class)": [[4, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE"]], "oneapi::dal::kmeans_init::compute_result::centroids (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init14compute_result9centroidsE"]], "oneapi::dal::kmeans_init::compute_result::compute_result (c++ function)": [[4, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv"]], "oneapi::dal::kmeans_init::descriptor (c++ class)": [[4, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE"]], "oneapi::dal::kmeans_init::descriptor::cluster_count (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE"]], "oneapi::dal::kmeans_init::descriptor::descriptor (c++ function)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans_init::descriptor::local_trials_count (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor18local_trials_countE"]], "oneapi::dal::kmeans_init::descriptor::seed (c++ member)": [[4, "_CPPv4N6oneapi3dal11kmeans_init10descriptor4seedE"]], "oneapi::dal::kmeans_init::method::by_default (c++ type)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE"]], "oneapi::dal::kmeans_init::method::dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE"]], "oneapi::dal::kmeans_init::method::parallel_plus_dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method19parallel_plus_denseE"]], "oneapi::dal::kmeans_init::method::plus_plus_dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method15plus_plus_denseE"]], "oneapi::dal::kmeans_init::method::random_dense (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init6method12random_denseE"]], "oneapi::dal::kmeans_init::task::by_default (c++ type)": [[4, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE"]], "oneapi::dal::kmeans_init::task::init (c++ struct)": [[4, "_CPPv4N6oneapi3dal11kmeans_init4task4initE"]], "oneapi::dal::covariance::compute (c++ function)": [[5, "_CPPv4I0EN6oneapi3dal10covariance7computeEN10covariance14compute_resultERK10DescriptorRKN10covariance13compute_inputE"]], "oneapi::dal::covariance::compute_input (c++ class)": [[5, "_CPPv4I0EN6oneapi3dal10covariance13compute_inputE"]], "oneapi::dal::covariance::compute_input::compute_input (c++ function)": [[5, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputERK5table"], [5, "_CPPv4N6oneapi3dal10covariance13compute_input13compute_inputEv"]], "oneapi::dal::covariance::compute_input::data (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance13compute_input4dataE"]], "oneapi::dal::covariance::compute_result (c++ class)": [[5, "_CPPv4I0EN6oneapi3dal10covariance14compute_resultE"]], "oneapi::dal::covariance::compute_result::compute_result (c++ function)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result14compute_resultEv"]], "oneapi::dal::covariance::compute_result::cor_matrix (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result10cor_matrixE"]], "oneapi::dal::covariance::compute_result::cov_matrix (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result10cov_matrixE"]], "oneapi::dal::covariance::compute_result::means (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result5meansE"]], "oneapi::dal::covariance::compute_result::result_options (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance14compute_result14result_optionsE"]], "oneapi::dal::covariance::descriptor (c++ class)": [[5, "_CPPv4I000EN6oneapi3dal10covariance10descriptorE"]], "oneapi::dal::covariance::descriptor::descriptor (c++ function)": [[5, "_CPPv4N6oneapi3dal10covariance10descriptor10descriptorEv"]], "oneapi::dal::covariance::descriptor::result_options (c++ member)": [[5, "_CPPv4N6oneapi3dal10covariance10descriptor14result_optionsE"]], "oneapi::dal::covariance::method::by_default (c++ type)": [[5, "_CPPv4N6oneapi3dal10covariance6method10by_defaultE"]], "oneapi::dal::covariance::method::dense (c++ struct)": [[5, "_CPPv4N6oneapi3dal10covariance6method5denseE"]], "oneapi::dal::covariance::task::by_default (c++ type)": [[5, "_CPPv4N6oneapi3dal10covariance4task10by_defaultE"]], "oneapi::dal::covariance::task::compute (c++ struct)": [[5, "_CPPv4N6oneapi3dal10covariance4task7computeE"]], "oneapi::dal::pca::descriptor (c++ class)": [[8, "_CPPv4I000EN6oneapi3dal3pca10descriptorE"]], "oneapi::dal::pca::descriptor::component_count (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE"]], "oneapi::dal::pca::descriptor::descriptor (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::pca::descriptor::deterministic (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE"]], "oneapi::dal::pca::descriptor::result_options (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca10descriptor14result_optionsE"]], "oneapi::dal::pca::infer (c++ function)": [[8, "_CPPv4I0EN6oneapi3dal3pca5inferEN3pca12infer_resultERK10DescriptorRKN3pca11infer_inputE"]], "oneapi::dal::pca::infer_input (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE"]], "oneapi::dal::pca::infer_input::data (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca11infer_input4dataE"]], "oneapi::dal::pca::infer_input::infer_input (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::pca::infer_input::model (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca11infer_input5modelE"]], "oneapi::dal::pca::infer_result (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE"]], "oneapi::dal::pca::infer_result::infer_result (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv"]], "oneapi::dal::pca::infer_result::transformed_data (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12infer_result16transformed_dataE"]], "oneapi::dal::pca::method::by_default (c++ type)": [[8, "_CPPv4N6oneapi3dal3pca6method10by_defaultE"]], "oneapi::dal::pca::method::cov (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca6method3covE"]], "oneapi::dal::pca::method::precomputed (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca6method11precomputedE"]], "oneapi::dal::pca::method::svd (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca6method3svdE"]], "oneapi::dal::pca::model (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca5modelE"]], "oneapi::dal::pca::model::eigenvectors (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca5model12eigenvectorsE"]], "oneapi::dal::pca::model::model (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca5model5modelEv"]], "oneapi::dal::pca::task::by_default (c++ type)": [[8, "_CPPv4N6oneapi3dal3pca4task10by_defaultE"]], "oneapi::dal::pca::task::dim_reduction (c++ struct)": [[8, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE"]], "oneapi::dal::pca::train (c++ function)": [[8, "_CPPv4I0EN6oneapi3dal3pca5trainEN3pca12train_resultERK10DescriptorRKN3pca11train_inputE"]], "oneapi::dal::pca::train_input (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca11train_inputE"]], "oneapi::dal::pca::train_input::data (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca11train_input4dataE"]], "oneapi::dal::pca::train_input::train_input (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table"], [8, "_CPPv4N6oneapi3dal3pca11train_input11train_inputEv"]], "oneapi::dal::pca::train_result (c++ class)": [[8, "_CPPv4I0EN6oneapi3dal3pca12train_resultE"]], "oneapi::dal::pca::train_result::eigenvalues (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result11eigenvaluesE"]], "oneapi::dal::pca::train_result::get_eigenvectors (c++ function)": [[8, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv"]], "oneapi::dal::pca::train_result::means (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result5meansE"]], "oneapi::dal::pca::train_result::model (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result5modelE"]], "oneapi::dal::pca::train_result::result_options (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result14result_optionsE"]], "oneapi::dal::pca::train_result::train_result (c++ function)": [[8, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv"]], "oneapi::dal::pca::train_result::variances (c++ member)": [[8, "_CPPv4N6oneapi3dal3pca12train_result9variancesE"]], "oneapi::dal::decision_forest::descriptor (c++ class)": [[9, "_CPPv4I000EN6oneapi3dal15decision_forest10descriptorE"]], "oneapi::dal::decision_forest::descriptor::bootstrap (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor9bootstrapE"]], "oneapi::dal::decision_forest::descriptor::class_count (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor11class_countE"]], "oneapi::dal::decision_forest::descriptor::descriptor (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor10descriptorEv"]], "oneapi::dal::decision_forest::descriptor::error_metric_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor17error_metric_modeE"]], "oneapi::dal::decision_forest::descriptor::features_per_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor17features_per_nodeE"]], "oneapi::dal::decision_forest::descriptor::impurity_threshold (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor18impurity_thresholdE"]], "oneapi::dal::decision_forest::descriptor::infer_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor10infer_modeE"]], "oneapi::dal::decision_forest::descriptor::max_bins (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor8max_binsE"]], "oneapi::dal::decision_forest::descriptor::max_leaf_nodes (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_leaf_nodesE"]], "oneapi::dal::decision_forest::descriptor::max_tree_depth (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor14max_tree_depthE"]], "oneapi::dal::decision_forest::descriptor::memory_saving_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor18memory_saving_modeE"]], "oneapi::dal::decision_forest::descriptor::min_bin_size (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor12min_bin_sizeE"]], "oneapi::dal::decision_forest::descriptor::min_impurity_decrease_in_split_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor35min_impurity_decrease_in_split_nodeE"]], "oneapi::dal::decision_forest::descriptor::min_observations_in_leaf_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor29min_observations_in_leaf_nodeE"]], "oneapi::dal::decision_forest::descriptor::min_observations_in_split_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor30min_observations_in_split_nodeE"]], "oneapi::dal::decision_forest::descriptor::min_weight_fraction_in_leaf_node (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor32min_weight_fraction_in_leaf_nodeE"]], "oneapi::dal::decision_forest::descriptor::observations_per_tree_fraction (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor30observations_per_tree_fractionE"]], "oneapi::dal::decision_forest::descriptor::seed (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor4seedE"]], "oneapi::dal::decision_forest::descriptor::splitter_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor13splitter_modeE"]], "oneapi::dal::decision_forest::descriptor::tree_count (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor10tree_countE"]], "oneapi::dal::decision_forest::descriptor::variable_importance_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor24variable_importance_modeE"]], "oneapi::dal::decision_forest::descriptor::voting_mode (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest10descriptor11voting_modeE"]], "oneapi::dal::decision_forest::infer (c++ function)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest5inferEN15decision_forest12infer_resultERK10DescriptorRKN15decision_forest11infer_inputE"]], "oneapi::dal::decision_forest::infer_input (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest11infer_inputE"]], "oneapi::dal::decision_forest::infer_input::data (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11infer_input4dataE"]], "oneapi::dal::decision_forest::infer_input::infer_input (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::decision_forest::infer_input::model (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11infer_input5modelE"]], "oneapi::dal::decision_forest::infer_result (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest12infer_resultE"]], "oneapi::dal::decision_forest::infer_result::infer_result (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result12infer_resultEv"]], "oneapi::dal::decision_forest::infer_result::labels (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result6labelsE"]], "oneapi::dal::decision_forest::infer_result::probabilities (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result13probabilitiesE"]], "oneapi::dal::decision_forest::infer_result::responses (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12infer_result9responsesE"]], "oneapi::dal::decision_forest::method::by_default (c++ type)": [[9, "_CPPv4N6oneapi3dal15decision_forest6method10by_defaultE"]], "oneapi::dal::decision_forest::method::dense (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest6method5denseE"]], "oneapi::dal::decision_forest::method::hist (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest6method4histE"]], "oneapi::dal::decision_forest::model (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest5modelE"]], "oneapi::dal::decision_forest::model::get_class_count (c++ function)": [[9, "_CPPv4I00ENK6oneapi3dal15decision_forest5model15get_class_countENSt7int64_tEv"]], "oneapi::dal::decision_forest::model::get_tree_count (c++ function)": [[9, "_CPPv4NK6oneapi3dal15decision_forest5model14get_tree_countEv"]], "oneapi::dal::decision_forest::model::model (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest5model5modelEv"]], "oneapi::dal::decision_forest::model::traverse_breadth_first (c++ function)": [[9, "_CPPv4I00ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvRR1T"], [9, "_CPPv4I0ENK6oneapi3dal15decision_forest5model22traverse_breadth_firstEvNSt7int64_tERR7Visitor"]], "oneapi::dal::decision_forest::model::traverse_depth_first (c++ function)": [[9, "_CPPv4I00ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvRR1T"], [9, "_CPPv4I0ENK6oneapi3dal15decision_forest5model20traverse_depth_firstEvNSt7int64_tERR7Visitor"]], "oneapi::dal::decision_forest::task::by_default (c++ type)": [[9, "_CPPv4N6oneapi3dal15decision_forest4task10by_defaultE"]], "oneapi::dal::decision_forest::task::classification (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest4task14classificationE"]], "oneapi::dal::decision_forest::task::regression (c++ struct)": [[9, "_CPPv4N6oneapi3dal15decision_forest4task10regressionE"]], "oneapi::dal::decision_forest::train (c++ function)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest5trainEN15decision_forest12train_resultERK10DescriptorRKN15decision_forest11train_inputE"]], "oneapi::dal::decision_forest::train_input (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest11train_inputE"]], "oneapi::dal::decision_forest::train_input::data (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input4dataE"]], "oneapi::dal::decision_forest::train_input::labels (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input6labelsE"]], "oneapi::dal::decision_forest::train_input::responses (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input9responsesE"]], "oneapi::dal::decision_forest::train_input::train_input (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input11train_inputERK5tableRK5tableRK5table"]], "oneapi::dal::decision_forest::train_input::weights (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest11train_input7weightsE"]], "oneapi::dal::decision_forest::train_result (c++ class)": [[9, "_CPPv4I0EN6oneapi3dal15decision_forest12train_resultE"]], "oneapi::dal::decision_forest::train_result::model (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result5modelE"]], "oneapi::dal::decision_forest::train_result::oob_err (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result7oob_errE"]], "oneapi::dal::decision_forest::train_result::oob_err_accuracy (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result16oob_err_accuracyE"]], "oneapi::dal::decision_forest::train_result::oob_err_decision_function (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result25oob_err_decision_functionE"]], "oneapi::dal::decision_forest::train_result::oob_err_per_observation (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result23oob_err_per_observationE"]], "oneapi::dal::decision_forest::train_result::oob_err_prediction (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result18oob_err_predictionE"]], "oneapi::dal::decision_forest::train_result::oob_err_r2 (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result10oob_err_r2E"]], "oneapi::dal::decision_forest::train_result::train_result (c++ function)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result12train_resultEv"]], "oneapi::dal::decision_forest::train_result::var_importance (c++ member)": [[9, "_CPPv4N6oneapi3dal15decision_forest12train_result14var_importanceE"]], "oneapi::dal::preview::connected_components::descriptor (c++ class)": [[11, "_CPPv4I0000EN6oneapi3dal7preview20connected_components10descriptorE"]], "oneapi::dal::preview::connected_components::descriptor::descriptor (c++ function)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components10descriptor10descriptorERK9Allocator"]], "oneapi::dal::preview::connected_components::descriptor::get_allocator (c++ function)": [[11, "_CPPv4NK6oneapi3dal7preview20connected_components10descriptor13get_allocatorEv"]], "oneapi::dal::preview::connected_components::method::afforest (c++ struct)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components6method8afforestE"]], "oneapi::dal::preview::connected_components::method::by_default (c++ type)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components6method10by_defaultE"]], "oneapi::dal::preview::connected_components::preview::vertex_partitioning (c++ function)": [[11, "_CPPv4I00EN6oneapi3dal7preview20connected_components7preview19vertex_partitioningEN20connected_components26vertex_partitioning_resultERK10DescriptorRK5Graph"]], "oneapi::dal::preview::connected_components::task::by_default (c++ type)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components4task10by_defaultE"]], "oneapi::dal::preview::connected_components::task::vertex_partitioning (c++ struct)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components4task19vertex_partitioningE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_input (c++ class)": [[11, "_CPPv4I00EN6oneapi3dal7preview20connected_components25vertex_partitioning_inputE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_input::graph (c++ member)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input5graphE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_input::vertex_partitioning_input (c++ function)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components25vertex_partitioning_input25vertex_partitioning_inputERK5Graph"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result (c++ class)": [[11, "_CPPv4I0EN6oneapi3dal7preview20connected_components26vertex_partitioning_resultE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result::component_count (c++ member)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result15component_countE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result::labels (c++ member)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result6labelsE"]], "oneapi::dal::preview::connected_components::vertex_partitioning_result::vertex_partitioning_result (c++ function)": [[11, "_CPPv4N6oneapi3dal7preview20connected_components26vertex_partitioning_result26vertex_partitioning_resultEv"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor (c++ class)": [[13, "_CPPv4I0000EN6oneapi3dal7preview20subgraph_isomorphism10descriptorE"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::descriptor (c++ function)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor10descriptorE9Allocator"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::get_allocator (c++ function)": [[13, "_CPPv4NK6oneapi3dal7preview20subgraph_isomorphism10descriptor13get_allocatorEv"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::kind (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor4kindE"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::max_match_count (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor15max_match_countE"]], "oneapi::dal::preview::subgraph_isomorphism::descriptor::semantic_match (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism10descriptor14semantic_matchE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input (c++ class)": [[13, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism20graph_matching_inputE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::graph_matching_input (c++ function)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input20graph_matching_inputERK5GraphRK5Graph"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::pattern_graph (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input13pattern_graphE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_input::target_graph (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism20graph_matching_input12target_graphE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result (c++ class)": [[13, "_CPPv4I0EN6oneapi3dal7preview20subgraph_isomorphism21graph_matching_resultE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::graph_matching_result (c++ function)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result21graph_matching_resultEv"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::match_count (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result11match_countE"]], "oneapi::dal::preview::subgraph_isomorphism::graph_matching_result::vertex_match (c++ member)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism21graph_matching_result12vertex_matchE"]], "oneapi::dal::preview::subgraph_isomorphism::kind (c++ enum)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4kindE"]], "oneapi::dal::preview::subgraph_isomorphism::method::by_default (c++ type)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method10by_defaultE"]], "oneapi::dal::preview::subgraph_isomorphism::method::fast (c++ struct)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism6method4fastE"]], "oneapi::dal::preview::subgraph_isomorphism::preview::graph_matching (c++ function)": [[13, "_CPPv4I00EN6oneapi3dal7preview20subgraph_isomorphism7preview14graph_matchingEN20subgraph_isomorphism21graph_matching_resultERK10DescriptorRK5GraphRK5Graph"]], "oneapi::dal::preview::subgraph_isomorphism::task::by_default (c++ type)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task10by_defaultE"]], "oneapi::dal::preview::subgraph_isomorphism::task::compute (c++ struct)": [[13, "_CPPv4N6oneapi3dal7preview20subgraph_isomorphism4task7computeE"]], "oneapi::dal::linear_kernel::compute (c++ function)": [[16, "_CPPv4I0EN6oneapi3dal13linear_kernel7computeEN13linear_kernel14compute_resultERK10DescriptorRKN13linear_kernel13compute_inputE"]], "oneapi::dal::linear_kernel::compute_input (c++ class)": [[16, "_CPPv4I0EN6oneapi3dal13linear_kernel13compute_inputE"]], "oneapi::dal::linear_kernel::compute_input::compute_input (c++ function)": [[16, "_CPPv4N6oneapi3dal13linear_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::linear_kernel::compute_input::x (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1xE"]], "oneapi::dal::linear_kernel::compute_input::y (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel13compute_input1yE"]], "oneapi::dal::linear_kernel::compute_result (c++ class)": [[16, "_CPPv4I0EN6oneapi3dal13linear_kernel14compute_resultE"]], "oneapi::dal::linear_kernel::compute_result::compute_result (c++ function)": [[16, "_CPPv4N6oneapi3dal13linear_kernel14compute_result14compute_resultEv"]], "oneapi::dal::linear_kernel::compute_result::values (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel14compute_result6valuesE"]], "oneapi::dal::linear_kernel::descriptor (c++ class)": [[16, "_CPPv4I000EN6oneapi3dal13linear_kernel10descriptorE"]], "oneapi::dal::linear_kernel::descriptor::descriptor (c++ function)": [[16, "_CPPv4N6oneapi3dal13linear_kernel10descriptor10descriptorEv"]], "oneapi::dal::linear_kernel::descriptor::scale (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5scaleE"]], "oneapi::dal::linear_kernel::descriptor::shift (c++ member)": [[16, "_CPPv4N6oneapi3dal13linear_kernel10descriptor5shiftE"]], "oneapi::dal::linear_kernel::method::by_default (c++ type)": [[16, "_CPPv4N6oneapi3dal13linear_kernel6method10by_defaultE"]], "oneapi::dal::linear_kernel::method::dense (c++ struct)": [[16, "_CPPv4N6oneapi3dal13linear_kernel6method5denseE"]], "oneapi::dal::linear_kernel::task::by_default (c++ type)": [[16, "_CPPv4N6oneapi3dal13linear_kernel4task10by_defaultE"]], "oneapi::dal::linear_kernel::task::compute (c++ struct)": [[16, "_CPPv4N6oneapi3dal13linear_kernel4task7computeE"]], "oneapi::dal::polynomial_kernel::compute (c++ function)": [[17, "_CPPv4I0EN6oneapi3dal17polynomial_kernel7computeEN17polynomial_kernel14compute_resultERK10DescriptorRKN17polynomial_kernel13compute_inputE"]], "oneapi::dal::polynomial_kernel::compute_input (c++ class)": [[17, "_CPPv4I0EN6oneapi3dal17polynomial_kernel13compute_inputE"]], "oneapi::dal::polynomial_kernel::compute_input::compute_input (c++ function)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::polynomial_kernel::compute_input::x (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1xE"]], "oneapi::dal::polynomial_kernel::compute_input::y (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel13compute_input1yE"]], "oneapi::dal::polynomial_kernel::compute_result (c++ class)": [[17, "_CPPv4I0EN6oneapi3dal17polynomial_kernel14compute_resultE"]], "oneapi::dal::polynomial_kernel::compute_result::compute_result (c++ function)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result14compute_resultEv"]], "oneapi::dal::polynomial_kernel::compute_result::values (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel14compute_result6valuesE"]], "oneapi::dal::polynomial_kernel::descriptor (c++ class)": [[17, "_CPPv4I000EN6oneapi3dal17polynomial_kernel10descriptorE"]], "oneapi::dal::polynomial_kernel::descriptor::degree (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor6degreeE"]], "oneapi::dal::polynomial_kernel::descriptor::descriptor (c++ function)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor10descriptorEv"]], "oneapi::dal::polynomial_kernel::descriptor::scale (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5scaleE"]], "oneapi::dal::polynomial_kernel::descriptor::shift (c++ member)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel10descriptor5shiftE"]], "oneapi::dal::polynomial_kernel::method::by_default (c++ type)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel6method10by_defaultE"]], "oneapi::dal::polynomial_kernel::method::dense (c++ struct)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel6method5denseE"]], "oneapi::dal::polynomial_kernel::task::by_default (c++ type)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel4task10by_defaultE"]], "oneapi::dal::polynomial_kernel::task::compute (c++ struct)": [[17, "_CPPv4N6oneapi3dal17polynomial_kernel4task7computeE"]], "oneapi::dal::rbf_kernel::compute (c++ function)": [[18, "_CPPv4I0EN6oneapi3dal10rbf_kernel7computeEN10rbf_kernel14compute_resultERK10DescriptorRKN10rbf_kernel13compute_inputE"]], "oneapi::dal::rbf_kernel::compute_input (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal10rbf_kernel13compute_inputE"]], "oneapi::dal::rbf_kernel::compute_input::compute_input (c++ function)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::rbf_kernel::compute_input::x (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1xE"]], "oneapi::dal::rbf_kernel::compute_input::y (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel13compute_input1yE"]], "oneapi::dal::rbf_kernel::compute_result (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal10rbf_kernel14compute_resultE"]], "oneapi::dal::rbf_kernel::compute_result::compute_result (c++ function)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result14compute_resultEv"]], "oneapi::dal::rbf_kernel::compute_result::values (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel14compute_result6valuesE"]], "oneapi::dal::rbf_kernel::descriptor (c++ class)": [[18, "_CPPv4I000EN6oneapi3dal10rbf_kernel10descriptorE"]], "oneapi::dal::rbf_kernel::descriptor::descriptor (c++ function)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor10descriptorEv"]], "oneapi::dal::rbf_kernel::descriptor::sigma (c++ member)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel10descriptor5sigmaE"]], "oneapi::dal::rbf_kernel::method::by_default (c++ type)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel6method10by_defaultE"]], "oneapi::dal::rbf_kernel::method::dense (c++ struct)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel6method5denseE"]], "oneapi::dal::rbf_kernel::task::by_default (c++ type)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel4task10by_defaultE"]], "oneapi::dal::rbf_kernel::task::compute (c++ struct)": [[18, "_CPPv4N6oneapi3dal10rbf_kernel4task7computeE"]], "oneapi::dal::sigmoid_kernel::compute (c++ function)": [[19, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel7computeEN14sigmoid_kernel14compute_resultERK10DescriptorRKN14sigmoid_kernel13compute_inputE"]], "oneapi::dal::sigmoid_kernel::compute_input (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel13compute_inputE"]], "oneapi::dal::sigmoid_kernel::compute_input::compute_input (c++ function)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input13compute_inputERK5tableRK5table"]], "oneapi::dal::sigmoid_kernel::compute_input::x (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1xE"]], "oneapi::dal::sigmoid_kernel::compute_input::y (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel13compute_input1yE"]], "oneapi::dal::sigmoid_kernel::compute_result (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal14sigmoid_kernel14compute_resultE"]], "oneapi::dal::sigmoid_kernel::compute_result::compute_result (c++ function)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result14compute_resultEv"]], "oneapi::dal::sigmoid_kernel::compute_result::values (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel14compute_result6valuesE"]], "oneapi::dal::sigmoid_kernel::descriptor (c++ class)": [[19, "_CPPv4I000EN6oneapi3dal14sigmoid_kernel10descriptorE"]], "oneapi::dal::sigmoid_kernel::descriptor::descriptor (c++ function)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor10descriptorEv"]], "oneapi::dal::sigmoid_kernel::descriptor::scale (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5scaleE"]], "oneapi::dal::sigmoid_kernel::descriptor::shift (c++ member)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel10descriptor5shiftE"]], "oneapi::dal::sigmoid_kernel::method::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel6method10by_defaultE"]], "oneapi::dal::sigmoid_kernel::method::dense (c++ struct)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel6method5denseE"]], "oneapi::dal::sigmoid_kernel::task::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel4task10by_defaultE"]], "oneapi::dal::sigmoid_kernel::task::compute (c++ struct)": [[19, "_CPPv4N6oneapi3dal14sigmoid_kernel4task7computeE"]], "oneapi::dal::knn::descriptor (c++ class)": [[21, "_CPPv4I0000EN6oneapi3dal3knn10descriptorE"]], "oneapi::dal::knn::descriptor::class_count (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE"]], "oneapi::dal::knn::descriptor::descriptor (c++ function)": [[21, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tE"], [21, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tERK10distance_t"], [21, "_CPPv4I00EN6oneapi3dal3knn10descriptor10descriptorENSt7int64_tERK10distance_t"], [21, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE"]], "oneapi::dal::knn::descriptor::distance (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor8distanceE"]], "oneapi::dal::knn::descriptor::neighbor_count (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE"]], "oneapi::dal::knn::descriptor::result_options (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor14result_optionsE"]], "oneapi::dal::knn::descriptor::voting_mode (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn10descriptor11voting_modeE"]], "oneapi::dal::knn::infer (c++ function)": [[21, "_CPPv4I0EN6oneapi3dal3knn5inferEN3knn12infer_resultERK10DescriptorRKN3knn11infer_inputE"]], "oneapi::dal::knn::infer_input (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE"]], "oneapi::dal::knn::infer_input::data (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11infer_input4dataE"]], "oneapi::dal::knn::infer_input::infer_input (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5tableRK5modelI4TaskE"]], "oneapi::dal::knn::infer_input::model (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11infer_input5modelE"]], "oneapi::dal::knn::infer_result (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE"]], "oneapi::dal::knn::infer_result::distances (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result9distancesE"]], "oneapi::dal::knn::infer_result::indices (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result7indicesE"]], "oneapi::dal::knn::infer_result::infer_result (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv"]], "oneapi::dal::knn::infer_result::labels (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result6labelsE"]], "oneapi::dal::knn::infer_result::responses (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result9responsesE"]], "oneapi::dal::knn::infer_result::result_options (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12infer_result14result_optionsE"]], "oneapi::dal::knn::method::brute_force (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn6method11brute_forceE"]], "oneapi::dal::knn::method::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal3knn6method10by_defaultE"]], "oneapi::dal::knn::method::kd_tree (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn6method7kd_treeE"]], "oneapi::dal::knn::model (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn5modelE"]], "oneapi::dal::knn::model::model (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn5model5modelEv"]], "oneapi::dal::knn::result_option_id (c++ class)": [[21, "_CPPv4N6oneapi3dal3knn16result_option_idE"]], "oneapi::dal::knn::result_option_id::result_option_id (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idERK21result_option_id_base"], [21, "_CPPv4N6oneapi3dal3knn16result_option_id16result_option_idEv"]], "oneapi::dal::knn::task::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal3knn4task10by_defaultE"]], "oneapi::dal::knn::task::classification (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn4task14classificationE"]], "oneapi::dal::knn::task::regression (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn4task10regressionE"]], "oneapi::dal::knn::task::search (c++ struct)": [[21, "_CPPv4N6oneapi3dal3knn4task6searchE"]], "oneapi::dal::knn::train (c++ function)": [[21, "_CPPv4I0EN6oneapi3dal3knn5trainEN3knn12train_resultERK10DescriptorRKN3knn11train_inputE"]], "oneapi::dal::knn::train_input (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn11train_inputE"]], "oneapi::dal::knn::train_input::data (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11train_input4dataE"]], "oneapi::dal::knn::train_input::labels (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11train_input6labelsE"]], "oneapi::dal::knn::train_input::responses (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn11train_input9responsesE"]], "oneapi::dal::knn::train_input::train_input (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5table"], [21, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::knn::train_result (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3knn12train_resultE"]], "oneapi::dal::knn::train_result::model (c++ member)": [[21, "_CPPv4N6oneapi3dal3knn12train_result5modelE"]], "oneapi::dal::knn::train_result::train_result (c++ function)": [[21, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv"]], "oneapi::dal::knn::voting_mode (c++ enum)": [[21, "_CPPv4N6oneapi3dal3knn11voting_modeE"]], "oneapi::dal::logloss_objective::descriptor (c++ class)": [[23, "_CPPv4I000EN6oneapi3dal17logloss_objective10descriptorE"]], "oneapi::dal::logloss_objective::descriptor::descriptor (c++ function)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor10descriptorEddb"]], "oneapi::dal::logloss_objective::descriptor::intercept_flag (c++ member)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor14intercept_flagE"]], "oneapi::dal::logloss_objective::descriptor::l1_regularization_coefficient (c++ member)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l1_regularization_coefficientE"]], "oneapi::dal::logloss_objective::descriptor::l2_regularization_coefficient (c++ member)": [[23, "_CPPv4N6oneapi3dal17logloss_objective10descriptor29l2_regularization_coefficientE"]], "oneapi::dal::logloss_objective::method::by_default (c++ type)": [[23, "_CPPv4N6oneapi3dal17logloss_objective6method10by_defaultE"]], "oneapi::dal::logloss_objective::method::dense_batch (c++ struct)": [[23, "_CPPv4N6oneapi3dal17logloss_objective6method11dense_batchE"]], "oneapi::dal::logloss_objective::task::by_default (c++ type)": [[23, "_CPPv4N6oneapi3dal17logloss_objective4task10by_defaultE"]], "oneapi::dal::logloss_objective::task::compute (c++ struct)": [[23, "_CPPv4N6oneapi3dal17logloss_objective4task7computeE"]], "oneapi::dal::objective_function::compute (c++ function)": [[24, "_CPPv4I0EN6oneapi3dal18objective_function7computeEN18objective_function14compute_resultERK10DescriptorRKN18objective_function13compute_inputE"]], "oneapi::dal::objective_function::compute_input (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal18objective_function13compute_inputE"]], "oneapi::dal::objective_function::compute_input::compute_input (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input13compute_inputERK5tableRK5tableRK5table"]], "oneapi::dal::objective_function::compute_input::data (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input4dataE"]], "oneapi::dal::objective_function::compute_input::parameters (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input10parametersE"]], "oneapi::dal::objective_function::compute_input::responses (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function13compute_input9responsesE"]], "oneapi::dal::objective_function::compute_result (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal18objective_function14compute_resultE"]], "oneapi::dal::objective_function::compute_result::compute_result (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result14compute_resultEv"]], "oneapi::dal::objective_function::compute_result::gradient (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result8gradientE"]], "oneapi::dal::objective_function::compute_result::hessian (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result7hessianE"]], "oneapi::dal::objective_function::compute_result::result_options (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result14result_optionsE"]], "oneapi::dal::objective_function::compute_result::value (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function14compute_result5valueE"]], "oneapi::dal::objective_function::descriptor (c++ class)": [[24, "_CPPv4I0000EN6oneapi3dal18objective_function10descriptorE"]], "oneapi::dal::objective_function::descriptor::descriptor (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorERK11objective_t"], [24, "_CPPv4N6oneapi3dal18objective_function10descriptor10descriptorEv"]], "oneapi::dal::objective_function::descriptor::objective (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function10descriptor9objectiveE"]], "oneapi::dal::objective_function::descriptor::result_options (c++ member)": [[24, "_CPPv4N6oneapi3dal18objective_function10descriptor14result_optionsE"]], "oneapi::dal::objective_function::method::by_default (c++ type)": [[24, "_CPPv4N6oneapi3dal18objective_function6method10by_defaultE"]], "oneapi::dal::objective_function::method::dense_batch (c++ struct)": [[24, "_CPPv4N6oneapi3dal18objective_function6method11dense_batchE"]], "oneapi::dal::objective_function::result_option_id (c++ class)": [[24, "_CPPv4N6oneapi3dal18objective_function16result_option_idE"]], "oneapi::dal::objective_function::result_option_id::result_option_id (c++ function)": [[24, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idERK21result_option_id_base"], [24, "_CPPv4N6oneapi3dal18objective_function16result_option_id16result_option_idEv"]], "oneapi::dal::objective_function::task::by_default (c++ type)": [[24, "_CPPv4N6oneapi3dal18objective_function4task10by_defaultE"]], "oneapi::dal::objective_function::task::compute (c++ struct)": [[24, "_CPPv4N6oneapi3dal18objective_function4task7computeE"]], "oneapi::dal::chebyshev_distance::descriptor (c++ class)": [[25, "_CPPv4I000EN6oneapi3dal18chebyshev_distance10descriptorE"]], "oneapi::dal::chebyshev_distance::descriptor::descriptor (c++ function)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance10descriptor10descriptorEv"]], "oneapi::dal::chebyshev_distance::method::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance6method10by_defaultE"]], "oneapi::dal::chebyshev_distance::method::dense (c++ struct)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance6method5denseE"]], "oneapi::dal::chebyshev_distance::task::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance4task10by_defaultE"]], "oneapi::dal::chebyshev_distance::task::compute (c++ struct)": [[25, "_CPPv4N6oneapi3dal18chebyshev_distance4task7computeE"]], "oneapi::dal::cosine_distance::descriptor (c++ class)": [[26, "_CPPv4I000EN6oneapi3dal15cosine_distance10descriptorE"]], "oneapi::dal::cosine_distance::descriptor::descriptor (c++ function)": [[26, "_CPPv4N6oneapi3dal15cosine_distance10descriptor10descriptorEv"]], "oneapi::dal::cosine_distance::method::by_default (c++ type)": [[26, "_CPPv4N6oneapi3dal15cosine_distance6method10by_defaultE"]], "oneapi::dal::cosine_distance::method::dense (c++ struct)": [[26, "_CPPv4N6oneapi3dal15cosine_distance6method5denseE"]], "oneapi::dal::cosine_distance::task::by_default (c++ type)": [[26, "_CPPv4N6oneapi3dal15cosine_distance4task10by_defaultE"]], "oneapi::dal::cosine_distance::task::compute (c++ struct)": [[26, "_CPPv4N6oneapi3dal15cosine_distance4task7computeE"]], "oneapi::dal::minkowski_distance::descriptor (c++ class)": [[28, "_CPPv4I000EN6oneapi3dal18minkowski_distance10descriptorE"]], "oneapi::dal::minkowski_distance::descriptor::degree (c++ member)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor6degreeE"]], "oneapi::dal::minkowski_distance::descriptor::descriptor (c++ function)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEd"], [28, "_CPPv4N6oneapi3dal18minkowski_distance10descriptor10descriptorEv"]], "oneapi::dal::minkowski_distance::method::by_default (c++ type)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance6method10by_defaultE"]], "oneapi::dal::minkowski_distance::method::dense (c++ struct)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance6method5denseE"]], "oneapi::dal::minkowski_distance::task::by_default (c++ type)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance4task10by_defaultE"]], "oneapi::dal::minkowski_distance::task::compute (c++ struct)": [[28, "_CPPv4N6oneapi3dal18minkowski_distance4task7computeE"]], "oneapi::dal::basic_statistics::compute (c++ function)": [[29, "_CPPv4I0EN6oneapi3dal16basic_statistics7computeEN16basic_statistics14compute_resultERK10DescriptorRKN16basic_statistics13compute_inputE"]], "oneapi::dal::basic_statistics::compute_input (c++ class)": [[29, "_CPPv4I0EN6oneapi3dal16basic_statistics13compute_inputE"]], "oneapi::dal::basic_statistics::compute_input::compute_input (c++ function)": [[29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5table"], [29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputERK5tableRK5table"], [29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input13compute_inputEv"]], "oneapi::dal::basic_statistics::compute_input::data (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input4dataE"]], "oneapi::dal::basic_statistics::compute_input::weights (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics13compute_input7weightsE"]], "oneapi::dal::basic_statistics::compute_result (c++ class)": [[29, "_CPPv4I0EN6oneapi3dal16basic_statistics14compute_resultE"]], "oneapi::dal::basic_statistics::compute_result::compute_result (c++ function)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14compute_resultEv"]], "oneapi::dal::basic_statistics::compute_result::max (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3maxE"]], "oneapi::dal::basic_statistics::compute_result::mean (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result4meanE"]], "oneapi::dal::basic_statistics::compute_result::min (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3minE"]], "oneapi::dal::basic_statistics::compute_result::result_options (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result14result_optionsE"]], "oneapi::dal::basic_statistics::compute_result::second_order_raw_moment (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result23second_order_raw_momentE"]], "oneapi::dal::basic_statistics::compute_result::standard_deviation (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result18standard_deviationE"]], "oneapi::dal::basic_statistics::compute_result::sum (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result3sumE"]], "oneapi::dal::basic_statistics::compute_result::sum_squares (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result11sum_squaresE"]], "oneapi::dal::basic_statistics::compute_result::sum_squares_centered (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result20sum_squares_centeredE"]], "oneapi::dal::basic_statistics::compute_result::variance (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result8varianceE"]], "oneapi::dal::basic_statistics::compute_result::variation (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics14compute_result9variationE"]], "oneapi::dal::basic_statistics::descriptor (c++ class)": [[29, "_CPPv4I000EN6oneapi3dal16basic_statistics10descriptorE"]], "oneapi::dal::basic_statistics::descriptor::result_options (c++ member)": [[29, "_CPPv4N6oneapi3dal16basic_statistics10descriptor14result_optionsE"]], "oneapi::dal::basic_statistics::method::by_default (c++ type)": [[29, "_CPPv4N6oneapi3dal16basic_statistics6method10by_defaultE"]], "oneapi::dal::basic_statistics::method::dense (c++ struct)": [[29, "_CPPv4N6oneapi3dal16basic_statistics6method5denseE"]], "oneapi::dal::basic_statistics::task::by_default (c++ type)": [[29, "_CPPv4N6oneapi3dal16basic_statistics4task10by_defaultE"]], "oneapi::dal::basic_statistics::task::compute (c++ struct)": [[29, "_CPPv4N6oneapi3dal16basic_statistics4task7computeE"]], "oneapi::dal::svm::descriptor (c++ class)": [[32, "_CPPv4I0000EN6oneapi3dal3svm10descriptorE"]], "oneapi::dal::svm::descriptor::accuracy_threshold (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor18accuracy_thresholdE"]], "oneapi::dal::svm::descriptor::c (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor1cE"]], "oneapi::dal::svm::descriptor::cache_size (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor10cache_sizeE"]], "oneapi::dal::svm::descriptor::class_count (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor11class_countE"]], "oneapi::dal::svm::descriptor::descriptor (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor10descriptorERK6Kernel"]], "oneapi::dal::svm::descriptor::epsilon (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor7epsilonE"]], "oneapi::dal::svm::descriptor::kernel (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor6kernelE"]], "oneapi::dal::svm::descriptor::max_iteration_count (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor19max_iteration_countE"]], "oneapi::dal::svm::descriptor::nu (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor2nuE"]], "oneapi::dal::svm::descriptor::shrinking (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor9shrinkingE"]], "oneapi::dal::svm::descriptor::tau (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm10descriptor3tauE"]], "oneapi::dal::svm::infer (c++ function)": [[32, "_CPPv4I0EN6oneapi3dal3svm5inferEN3svm12infer_resultERK10DescriptorRKN3svm11infer_inputE"]], "oneapi::dal::svm::infer_input (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm11infer_inputE"]], "oneapi::dal::svm::infer_input::data (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11infer_input4dataE"]], "oneapi::dal::svm::infer_input::infer_input (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::svm::infer_input::model (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11infer_input5modelE"]], "oneapi::dal::svm::infer_result (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm12infer_resultE"]], "oneapi::dal::svm::infer_result::decision_function (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result17decision_functionE"]], "oneapi::dal::svm::infer_result::infer_result (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result12infer_resultEv"]], "oneapi::dal::svm::infer_result::labels (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result6labelsE"]], "oneapi::dal::svm::infer_result::responses (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12infer_result9responsesE"]], "oneapi::dal::svm::method::by_default (c++ type)": [[32, "_CPPv4N6oneapi3dal3svm6method10by_defaultE"]], "oneapi::dal::svm::method::smo (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm6method3smoE"]], "oneapi::dal::svm::method::thunder (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm6method7thunderE"]], "oneapi::dal::svm::model (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm5modelE"]], "oneapi::dal::svm::model::bias (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model4biasE"]], "oneapi::dal::svm::model::biases (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model6biasesE"]], "oneapi::dal::svm::model::coeffs (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model6coeffsE"]], "oneapi::dal::svm::model::first_class_label (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model17first_class_labelE"]], "oneapi::dal::svm::model::first_class_response (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model20first_class_responseE"]], "oneapi::dal::svm::model::get_support_vector_count (c++ function)": [[32, "_CPPv4NK6oneapi3dal3svm5model24get_support_vector_countEv"]], "oneapi::dal::svm::model::model (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm5model5modelEv"]], "oneapi::dal::svm::model::second_class_label (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model18second_class_labelE"]], "oneapi::dal::svm::model::second_class_response (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model21second_class_responseE"]], "oneapi::dal::svm::model::support_vectors (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm5model15support_vectorsE"]], "oneapi::dal::svm::task::by_default (c++ type)": [[32, "_CPPv4N6oneapi3dal3svm4task10by_defaultE"]], "oneapi::dal::svm::task::classification (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task14classificationE"]], "oneapi::dal::svm::task::nu_classification (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task17nu_classificationE"]], "oneapi::dal::svm::task::nu_regression (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task13nu_regressionE"]], "oneapi::dal::svm::task::regression (c++ struct)": [[32, "_CPPv4N6oneapi3dal3svm4task10regressionE"]], "oneapi::dal::svm::train (c++ function)": [[32, "_CPPv4I0EN6oneapi3dal3svm5trainEN3svm12train_resultERK10DescriptorRKN3svm11train_inputE"]], "oneapi::dal::svm::train_input (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm11train_inputE"]], "oneapi::dal::svm::train_input::data (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input4dataE"]], "oneapi::dal::svm::train_input::labels (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input6labelsE"]], "oneapi::dal::svm::train_input::responses (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input9responsesE"]], "oneapi::dal::svm::train_input::train_input (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm11train_input11train_inputERK5tableRK5tableRK5table"]], "oneapi::dal::svm::train_input::weights (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm11train_input7weightsE"]], "oneapi::dal::svm::train_result (c++ class)": [[32, "_CPPv4I0EN6oneapi3dal3svm12train_resultE"]], "oneapi::dal::svm::train_result::bias (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result4biasE"]], "oneapi::dal::svm::train_result::biases (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result6biasesE"]], "oneapi::dal::svm::train_result::coeffs (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result6coeffsE"]], "oneapi::dal::svm::train_result::get_support_vector_count (c++ function)": [[32, "_CPPv4NK6oneapi3dal3svm12train_result24get_support_vector_countEv"]], "oneapi::dal::svm::train_result::model (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result5modelE"]], "oneapi::dal::svm::train_result::support_indices (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result15support_indicesE"]], "oneapi::dal::svm::train_result::support_vectors (c++ member)": [[32, "_CPPv4N6oneapi3dal3svm12train_result15support_vectorsE"]], "oneapi::dal::svm::train_result::train_result (c++ function)": [[32, "_CPPv4N6oneapi3dal3svm12train_result12train_resultEv"]], "oneapi::dal::column_accessor (c++ class)": [[33, "_CPPv4I0EN6oneapi3dal15column_accessorE"]], "oneapi::dal::column_accessor::column_accessor (c++ function)": [[33, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal15column_accessor15column_accessorERK5table"], [33, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERKN6detail13table_builderE"]], "oneapi::dal::column_accessor::pull (c++ function)": [[33, "_CPPv4NK6oneapi3dal15column_accessor4pullENSt7int64_tERK5range"], [33, "_CPPv4NK6oneapi3dal15column_accessor4pullERN3dal5arrayI6data_tEENSt7int64_tERK5range"]], "oneapi::dal::column_accessor::push (c++ function)": [[33, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal15column_accessor4pushEvRKN3dal5arrayI6data_tEENSt7int64_tERK5range"]], "oneapi::dal::csr_accessor (c++ class)": [[34, "_CPPv4I0EN6oneapi3dal12csr_accessorE"]], "oneapi::dal::csr_accessor::csr_accessor (c++ function)": [[34, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12csr_accessor12csr_accessorERK9csr_table"]], "oneapi::dal::csr_accessor::pull (c++ function)": [[34, "_CPPv4NK6oneapi3dal12csr_accessor4pullER7array_dR7array_iR7array_iRK5rangeK15sparse_indexing"], [34, "_CPPv4NK6oneapi3dal12csr_accessor4pullERK5rangeK15sparse_indexing"]], "oneapi::dal::row_accessor (c++ class)": [[35, "_CPPv4I0EN6oneapi3dal12row_accessorE"]], "oneapi::dal::row_accessor::pull (c++ function)": [[35, "_CPPv4NK6oneapi3dal12row_accessor4pullERK5range"], [35, "_CPPv4NK6oneapi3dal12row_accessor4pullERN3dal5arrayI6data_tEERK5range"]], "oneapi::dal::row_accessor::push (c++ function)": [[35, "_CPPv4I0_NSt11enable_if_tIXntNSt10is_const_vI1UEEEiEEEN6oneapi3dal12row_accessor4pushEvRKN3dal5arrayI6data_tEERK5range"]], "oneapi::dal::row_accessor::row_accessor (c++ function)": [[35, "_CPPv4I0_NSt11enable_if_tINSt10is_const_vI1UEEiEEEN6oneapi3dal12row_accessor12row_accessorERK5table"], [35, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERKN6detail13table_builderE"]], "oneapi::dal::array (c++ class)": [[37, "_CPPv4I0EN6oneapi3dal5arrayE"]], "oneapi::dal::array::array (c++ function)": [[37, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI1YEP1KNSt7int64_tE"], [37, "_CPPv4I0EN6oneapi3dal5array5arrayEP1TNSt7int64_tERR7Deleter"], [37, "_CPPv4I0EN6oneapi3dal5array5arrayEPK1TNSt7int64_tERR12ConstDeleter"], [37, "_CPPv4N6oneapi3dal5array5arrayEP6impl_t"], [37, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI1TE"], [37, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrI1TEENSt7int64_tE"], [37, "_CPPv4N6oneapi3dal5array5arrayERKNSt10shared_ptrIK1TEENSt7int64_tE"], [37, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI1TE"], [37, "_CPPv4N6oneapi3dal5array5arrayEv"]], "oneapi::dal::array::empty (c++ function)": [[37, "_CPPv4N6oneapi3dal5array5emptyENSt7int64_tE"]], "oneapi::dal::array::full (c++ function)": [[37, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI1TENSt7int64_tERR1K"]], "oneapi::dal::array::get_count (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array9get_countEv"]], "oneapi::dal::array::get_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array8get_dataEv"]], "oneapi::dal::array::get_mutable_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv"]], "oneapi::dal::array::get_size (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array8get_sizeEv"]], "oneapi::dal::array::get_slice (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array9get_sliceENSt7int64_tENSt7int64_tE"]], "oneapi::dal::array::has_mutable_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv"]], "oneapi::dal::array::need_mutable_data (c++ function)": [[37, "_CPPv4N6oneapi3dal5array17need_mutable_dataEv"]], "oneapi::dal::array::operator= (c++ function)": [[37, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI1TE"], [37, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI1TE"]], "oneapi::dal::array::operator[] (c++ function)": [[37, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE"]], "oneapi::dal::array::reset (c++ function)": [[37, "_CPPv4I0EN6oneapi3dal5array5resetEvP1TNSt7int64_tERR7Deleter"], [37, "_CPPv4I0EN6oneapi3dal5array5resetEvPK1TNSt7int64_tERR12ConstDeleter"], [37, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEP1TNSt7int64_tE"], [37, "_CPPv4I0EN6oneapi3dal5array5resetEvRK5arrayI1YEPK1TNSt7int64_tE"], [37, "_CPPv4N6oneapi3dal5array5resetENSt7int64_tE"], [37, "_CPPv4N6oneapi3dal5array5resetEv"]], "oneapi::dal::array::wrap (c++ function)": [[37, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI1TEP1YNSt7int64_tE"]], "oneapi::dal::array::zeros (c++ function)": [[37, "_CPPv4N6oneapi3dal5array5zerosENSt7int64_tE"]], "oneapi::dal::csv::data_source (c++ class)": [[38, "_CPPv4N6oneapi3dal3csv11data_sourceE"]], "oneapi::dal::csv::data_source::data_source (c++ function)": [[38, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options"], [38, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options"]], "oneapi::dal::csv::data_source::delimiter (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE"]], "oneapi::dal::csv::data_source::file_name (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE"]], "oneapi::dal::csv::data_source::options (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source7optionsE"]], "oneapi::dal::csv::read_args (c++ class)": [[38, "_CPPv4I0EN6oneapi3dal3csv9read_argsE"]], "oneapi::dal::csv::read_args::read_args (c++ function)": [[38, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv"]], "oneapi::dal::read (c++ function)": [[38, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource"]], "oneapi::dal::preview::get_edge_count (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal7preview14get_edge_countE14edge_size_typeI5GraphERK5Graph"]], "oneapi::dal::preview::get_edge_value (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal7preview14get_edge_valueERK20edge_user_value_typeI5GraphERK5Graph11vertex_typeI5GraphE11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_count (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal7preview16get_vertex_countE16vertex_size_typeI5GraphERK5Graph"]], "oneapi::dal::preview::get_vertex_degree (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal7preview17get_vertex_degreeE21vertex_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_neighbors (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal7preview20get_vertex_neighborsE28const_vertex_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_outward_degree (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal7preview25get_vertex_outward_degreeE29vertex_outward_edge_size_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::get_vertex_outward_neighbors (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal7preview28get_vertex_outward_neighborsE36const_vertex_outward_edge_range_typeI5GraphERK5Graph11vertex_typeI5GraphE"]], "oneapi::dal::preview::directed_adjacency_vector_graph (c++ class)": [[43, "_CPPv4I00000EN6oneapi3dal7preview31directed_adjacency_vector_graphE"]], "oneapi::dal::preview::directed_adjacency_vector_graph::directed_adjacency_vector_graph (c++ function)": [[43, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphERR31directed_adjacency_vector_graph"], [43, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graph31directed_adjacency_vector_graphEv"]], "oneapi::dal::preview::directed_adjacency_vector_graph::operator= (c++ function)": [[43, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphaSERR31directed_adjacency_vector_graph"]], "oneapi::dal::preview::directed_adjacency_vector_graph::~directed_adjacency_vector_graph (c++ function)": [[43, "_CPPv4N6oneapi3dal7preview31directed_adjacency_vector_graphD0Ev"]], "oneapi::dal::preview::undirected_adjacency_vector_graph (c++ class)": [[44, "_CPPv4I00000EN6oneapi3dal7preview33undirected_adjacency_vector_graphE"]], "oneapi::dal::preview::undirected_adjacency_vector_graph::operator= (c++ function)": [[44, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphaSERR33undirected_adjacency_vector_graph"]], "oneapi::dal::preview::undirected_adjacency_vector_graph::undirected_adjacency_vector_graph (c++ function)": [[44, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphERR33undirected_adjacency_vector_graph"], [44, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graph33undirected_adjacency_vector_graphEv"]], "oneapi::dal::preview::undirected_adjacency_vector_graph::~undirected_adjacency_vector_graph (c++ function)": [[44, "_CPPv4N6oneapi3dal7preview33undirected_adjacency_vector_graphD0Ev"]], "oneapi::dal::preview::empty_value (c++ struct)": [[45, "_CPPv4N6oneapi3dal7preview11empty_valueE"]], "oneapi::dal::csr_table (c++ class)": [[47, "_CPPv4N6oneapi3dal9csr_tableE"]], "oneapi::dal::csr_table::csr_table (c++ function)": [[47, "_CPPv4I0000EN6oneapi3dal9csr_table9csr_tableEPK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tERR16ConstDataDeleterRR25ConstColumnIndicesDeleterRR22ConstRowOffsetsDeleter15sparse_indexing"], [47, "_CPPv4I0EN6oneapi3dal9csr_table9csr_tableERKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing"], [47, "_CPPv4N6oneapi3dal9csr_table9csr_tableERK5table"], [47, "_CPPv4N6oneapi3dal9csr_table9csr_tableEv"]], "oneapi::dal::csr_table::get_column_indices (c++ function)": [[47, "_CPPv4NK6oneapi3dal9csr_table18get_column_indicesEv"]], "oneapi::dal::csr_table::get_data (c++ function)": [[47, "_CPPv4I0ENK6oneapi3dal9csr_table8get_dataEPK4Datav"], [47, "_CPPv4NK6oneapi3dal9csr_table8get_dataEv"]], "oneapi::dal::csr_table::get_indexing (c++ function)": [[47, "_CPPv4NK6oneapi3dal9csr_table12get_indexingEv"]], "oneapi::dal::csr_table::get_kind (c++ function)": [[47, "_CPPv4NK6oneapi3dal9csr_table8get_kindEv"]], "oneapi::dal::csr_table::get_non_zero_count (c++ function)": [[47, "_CPPv4NK6oneapi3dal9csr_table18get_non_zero_countEv"]], "oneapi::dal::csr_table::get_row_offsets (c++ function)": [[47, "_CPPv4NK6oneapi3dal9csr_table15get_row_offsetsEv"]], "oneapi::dal::csr_table::kind (c++ function)": [[47, "_CPPv4N6oneapi3dal9csr_table4kindEv"]], "oneapi::dal::csr_table::wrap (c++ function)": [[47, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tablePK4DataPKNSt7int64_tEPKNSt7int64_tENSt7int64_tENSt7int64_tE15sparse_indexing"], [47, "_CPPv4I0EN6oneapi3dal9csr_table4wrapE9csr_tableRKN3dal5arrayI4DataEERKN3dal5arrayINSt7int64_tEEERKN3dal5arrayINSt7int64_tEEENSt7int64_tE15sparse_indexing"]], "oneapi::dal::homogen_table (c++ class)": [[48, "_CPPv4N6oneapi3dal13homogen_tableE"]], "oneapi::dal::homogen_table::get_data (c++ function)": [[48, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav"], [48, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv"]], "oneapi::dal::homogen_table::get_kind (c++ function)": [[48, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv"]], "oneapi::dal::homogen_table::homogen_table (c++ function)": [[48, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleter11data_layout"], [48, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableERK5table"], [48, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv"]], "oneapi::dal::homogen_table::kind (c++ function)": [[48, "_CPPv4N6oneapi3dal13homogen_table4kindEv"]], "oneapi::dal::homogen_table::wrap (c++ function)": [[48, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tablePK4DataNSt7int64_tENSt7int64_tE11data_layout"], [48, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN3dal5arrayI4DataEENSt7int64_tENSt7int64_tE11data_layout"]], "oneapi::dal::table (c++ class)": [[49, "_CPPv4N6oneapi3dal5tableE"]], "oneapi::dal::table::get_column_count (c++ function)": [[49, "_CPPv4NK6oneapi3dal5table16get_column_countEv"]], "oneapi::dal::table::get_data_layout (c++ function)": [[49, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv"]], "oneapi::dal::table::get_kind (c++ function)": [[49, "_CPPv4NK6oneapi3dal5table8get_kindEv"]], "oneapi::dal::table::get_metadata (c++ function)": [[49, "_CPPv4NK6oneapi3dal5table12get_metadataEv"]], "oneapi::dal::table::get_row_count (c++ function)": [[49, "_CPPv4NK6oneapi3dal5table13get_row_countEv"]], "oneapi::dal::table::has_data (c++ function)": [[49, "_CPPv4NK6oneapi3dal5table8has_dataEv"]], "oneapi::dal::table::operator= (c++ function)": [[49, "_CPPv4N6oneapi3dal5tableaSERK5table"], [49, "_CPPv4N6oneapi3dal5tableaSERR5table"]], "oneapi::dal::table::table (c++ function)": [[49, "_CPPv4N6oneapi3dal5table5tableERK5table"], [49, "_CPPv4N6oneapi3dal5table5tableERR5table"], [49, "_CPPv4N6oneapi3dal5table5tableEv"]], "oneapi::dal::table_metadata (c++ class)": [[49, "_CPPv4N6oneapi3dal14table_metadataE"]], "oneapi::dal::table_metadata::get_data_type (c++ function)": [[49, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::get_data_types (c++ function)": [[49, "_CPPv4NK6oneapi3dal14table_metadata14get_data_typesEv"]], "oneapi::dal::table_metadata::get_feature_count (c++ function)": [[49, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv"]], "oneapi::dal::table_metadata::get_feature_type (c++ function)": [[49, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::get_feature_types (c++ function)": [[49, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_typesEv"]], "oneapi::dal::table_metadata::table_metadata (c++ function)": [[49, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERKN3dal5arrayI9data_typeEERKN3dal5arrayI12feature_typeEE"], [49, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv"]], "cluster": [[70, "term-cluster"]], "core observation": [[70, "term-core-observation"]], "directly reachable": [[70, "term-directly-reachable"]], "noise observation": [[70, "term-noise-observation"]], "reachable": [[70, "term-reachable"]], "api": [[382, "term-API"]], "accessor": [[382, "term-Accessor"]], "adjacency": [[382, "term-Adjacency"]], "adjacency matrix": [[382, "term-Adjacency-matrix"]], "attribute": [[382, "term-Attribute"]], "batch mode": [[382, "term-Batch-mode"]], "builder": [[382, "term-Builder"]], "csr data": [[382, "term-CSR-data"]], "csv file": [[382, "term-CSV-file"]], "categorical feature": [[382, "term-Categorical-feature"]], "classification": [[382, "term-Classification"]], "clustering": [[382, "term-Clustering"]], "communicator": [[382, "term-Communicator"]], "communicator backend": [[382, "term-Communicator-backend"]], "component": [[382, "term-Component"]], "connected graph": [[382, "term-Connected-graph"]], "contiguous data": [[382, "term-Contiguous-data"]], "continuous feature": [[382, "term-Continuous-feature"]], "dpc++": [[382, "term-DPC"]], "data format": [[382, "term-Data-format"]], "data layout": [[382, "term-Data-layout"]], "data type": [[382, "term-Data-type"]], "dataset": [[382, "term-Dataset"]], "dimensionality reduction": [[382, "term-Dimensionality-reduction"]], "directed graph": [[382, "term-Directed-graph"]], "edge index": [[382, "term-Edge-index"]], "feature": [[382, "term-Feature"]], "feature vector": [[382, "term-Feature-vector"]], "flat data": [[382, "term-Flat-data"]], "getter": [[382, "term-Getter"]], "graph": [[382, "term-Graph"]], "heterogeneous data": [[382, "term-Heterogeneous-data"]], "homogeneous data": [[382, "term-Homogeneous-data"]], "host/device": [[382, "term-Host-Device"]], "immutability": [[382, "term-Immutability"]], "induced subgraph on the edge set": [[382, "term-Induced-subgraph-on-the-edge-set"]], "induced subgraph on the vertex set": [[382, "term-Induced-subgraph-on-the-vertex-set"]], "inference": [[382, "term-Inference"]], "inference set": [[382, "term-Inference-set"]], "interval feature": [[382, "term-Interval-feature"]], "jit": [[382, "term-JIT"]], "kernel": [[382, "term-Kernel"]], "label": [[382, "term-Label"]], "metadata": [[382, "term-Metadata"]], "model": [[382, "term-Model"]], "nominal feature": [[382, "term-Nominal-feature"]], "nu-classification": [[382, "term-Nu-classification"]], "nu-regression": [[382, "term-Nu-regression"]], "observation": [[382, "term-Observation"]], "online mode": [[382, "term-Online-mode"]], "ordinal feature": [[382, "term-Ordinal-feature"]], "outlier": [[382, "term-Outlier"]], "ratio feature": [[382, "term-Ratio-feature"]], "reference-counted object": [[382, "term-Reference-counted-object"]], "regression": [[382, "term-Regression"]], "response": [[382, "term-Response"]], "result options:": [[382, "term-Result-options"]], "spir-v": [[382, "term-SPIR-V"]], "spmd": [[382, "term-SPMD"]], "sycl": [[382, "term-SYCL"]], "search": [[382, "term-Search"]], "self-loop": [[382, "term-Self-loop"]], "setter": [[382, "term-Setter"]], "subgraph": [[382, "term-Subgraph"]], "supervised learning": [[382, "term-Supervised-learning"]], "table": [[382, "term-Table"]], "topology": [[382, "term-Topology"]], "training": [[382, "term-Training"]], "training set": [[382, "term-Training-set"]], "undirected graph": [[382, "term-Undirected-graph"]], "unsupervised learning": [[382, "term-Unsupervised-learning"]], "unweighted graph": [[382, "term-Unweighted-graph"]], "vertex index": [[382, "term-Vertex-index"]], "walk": [[382, "term-Walk"]], "weight": [[382, "term-Weight"]], "weighted graph": [[382, "term-Weighted-graph"]], "workload": [[382, "term-Workload"]]}})