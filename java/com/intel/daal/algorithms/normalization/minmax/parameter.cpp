/* file: parameter.cpp */
/*******************************************************************************
* Copyright 2014 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

#include "daal.h"
#include "com_intel_daal_algorithms_normalization_minmax_Parameter.h"

using namespace daal;
using namespace daal::algorithms;
using namespace daal::services;

using normalization::minmax::ParameterBase;

/*
 * Class:     com_intel_daal_algorithms_normalization_minmax_Parameter
 * Method:    cSetMoments
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_normalization_minmax_Parameter_cSetMoments(JNIEnv * env, jobject thisObj, jlong parAddr,
                                                                                                 jlong momentsAdr)
{
    auto parameter        = reinterpret_cast<ParameterBase *>(parAddr);
    auto momentsAlg       = reinterpret_cast<SharedPtr<AlgorithmIface> *>(momentsAdr);
    auto momentsBatchImpl = staticPointerCast<daal::algorithms::low_order_moments::BatchImpl>(*momentsAlg);

    parameter->moments = momentsBatchImpl;
}

/*
 * Class:     com_intel_daal_algorithms_normalization_minmax_Parameter
 * Method:    cGetLowerBound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_intel_daal_algorithms_normalization_minmax_Parameter_cGetLowerBound(JNIEnv * env, jobject thisObj, jlong parAddr)
{
    return (jdouble)(reinterpret_cast<ParameterBase *>(parAddr)->lowerBound);
}

/*
 * Class:     com_intel_daal_algorithms_normalization_minmax_Parameter
 * Method:    cSetLowerBound
 * Signature:(JD)I
 */
JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_normalization_minmax_Parameter_cSetLowerBound(JNIEnv * env, jobject thisObj, jlong parAddr,
                                                                                                    jdouble lowerBound)
{
    reinterpret_cast<ParameterBase *>(parAddr)->lowerBound = lowerBound;
}

/*
 * Class:     com_intel_daal_algorithms_normalization_minmax_Parameter
 * Method:    cGetUpperBound
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_intel_daal_algorithms_normalization_minmax_Parameter_cGetUpperBound(JNIEnv * env, jobject thisObj, jlong parAddr)
{
    return (jdouble)(reinterpret_cast<ParameterBase *>(parAddr)->upperBound);
}

/*
 * Class:     com_intel_daal_algorithms_normalization_minmax_Parameter
 * Method:    cSetUpperBound
 * Signature:(JD)I
 */
JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_normalization_minmax_Parameter_cSetUpperBound(JNIEnv * env, jobject thisObj, jlong parAddr,
                                                                                                    jdouble upperBound)
{
    reinterpret_cast<ParameterBase *>(parAddr)->upperBound = upperBound;
}
