/* file: predict_input.cpp */
/*******************************************************************************
* Copyright 2014-2022 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

#include "daal.h"
#include "com_intel_daal_algorithms_decision_tree_regression_prediction_PredictionInput.h"

#include "com/intel/daal/common_helpers.h"

USING_COMMON_NAMESPACES()

namespace dtr  = daal::algorithms::decision_tree::regression;
namespace dtrp = daal::algorithms::decision_tree::regression::prediction;

/*
* Class:     com_intel_daal_algorithms_decision_tree_regression_prediction_PredictionInput
* Method:    cSetInputTable
* Signature: (JIJ)V
*/
JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_decision_1tree_regression_prediction_PredictionInput_cSetInputTable(JNIEnv * env,
                                                                                                                          jobject thisObj,
                                                                                                                          jlong inputAddr, jint id,
                                                                                                                          jlong ntAddr)
{
    jniInput<dtrp::Input>::set<dtrp::NumericTableInputId, NumericTable>(inputAddr, id, ntAddr);
}

/*
* Class:     com_intel_daal_algorithms_decision_tree_regression_prediction_PredictionInput
* Method:    cGetInputTable
* Signature: (JI)J
*/
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_decision_1tree_regression_prediction_PredictionInput_cGetInputTable(JNIEnv * env,
                                                                                                                           jobject thisObj,
                                                                                                                           jlong inputAddr, jint id)
{
    return jniInput<dtrp::Input>::get<dtrp::NumericTableInputId, NumericTable>(inputAddr, id);
}

/*
* Class:     com_intel_daal_algorithms_decision_tree_regression_prediction_PredictionInput
* Method:    cSetInputModel
* Signature: (JIJ)V
*/
JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_decision_1tree_regression_prediction_PredictionInput_cSetInputModel(JNIEnv * env,
                                                                                                                          jobject thisObj,
                                                                                                                          jlong inputAddr, jint id,
                                                                                                                          jlong modelAddr)
{
    jniInput<dtrp::Input>::set<dtrp::ModelInputId, dtr::Model>(inputAddr, id, modelAddr);
}

/*
* Class:     com_intel_daal_algorithms_decision_tree_regression_prediction_PredictionInput
* Method:    cGetInputModel
* Signature: (JI)J
*/
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_decision_1tree_regression_prediction_PredictionInput_cGetInputModel(JNIEnv * env,
                                                                                                                           jobject thisObj,
                                                                                                                           jlong inputAddr, jint id)
{
    return jniInput<dtrp::Input>::get<dtrp::ModelInputId, dtr::Model>(inputAddr, id);
}
